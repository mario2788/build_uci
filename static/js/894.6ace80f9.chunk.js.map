{"version":3,"file":"static/js/894.6ace80f9.chunk.js","mappings":"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","sources":["components/uci/components/monitorPaciente/Tabs.jsx","components/uci/components/dashboard/DashBox .jsx","components/uci/components/dashboard/meanArray.js","components/uci/components/dashboard/PlotGraficas.js","components/uci/components/dashboard/DashContentGraficas.jsx","components/uci/components/dashboard/PlotSindromatico.js","components/uci/components/dashboard/DashContentSindro.jsx","components/uci/components/dashboard/BoxSindromatico.jsx","components/uci/components/dashboard/PlotMedicacion.js","components/uci/components/dashboard/helpers/Square.jsx","components/uci/components/helpers/processValueDate.js","components/uci/components/respiratorio/getData.js","components/uci/components/dashboard/Ventilacion.jsx","components/uci/components/dashboard/helpers/getMedicacion.js","components/uci/components/dashboard/helpers/dataFormat.js","components/uci/components/dashboard/helpers/to24hours.js","components/uci/components/dashboard/helpers/variablesControlHemo.js","components/uci/components/dashboard/helpers/getInfo.js","components/uci/components/dashboard/Dashboard.jsx","components/uci/components/laboratorio/Laboratorio.jsx","components/uci/components/respiratorio/PlotGrafica.js","components/uci/components/respiratorio/Barra.jsx","components/uci/components/respiratorio/CellText.jsx","components/uci/components/respiratorio/getParametros.js","components/uci/components/respiratorio/Square.jsx","components/uci/components/respiratorio/makeAlerts.js","components/uci/components/respiratorio/PlotFlowRespiratorio.js","components/uci/components/respiratorio/BarraPlot.jsx","components/uci/components/respiratorio/Info.jsx","components/uci/components/respiratorio/Catalogo.jsx","components/uci/components/respiratorio/TimeLine.jsx","components/uci/components/respiratorio/difHoraria.js","components/uci/components/respiratorio/Block.jsx","components/uci/components/respiratorio/Respiratorio.jsx","components/uci/components/respiratorio/getLabels.js","components/uci/components/enfermería/helpers/extractData.js","components/uci/components/enfermería/helpers/orderJornada.js","components/uci/components/enfermería/helpers/getDataEnfermeria.js","components/uci/components/enfermería/PlotGantt.jsx","components/uci/components/enfermería/Enfermeria.jsx","components/uci/components/balance/PlotDailyCum.js","components/uci/components/balance/BalanceTab.jsx","components/uci/components/historia/components/Square.jsx","components/uci/components/historia/components/CheckBox.jsx","components/uci/components/historia/HistoriaTab.jsx","components/uci/components/timeLine/PlotTimeLine.js","components/uci/components/timeLine/TimeLine.jsx","components/uci/Monitor.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport { Box,  Grid, Button} from '@mui/material';\n// import { MediaQuery } from '../../MediaQuery';\nimport {Stl } from '../../Stl'\n\nimport { SubTitle } from '../elements/SubTitle' ;\nimport { Field } from '../elements/Field' ;\n\nexport const Tabs = (stl)=>{\n\n     const classes = Stl() ;\n     // const {_lg} = MediaQuery() ;\n\n     const [idx,setIdx] = useState({\n          value:0\n     });\n     const changeIdx = (idx)=>{\n          setIdx({value:idx})\n     };\n\n     return(\n          {\n               tabObj:()=>{\n                    return(\n                         <Box\n                              mt={1} px={1} py={1}\n                              className={classes.bg_white}\n                         >\n                              <Grid\n                                   container\n                                   direction='row'\n                                   wrap= { 'nowrap' }\n                                   spacing={1}\n                                   coloumns={21}\n                              >\n                              {\n                                   [    'DASHBOARD',\n                                        'LABORATORIO',\n                                        'IMAGENES',\n                                        'RESPIRATORIO',\n                                        'ENFERMERÍA',\n                                        'BALANCE',\n                                        'HISTORIA'\n                                   ].map( (value,indx) =>\n\n                                        <Grid\n                                             item xs={3}\n                                             key={indx}\n                                             style={{display:'flex'}}\n                                        >\n                                             <Button\n                                                  variant='contained'\n                                                  color='primary'\n                                                  fullWidth={true}\n                                                  className={ [indx===idx.value ? classes.bg_white : classes.bg_blue , classes.button_tab].join(' ') }\n                                                  onClick={ ()=>{ changeIdx(indx) } }\n                                             >\n                                                  {\n                                                       indx===idx.value\n                                                            ? <Field color={'blue'}>\n                                                                 {value}\n                                                              </Field>\n                                                            : <SubTitle color={'white'}>\n                                                                 {value}\n                                                              </SubTitle>\n                                                  }\n\n                                             </Button>\n                                        </Grid>\n                                   )}\n                              </Grid>\n                         </Box>\n                    )\n               },\n               tabIndex:idx.value\n          }\n     );\n};\n","import React from 'react';\nimport { Box } from '@mui/material' ;\n\nimport { Field } from '../elements/Field' ;\n\nexport const DashBox  = (props) => {\n\n     const classes= props.stl ;\n\n     return (\n          <Box\n               mt={1}\n               className={classes.bg_white}\n               spacing={1}\n          >\n               <Box\n                    className={classes.bg_blue}\n                    pl={2}\n                    py={1}\n               >\n                    <Field color={'white'}>\n                         {props.title}\n                    </Field>\n               </Box>\n               <Box className={[classes.px, classes.py].join(' ')}>\n                    {props.children}\n               </Box>\n          </Box>\n     )\n}\n","\nexport const meanArray = (array)=>{\n     \n     let mean = 0 ;\n\n     for (let idx = 0; idx < array.length; idx++) {\n          mean = (mean*idx + array[idx][0])/(idx+1) ;\n     }\n\n     return( mean.toFixed(1) );\n\n}","import React,{useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\n\nimport { meanArray } from './meanArray' ;\n\nconst Plot = ({ data, svgRef, _xl, _lg } ) => {\n\n     const color_fill = 'rgba(0, 91, 165, 1)';\n     const date =  (hour) => new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-') + hour ) ;\n\n     const points = data.array\n                         .sort( (a,b) => a[1].split(':')[0] - b[1].split(':')[0])\n                         .map( array => [\n                              array[0],\n                              date( ` ${array[1]}:00` ),\n                              array[1]\n                         ]);\n\n     const prom =   meanArray(data.array)\n\n     const margin = {\n          top:11,\n          right:_xl?35:_lg?25:20 ,\n          bottom:_xl?24:_lg?21:20,\n          left:_lg?30:12,\n          m:_xl?20:_lg?20:20,\n          offSetY:_lg?30:18\n     } ;\n\n     const fontSize = _xl ? '14px' : _lg ? '11px': '9px';\n\n     const svgEl = d3.select(svgRef.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width}`)\n                    .attr(\"height\",`${height}`)\n\n     const  xScale = d3.scaleTime()\n                         .domain(\n                              [\n                                   date( ' 00:00:00' ) ,\n                                   date( ' 23:59:00' )\n                              ]\n                         )\n                         .range([ margin.left + margin.m , width-margin.right ])\n                         .nice() ;\n\n     // Insercion del eje x Dia\n          svg.append(\"g\")\n               .attr(\"transform\", `translate(0, ${height-margin.bottom})`)\n               .call( d3.axisBottom(xScale).ticks(6) )\n               .attr(\"font-size\", fontSize)\n               .attr(\"color\", color_fill )\n               .attr('opacity','0.85')\n               .selectAll(\"text\")\n               .attr(\"transform\",\"rotate(17,0,15)\")\n               .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`) ;\n\n     // const  xScaleDia = d3.scaleTime()\n     //                     .domain(\n     //                          [\n     //                               new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-')+' 06:00:00' ) ,\n     //                               new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-')+' 17:59:00' )\n     //                          ]\n     //                     )\n     //                     .range([margin.left + margin.m , 3*width/4])\n     //                     .nice() ;\n     //\n     // const  xScaleNoche = d3.scaleTime()\n     //                     .domain(\n     //                          [\n     //                               new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-')+' 18:00:00' ) ,\n     //                               new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-')+' 23:59:00' )\n     //                          ]\n     //                     ).range([3*width/4, width-margin.right])\n     //                     .nice() ;\n\n     // Insercion del eje x Dia\n     // [\n     //      d3.axisBottom(xScaleDia).ticks(6), // Insercion del eje xDia\n     //      d3.axisBottom(xScaleNoche).ticks(3)  // Insercion del eje xNoche\n     // ].map( scale =>\n     //      svg.append(\"g\")\n     //           .attr(\"transform\", `translate(0, ${height-margin.bottom})`)\n     //           .call( scale )\n     //           .attr(\"font-size\", fontSize)\n     //           .attr(\"color\", color_fill )\n     //           .attr('opacity','0.85')\n     //           .selectAll(\"text\")\n     //           .attr(\"transform\",\"rotate(17,0,15)\")\n     //           .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`)\n     //           .attr('id', (d,i)=> `id_${new Date(d).toLocaleString()\n     //                                         .split(' ')[1]\n     //                                         .split(':')[0]}-${i}`\n     //           )\n     // );\n     // d3.select('#id_12-6').remove() // Borrar la ultima marca del xScaleDia\n\n     const yScale = d3.scaleLinear()\n          .domain( d3.extent(points, (d) => ( d[0] ) )\n                    .reverse()\n                    .map( (n,i) => i===0 ? n+prom/10 : n-prom/10 )\n          )\n          .range([margin.top , height-margin.bottom]) ;\n\n     // objeto del eje y\n     const yAxis = d3.axisLeft(yScale)\n          .tickSizeOuter(0)\n          .ticks(4  ,\"a\")\n          .tickSizeInner( -width+margin.right+margin.m+margin.left )\n\n     // eje y\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(${margin.left+margin.m} ,0)`)\n          .call(yAxis)\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontSize)\n          .attr(\"color\", color_fill )\n          .call( g => g.selectAll(\".tick line\")\n               .attr(\"stroke-opacity\", 0.4)\n               .attr(\"stroke-dasharray\", \"2,3\"))\n\n\n     // cuadrados de jornada\n     svg.append('g')\n          .selectAll('rect')\n          .data( [\n               [ date( ' 00:00:00' ), date( ' 06:00:00' ), '#CCCBF5' ],\n               [ date( ' 06:00:00' ), date( ' 18:00:00' ), '#C0F5E1' ],\n               [ date( ' 18:00:00' ), date( ' 23:59:00' ), '#CCCBF5' ],\n          ])\n          .enter()\n          .append('rect')\n          .attr('x' , d => xScale(d[0]) )\n          .attr('y', margin.top )\n          .attr('height', height - margin.bottom-8 )\n          .attr('width', d => xScale(d[1])-xScale(d[0]) )\n          .attr('fill', d => d[2] )\n          .attr(\"opacity\", 0.60 )\n\n     // Datos\n     // Linea\n     svg.append(\"path\")\n          .datum( points )\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", color_fill)\n          .attr(\"stroke-width\", 0.8 )\n          .attr(\"d\", d3.line()\n               .x( (d,i) => xScale(d[1]) )\n               //      d[2].split(':')[0] >= 6 && d[2].split(':')[0] <= 23 && i <= 8\n               //           ? xScaleDia( d[1] )\n               //           : xScaleNoche( d[1] )\n               // )\n               .y( d =>  yScale(d[0]) )\n               )\n\n     // circulos\n     svg.selectAll(\"circle\")\n          .data( points )\n          .enter()\n          .append(\"circle\")\n          .attr(\"fill\", color_fill)\n          .attr(\"stroke\", \"none\")\n          .attr(\"cx\", (d,i) =>  xScale(d[1]) )\n               // d[2].split(':')[0] >= 6 && d[2].split(':')[0] <=23 && i <= 8\n               //      ? xScaleDia( d[1] )\n               //      : xScaleNoche( d[1] ) )\n          .attr(\"cy\", d => yScale(d[0]) )\n          .attr(\"r\", 3)\n\n\n     // mouse event\n\n     const focus = svg.append('g')\n                    .append('circle')\n                    .style(\"fill\", \"none\")\n                    .attr(\"stroke\", color_fill)\n                    .attr('r', 4.5)\n                    .style(\"opacity\", 0)\n\n     const focusText = svg.append('g')\n                         .append('text')\n                         .style(\"opacity\", 0)\n                         .attr(\"text-anchor\", \"left\")\n                         .attr(\"alignment-baseline\", \"middle\")\n                         .attr(\"font-family\", \"Montserrat\")\n                         .attr(\"fill\", color_fill )\n\n     svg.append('rect')\n          .style(\"fill\", \"none\")\n          .style(\"pointer-events\", \"all\")\n          .attr('x' , margin.left )\n          .attr('y', margin.top )\n          .attr('width', width - margin.right-margin.left )\n          .attr('height', height - margin.bottom )\n          .on('mousemove', (event)=> mousemove(event))\n          .on('mouseover', () => {\n               focus.style(\"opacity\", 1)\n               focusText.style(\"opacity\",1) })\n          .on('mouseout',() => {\n               focus.style(\"opacity\", 0)\n               focusText.style(\"opacity\", 0)\n          });\n\n\n     // const bisect = d3.bisector( d => d ).left ;\n     const dateTime = points.map( d => d[1].getTime() ) ;\n\n     const mousemove = (event) => {\n\n          let x0 = xScale.invert( d3.pointer(event)[0] ) ;\n\n          // let p = bisect( dateTime,  x0.getTime() );\n\n          let p = dateTime.findIndex( arr => Math.abs(arr - x0.getTime())  < 950000  ) >= 0\n                    ?  dateTime.findIndex( arr => Math.abs(arr - x0.getTime())  < 950000  )\n                    :  12\n\n          if( p >= points.length ) return ;\n\n          focus.attr(\"cx\", xScale( points[p][1] ))\n               .attr(\"cy\", yScale( points[p][0] ))\n\n          focusText.text(`${points[p][0]} - ${points[p][1].toLocaleString().split(', ')[1].split(':').reduce( (acc,_,idx,arr) => acc = `${arr[0]}:${arr[1]}${arr[2].split(' ')[1].replace(/[. ]/g,'')}`)} `)\n               .attr(\"x\", margin.left +margin.m )\n               .attr(\"y\", margin.top-1)\n     } ;\n\n};\n\nexport const PlotGraficas =({data})=>{\n\n     const svgRef = React.useRef(null);\n\n     const { _xl, _lg } = MediaQuery() ;\n\n     useEffect(() => {\n          Plot({ data, svgRef,_xl, _lg })\n     },[data, svgRef,_xl, _lg])\n\n     return(\n          <svg ref={svgRef} width={'100%'} height={_xl?'142':'100'} />\n     );\n}\n","import React from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { PlotGraficas } from './PlotGraficas';\nimport { meanArray } from './meanArray';\n\nimport { SubTitle } from '../elements/SubTitle' ;\n\nexport const DashContentGraficas = ( {data} )=>{\n\n          return(\n               <Box>\n                    <Grid\n                         container\n                         spacing={1}\n                    >\n                         <Grid\n                              item xs={2}\n                              container\n                              direction=\"column\"\n                              justifyContent=\"flex-start\"\n                              alignItems=\"center\"\n                         >\n\n                              <SubTitle>\n                                   { data.units }\n                              </SubTitle>\n                              <SubTitle>\n                                   { meanArray(data.array) }\n                              </SubTitle>\n\n                         </Grid>\n\n                         <Grid item xs={10}>\n                              <Box >\n                                  <PlotGraficas data={data}></PlotGraficas>\n                              </Box>\n                         </Grid>\n\n                    </Grid>\n               </Box>\n          );\n};\n","import React,{useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\n\n\nexport const PlotSindromatico =({data,n})=>{\n\n     const {_xl,_lg} = MediaQuery();\n\n     const svgSindro = React.useRef(null);\n\n     useEffect(() => {\n          Plot( svgSindro, data, n, _xl, _lg );\n     },[data, n, _xl, _lg ])\n\n     return(\n          <svg ref={svgSindro} width={'100%'} height={ _xl ? '322' : _lg? '258' :'221' } />\n     );\n};\n\n\nconst Plot = ( svgSindro, data, nVertices, _xl, _lg ) => {\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const margin = {top:10, right: 2, bottom: 15, left: 2, m:2} ;\n     const color_fill = 'rgba(0, 91, 165, 1)' ;\n     const ofst_mag = _xl ? 20 : _lg ? 18 : 15 ;\n\n\n     const width = svgEl._groups[0][0].clientWidth - margin.left - margin.right ;\n     const height = svgEl._groups[0][0].clientHeight - margin.top - margin.bottom ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`) ;\n\n     const pi = Math.PI, ang_i = 2*pi/nVertices;\n\n     const Cos = (ang) => Math.cos(ang) ;\n     const Sen = (ang) => Math.sin(ang) ;\n\n     const beta = 20*pi/180 ; // Define el angulo de los puntos adyacentes a la linea pricipal del rombo\n     const a =  0.65 ;   // Fracción del radio\n\n     const rb = _xl ? 45 : _lg ? 30 : 15 ;\n     const r =  (width - rb*margin.left - rb*margin.right)/2;\n\n     const fontSize = _xl ? '22px' : _lg ? '16px': '12px' ;\n     const fontLabel = _xl ? '25px' : _lg ? '19px': '15px' ;\n\n     //Centro del plano\n     const xc = width/2;\n     const yc = height/2 ;\n\n     // puntos en el plano, vertices del poligono\n     const pX = (i) => r*Cos(i*ang_i) + xc  ;\n     const pY = (i) => r*Sen(i*ang_i) + yc  ;\n\n     // Creacion de datos para los  vertices\n     const points_poly = [...Array(nVertices)].map( (_,idx) => {\n\n          //Creacion de los rombos:\n\n          // Escala del parametro variable:\n          let varScale = d3.scaleLinear()\n               .domain( data[idx].dom )\n               .range([r/3,r]);\n\n          // Escala de color\n          let colorScale = d3.scaleLinear()\n               .domain( data[idx].dom )\n               .range( data[idx].color );\n\n          // rombo, p longitud del rombo\n          let p = data[idx].value < data[idx].dom[0]\n                    ? varScale( data[idx].dom[0] )\n                    : data[idx].value > data[idx].dom[1]\n                         ? varScale( data[idx].dom[1] )\n                         : varScale(data[idx].value) ;\n\n          let rombo = [] ;\n          rombo.push([xc,yc]) ; // vertice centro\n          rombo.push( [xc + a*p*Cos(beta+ang_i*idx) , yc + a*p*Sen(beta+ang_i*idx)] ) ; // vertice paralelo 1\n          rombo.push( [xc + p*Cos(ang_i*idx) , yc + p*Sen(ang_i*idx)] ) ; // vertice  extremo\n          rombo.push( [xc + a*p*Cos(-beta+ang_i*idx) , yc + a*p*Sen(-beta+ang_i*idx)] ) ; // vertice paralelo 2\n\n          let color = colorScale(\n                              data[idx].value < data[idx].dom[0]\n                                   ? data[idx].dom[0]\n                                   : data[idx].value > data[idx].dom[1]\n                                        ? data[idx].dom[1]\n                                        : data[idx].value\n                         )\n\n          // dibujo del rombo\n          svg.append(\"polygon\")\n               .attr(\"fill\", color )\n               .attr(\"stroke\", color )\n               .attr(\"stroke-width\", 3)\n               .attr(\"points\", d3.polygonHull(rombo) )\n               // .attr(\"opacity\",'0.75')\n\n          // texto de magnitud\n          svg.append(\"text\")\n               .text((d) => data[idx].value )\n               .attr(\"x\", rombo[2][0] )\n               .attr(\"y\", (d,i) => { \n                    if( rombo[2][1]  > yc){\n                         return rombo[2][1] + ofst_mag\n                    };\n                    return rombo[2][1]\n               })\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", fontSize )\n               .attr(\"fill\", color_fill )\n               .attr(\"text-anchor\", (d,i) => {\n                    if( rombo[2][0] < xc ){\n                         return \"start\"\n                    }\n                    return 'start'\n               })\n\n          return [pX(idx), pY(idx)]\n     });\n\n     // poligono padre\n     svg.append(\"polygon\")\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", color_fill)\n          .attr(\"stroke-width\", _xl?2:1)\n          .attr(\"points\", d3.polygonHull(points_poly) )\n          .attr(\"stroke\", color_fill);\n\n     const textTotal = (e, d, flag) => {\n          \n          if(flag){\n               document.getElementById(`${d.name}_id`).innerHTML =  d.name ;\n          }\n          else{\n               document.getElementById(`${d.name}_id`).innerHTML =  '';\n          }\n     };\n\n     // nombres\n     svg.selectAll(null)\n          .data( data )\n          .enter()\n          .append(\"text\")\n          .text( d => d.name.slice(0,3) )\n          .attr(\"x\", (d,i) => pX(i) )\n          .attr(\"y\", (d,i) => pY(i) )\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"text-anchor\", (d,i) => {\n               if( pX(i) <= xc ){\n                    return \"end\"\n               }\n               return 'start'\n               \n          })\n          .attr(\"font-size\", fontSize)\n          .attr(\"fill\", color_fill ) ;\n\n     // label \n     svg.selectAll(null)\n          .data( data )\n          .enter()\n          .append(\"text\")\n          .attr('id', (d,i) => `${d.name}_id`)\n          .attr('x', width/2)\n          .attr('y', height)\n          .attr(\"font-family\", \"Montserrat\" )\n          .attr(\"font-size\", fontLabel )\n          .attr(\"fill\", color_fill ) \n          .attr(\"text-anchor\", 'middle')\n\n     // rectangulos de eventos de mouse\n     const svgRect = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`) ;\n\n     svgRect.selectAll('rect')\n          .data( data )\n          .enter()\n          .append('rect')\n          .attr(\"height\",25 )\n          .attr(\"width\", 40 )\n          .attr(\"fill\",\"red\")\n          .attr('opacity', 0)\n          .attr('x', (d,i) =>  pX(i)-20 )\n          .attr('y', (d,i) =>  pY(i)-15 )\n          .on( 'mouseover', (e,d) => textTotal(e,d,true))\n          .on( 'mouseout', (e,d) => textTotal(e,d,false)) ;\n\n\n     //Radios\n     svg.selectAll(\"line\")\n          .data( points_poly )\n          .enter()\n          .append(\"line\")\n          .attr(\"fill\", color_fill)\n          .attr(\"stroke\", color_fill)\n          .attr(\"stroke-width\", _xl?1.5:0.5 )\n          .attr(\"x1\", xc )\n          .attr(\"y1\", yc )\n          .attr(\"x2\", d => d[0] )\n          .attr(\"y2\", d => d[1] );\n};\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { PlotSindromatico } from './PlotSindromatico';\n\nimport { SubTitle } from '../elements/SubTitle'\n\nexport const DashContentSindro = ({stl, data}) => {\n\n     const classes = stl ;\n\n     const style_title = [classes.bg_blue_sindromatico, classes.px_0].join(' ') ;\n\n      return(\n           <Box>\n\n               <Box\n                    className={style_title}\n               >\n                    <SubTitle color={'white'}>\n                        {data.title} Clínico\n                    </SubTitle>\n               </Box>\n               <Box className={classes.py}>\n                    <PlotSindromatico\n                         data={data.clinico}\n                         n={data.clinico.length}\n                    ></PlotSindromatico>\n               </Box>\n\n               <Box\n                    className={style_title}\n               >\n                    <SubTitle color={'white'}>\n                        {data.title} Laboratorio\n                    </SubTitle>\n               </Box>\n               <Box className={classes.py}>\n                    <PlotSindromatico\n                         data={data.laboratorio}\n                         n={data.laboratorio.length}\n                    ></PlotSindromatico>\n               </Box>\n\n           </Box>\n      );\n}\n","import React,{useState } from 'react';\nimport { Box, Grid, Button, Collapse} from '@mui/material';\nimport { MediaQuery } from '../../MediaQuery';\nimport { DashContentSindro } from './DashContentSindro'\n\nimport { Field } from '../elements/Field' ;\nimport { Text } from '../elements/Text' ;\n\nexport const BoxSindromatico  = ({stl, title, data}) => {\n\n     const classes= stl ;\n     const { _xl, _lg } = MediaQuery();\n\n     const [open, setOpen] = useState(false);\n     const handleClick = () => {\n       setOpen(!open);\n     };\n\n     const [index, setIndex] = useState({value:0});\n     const handleIndex = (v) => {\n          setOpen(!open);\n          setIndex( {value:v} );\n     }\n\n     const ColorConvencion = () => {\n\n          const styleName = {\n               fontSize: _xl ? '22px' : _lg ? '16px': '12px',\n               fontFamily:'Montserrat',\n               border:'1px solid rgb(20,20,20)',\n               paddingInline:'0.5rem',\n               paddingBlock:'0.1rem',\n               marginLeft:'0.5rem',\n               borderRadius:'5px',\n               fontWeight: '500',\n               display: 'grid',\n               justifyItems: 'stretch',\n               textAlign: 'center'\n          };\n          \n          return(\n\n               [\n                    ['Rojo', '#E9312A','Grave'],\n                    ['Amarillo', '#FFFD67','Atención'],\n                    ['Naranja', '#F1A147','Anormal'],\n                    ['Verde', '#53AC62','Normal']\n               ].map( (renglon, idx) => {\n\n                    return(\n                         <div key={idx} style={{marginBlock:'0.5rem',width:'100%'}}>\n                              <span style={{...styleName, background:renglon[1]}}>\n                                   {renglon[0]} : {renglon[2]}\n                              </span>\n                         </div>\n                    )\n               })\n          )\n     }\n\n     return (\n          <Box\n               mt={1}\n               className={classes.bg_white}\n\n          >\n               <Grid\n                    container\n               >\n                    <Grid\n                         item\n                         xs={9}\n                    >\n\n                    <Box\n                        className={[classes.bg_blue].join(' ')}\n                        py={1} pl={1}\n                    >\n                        <Field color='white'>\n                            {title}\n                        </Field>\n                    </Box>\n\n                    </Grid>\n                    <Grid\n                         item\n                         xs={3}\n                         className={[classes.bg_blue, classes.px_0].join(' ')}\n                    >\n                         <Button\n                              onClick={()=>{handleClick()}}\n                              className={classes.px_0}\n                              fullWidth\n                         >\n\n                              <svg width=\"64\" height={ _xl?'28':_lg?'23':'18'} viewBox=\"0 -2 22 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M0.637178 4.52043L9.32358 15.0835C9.54991 15.3592 9.82455 15.5766 10.1294 15.7215C10.4343 15.8663 10.7624 15.9353 11.0921 15.9237C11.4219 15.9122 11.7458 15.8206 12.0424 15.6547C12.339 15.4889 12.6017 15.2527 12.813 14.9617L20.4812 4.39863C20.7656 4.00731 20.947 3.53088 21.0041 3.02532C21.0611 2.51977 20.9915 2.00604 20.8033 1.54434C20.6152 1.08264 20.3163 0.692123 19.9418 0.41866C19.5672 0.145197 19.1326 0.000163579 18.6888 0.000451691L2.37658 0.000451691C1.91722 -0.00923542 1.46559 0.137083 1.07832 0.42104C0.69105 0.704997 0.385376 1.11399 0.199621 1.59669C0.0138664 2.0794 -0.0437031 2.61435 0.0341358 3.13449C0.111975 3.65462 0.321758 4.1367 0.637178 4.52043Z\"\n                                      fill=\"white\"\n                                    />\n                              </svg>\n\n                         </Button>\n                    </Grid>\n               </Grid>\n\n               <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    {\n                         data.map((value,idx)=>{\n                              return(\n                                   <Button\n                                        fullWidth={true}\n                                        key={idx}\n                                        onClick={()=>{handleIndex(idx)}}\n                                        className={[classes.px,  classes.font_monserrat, classes.text_color_title ].join(' ')}\n                                   >\n                                        <Text>\n                                            {value.key}\n                                        </Text>\n                                   </Button>\n                              )\n                         })\n                    }\n\n               </Collapse>\n\n               <Box className={[classes.px, classes.py].join(' ')}>\n                    <DashContentSindro\n                         stl={classes}\n                         data={data[index.value].obj}\n                    >\n                    </DashContentSindro>\n\n                    <ColorConvencion/>\n\n               </Box>\n\n          </Box>\n     )\n}\n","import React, {useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { Box } from '@mui/material';\n\nimport { MediaQuery } from '../../MediaQuery';\n\n\nconst Plot = (data, date, svgMed, svgMed2, _xl, _lg) => {\n\n     const color_fill = 'rgba(0, 91, 165, 1)' ;\n\n     const svgEl = d3.select(svgMed.current);\n     const svgEl2 = d3.select(svgMed2.current);\n\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n     svgEl2.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const margin = {\n          top:30,\n          right: _xl?75:_lg?60:45,\n          bottom: 1,\n          left: 2,\n          m:2,\n          offsetLeft:_xl?240:_lg?180:130,\n          offsetX:_xl?0.1:_lg?0.1:-0.1,\n          offsety:_xl?2:_lg?2.5:3,\n          offSetMedicamentos:(_xl?175:_lg?140:100),\n          heightFila:(_xl?35:_lg?30:24),\n          widthMarca:(_xl?45:_lg?40:35),\n          py:(_xl?5:3)\n     }\n\n     const hours = [];\n     const iter = _xl ? 4 : 4 ;\n     const fontSize = _xl ? '22px' : _lg ? '16px': '12px' ;\n     const fontSizeSub = _xl ? '25px' : _lg ? '20px': '14px' ;\n     const fontSizeBod =  _xl ? '22px' : _lg ? '16px': '12px' ;\n\n     for(let k=0; k<=24; k = k + iter ){\n          if(k<10){\n               hours.push(`0${k}:00`);\n          }else{\n               hours.push(`${k}:00`);\n          }\n     } ;\n\n     let limits = d3.extent( hours, (d) => ( d )) ;\n\n     const xScale = d3.scaleLinear()\n          .domain( [ parseInt(limits[0]) , parseInt(limits[1]) ] )\n                    .range([margin.offsetLeft+margin.offSetMedicamentos, width - margin.right] ) ;\n\n     const yScale = d3.scaleLinear()\n                    .domain( [ 0, data.length ] )\n                    .range( [margin.top, data.length*margin.heightFila-margin.bottom] ) ;\n                    //.range( [margin.top, height-margin.bottom] ) ;\n\n\n     // Total categorias\n     const categorias =  [] ;\n     data.forEach( (item,idx) => {\n          let rtn = true\n          data.slice(idx+1).forEach( item2 =>{\n               if( item.categoria === item2.categoria){\n                    rtn = false\n               }\n          })\n          if( rtn ) categorias.push( item.categoria ) ;\n     });\n\n     //Total de filas por categoria\n     const filasMed = [] ;\n     categorias.forEach( item =>{\n          let count = 0 ;\n          data.forEach( item2 => {\n               if(item === item2.categoria ) count++\n          });\n          filasMed.push(count);\n     });\n\n     //Medicamentos ordenados por categoria\n     const medicamentos = [] ;\n     categorias.forEach( (categ) =>{\n          data.forEach( (obj) => {\n               if(obj.categoria === categ)\n               medicamentos.push( obj.medicamento )\n          })\n     });\n\n     const svg2 = svgEl.append(\"g\")\n\n     //Segunda palabra en segundo renglon\n     const subLine = (word,fontWeight,x,y) =>{\n          svg2.selectAll(null)\n               .data( word )\n               .enter()\n               .append('text')\n               .text( d => d )\n               .attr('x', x )\n               .attr('y', yScale( y ) )\n               .attr('font-family', 'Montserrat')\n               .attr('font-size', fontSizeSub )\n               .attr('font-weight', fontWeight )\n               .attr('fill', color_fill )\n               .attr('id', 'secondLine' );\n     };\n\n     // cortar palabras, crear abreviacion\n     const cut = ( word ) => {\n          let words = word.split(' ');\n          if( words.length > 1) {\n               return words[0]+ ' ' +words[1].slice(0,4) +'.'\n          } ;\n          return word\n     };\n\n     //Categorias\n     svg2.selectAll( null )\n          .data( categorias )\n          .enter()\n          .append('text')\n          .text( (d,i) => {\n               let words = d.split(' ');\n               if( words.length > 1) {\n                    let y = i + 1 ;\n                    if( i !== 0){\n                         y =  filasMed.slice(0,i).reduce((a,e) => a+e) + 1\n                    };\n                    subLine( [words[1]], 'bold',margin.left, y)\n                    return words[0]+'-'\n               } ;\n               return d\n          })\n          .attr('x', margin.left )\n          .attr('y', (d,i) =>\n               i === 0\n               ? yScale( 0 )\n               : yScale( filasMed.slice(0,i).reduce((a,e) => a+e) )\n          )\n          .attr('font-family', 'Montserrat')\n          .attr('font-size', fontSizeSub )\n          .attr('font-weight', 'bold')\n          .attr('fill', color_fill )\n          .on('mousewheel', () => console.log(\"wheel\") );\n\n     //Medicamentos\n     svg2.selectAll(null)\n          .data( medicamentos )\n          .enter()\n          .append('text')\n          .text( (d,i) => {\n               return cut( d )\n          })\n          .attr('x', margin.offSetMedicamentos )\n          .attr('y', (d,i) => yScale( i )  )\n          .attr('font-family', 'Montserrat')\n          .attr('font-size', fontSizeBod )\n          .attr('font-weight', 'normal')\n          .attr('fill', color_fill ) ;\n\n     //lineas\n     svg2.selectAll(null)\n          .data( data )\n          .enter()\n          .append('line')\n          .attr('x1', xScale(0) )\n          .attr('y1',(d,i) => yScale(i) - 5 )\n          .attr('x2', xScale(24) + margin.widthMarca )\n          .attr('y2',(d,i) => yScale(i) - 5 )\n          .attr('stroke-width', margin.heightFila - (_xl?10:_lg?9:9) )\n          .attr('stroke',\"#B5DCE5\")\n          .attr('stroke-linecap',\"round\");\n\n\n     //disparar el wheel del mouse\n     // const svg3 = svgEl.append(\"g\")\n     //      .attr(\"width\", `${width}`)\n     //      .attr(\"height\",`${height}`)\n     //      .on(\"wheel\", event => {\n     //           event.preventDefault()\n     //           zoom( -event.deltaY );\n     //      });\n     //\n     // svg3.append('rect')\n     //      .attr('x',0)\n     //      .attr('y',0)\n     //      .attr('width',width)\n     //      .attr('height',height)\n     //      .attr('fill','transparent');\n\n     // const gBody = d3.select(`#body`);\n     // const maxScroll = gBody._groups[0][0]?.viewportElement.scrollHeight?\n     //                     gBody._groups[0][0].viewportElement.scrollHeight:\n     //                     margin.heightFila*medicamentos.length ;\n     // let posY = 0 ;\n     // const zoom = ( delta ) => {\n     //      return\n     //      if( posY+delta < 100 && Math.abs(posY+delta) < maxScroll ){\n     //           posY = posY + delta/5 ;\n     //      };\n     //      svg2.attr(\"transform\", `translate(0, ${posY})`)\n     //      svg4.attr(\"transform\", `translate(0, ${posY})`)  ;\n     // };\n\n     // calcular las horas de medicación\n     const arrayHours = [] ;\n\n     data.forEach( ( _, idx )=>{\n\n          let obj =  data.find( d => d.medicamento === medicamentos[idx] ) ;\n\n          let dif = date[0] - obj.date.getDate() + 30*(date[1]-obj.date.getMonth()-1) // dias\n          arrayHours.push([]);\n          let n = 0;\n          let h = 0;\n\n          if( obj.intervaloValue !== 0 & obj.intervaloValue !== 1 & dif >= 0){\n               do{\n                    h = n*obj.intervaloValue ;\n                    if( h  > (dif*24 - 24) & dif >= 0 ){ // calcular solo dia presente\n                         arrayHours[idx].push( (h + obj.date.getHours())%24 )\n                    }\n                    n = n + 1 ;\n               }while( h <= dif*24 );\n          }else if(  dif >= 0){\n               arrayHours[idx].push( obj.intervaloValue === 1\n                    ? `${obj.intervaloValue}  ${obj.intervaloUnit.replace(/ /g,'')}`\n                    : obj.intervaloUnit.replace(/ /g,'')\n               );\n          }\n     });\n\n     \n     // MARCAS\n     const svg4 = svgEl.append(\"g\")\n                    .attr('id','body');\n\n     arrayHours.forEach( (item,idx) => {\n          //Marcas de linea\n          svg4.selectAll(null)\n               .data( item )\n               .enter()\n               .append('line')\n               .attr('x1', d => isNaN(d)\n                         ? xScale( 0 + margin.offsetX )\n                         : xScale( d + margin.offsetX )\n               )\n               .attr('y1', (d,i) => yScale(idx) - 5 )\n               .attr('x2', d => isNaN(d)\n                         ? xScale( fontSizeSub.split('px')[0]*d.length*0.035 + margin.offsetX )\n                         : xScale( d + 2 )\n               )\n               .attr('y2', (d,i) => yScale(idx) - 5 )\n               .attr('stroke-width', margin.heightFila - (_xl?10:_lg?9:9))\n               .attr('stroke',\"#005BA5\")\n               .attr('stroke-linecap',\"round\")\n\n          //  marcas de text\n          svg4.selectAll(null)\n               .data( item )\n               .enter()\n               .append('text')\n               .text( d => isNaN(d)\n                         ? d\n                         : d<10 ? `0${d}:00`: `${d}:00`\n               )\n               .attr('x', d => isNaN(d)\n                         ? xScale( d.length*fontSize.split('px')[0]*(_xl?0.009:_lg?0.0055:0.001) + margin.offsetX )\n                         : xScale( parseInt(d) + 0.2 + margin.offsetX)\n               )\n               .attr('y', d => yScale(idx+(_xl?0.18:0.1)) - margin.offsety )\n               .attr('font-family', 'Montserrat')\n               .attr('font-size', fontSize )\n               .attr('font-weight', 'normal')\n               .attr('fill', '#FFFFFF' )\n               .attr('text-anchor', 'center')\n\n          //Marcas de linea para cuadros emergentes por mouse\n          svg4.selectAll(null)\n               .data( item )\n               .enter()\n               .append('line')\n               .attr('x1', d => isNaN(d)\n                         ? xScale( 0 + margin.offsetX )\n                         : xScale( d + margin.offsetX )\n               )\n               .attr('y1', (d,i) => yScale(idx) - 5 )\n               .attr('x2', d => isNaN(d)\n                         ? xScale( d.length*fontSize.split('px')[0]*(_xl?0.04:_lg?0.04:0.05) + margin.offsetX )\n                         : xScale( d +2 )\n               )\n               .attr('y2', (d,i) => yScale(idx) - 5 )\n               .attr('stroke-width', margin.heightFila - (_xl?10:_lg?9:9))\n               .attr('stroke',\"transparent\")\n               .attr('stroke-linecap',\"round\")\n               .on('mouseover', (e) => mouseOn(e,idx))\n               .on('mouseout',() => {\n                    cuadro.style(\"display\", 'none')\n                    textCuadro.style(\"display\", 'none')\n               })\n               // .on(\"wheel\", event => {\n               //      event.preventDefault()\n               //      zoom( -event.deltaY );\n               // });\n     });\n\n\n     //Cuadros emergentes\n     const cuadro = svg4.append('g')\n          .append(\"rect\")\n          .attr(\"height\", parseInt(fontSizeSub.split('px')[0])*(_xl?3.5:4)  )\n          .attr(\"width\", 50)\n          .attr(\"fill\",\"#005BA5\")\n          .attr('rx',8)\n          .attr('ry',8)\n          .attr('stroke', 'cadetblue')\n          .attr('stroke-width', 2)\n          .style(\"display\", 'none');\n\n     const textCuadro = svg4.append('g')\n          .selectAll(null)\n          .data( new Array(3) )\n          .enter()\n          .append('text')\n          .attr('font-family', 'Montserrat')\n          .attr('font-size', fontSizeSub )\n          .attr('font-weight', 'normal')\n          .attr('fill', '#FFFFFF' )\n          .attr('align','center')\n          .style(\"display\", 'block');\n          \n\n     const  mouseOn = (e,i) =>{\n\n          let x = parseInt(e?.originalTarget?.attributes?.x1?.nodeValue) || parseInt(e?.toElement?.attributes?.x1?.value) ;\n          let y = parseInt(e?.originalTarget?.attributes?.y1?.nodeValue) || parseInt(e?.toElement?.attributes?.y1?.value) ;\n\n          const dataText = [] ;\n          const dataMed = data.find( d => d.medicamento === medicamentos[i] ) ;\n          dataText.push( dataMed.medicamento ) ;\n          dataText.push( (dataMed.intervaloValue === 0 || dataMed.intervaloValue === 1)\n                         ? dataMed.intervaloValue === 1\n                              ? `${dataMed.intervaloValue} ${dataMed.intervaloUnit.replace(/ /g,'')}`\n                              : dataMed.intervaloUnit.replace(/ /g,'')\n                         : `Cada ${dataMed.intervaloValue} ${dataMed.intervaloUnit.replace(/ /g,'')}`\n                    ) ;\n          dataText.push( `Dosis de ${dataMed.dosisValue} ${dataMed.dosisUnit}` ) ;\n\n          let lenMax = 0 ;\n          dataText.forEach( (item) => lenMax = item.length > lenMax ? item.length : lenMax );\n          lenMax = parseInt(fontSizeSub.split('px')[0])*lenMax*0.62\n\n          cuadro\n               .attr( 'x', x - lenMax - 5)\n               .attr( 'y', yScale(i) - 30)\n               .attr( \"width\", lenMax )\n               .style( \"display\", 'block') ;\n\n          textCuadro\n               .text( (_,i) => dataText[i] )\n               .attr( 'x', x - lenMax - 1 )\n               .attr( 'y', (_,idx) =>  idx*margin.heightFila*0.6 - yScale(i) + y*2 ) //- yScale(i)*1.1 ) )\n               .style( \"display\", 'block');\n     };\n\n     //Eje x de horas\n     const svgh = svgEl2.append(\"g\")\n\n\n     //fondo del eje x\n     svgh.append('rect')\n          .attr('x', margin.rigth   )\n          .attr('y',20 ) //height - margin.heightFila )\n          .attr(\"width\", `${width}`)\n          .attr(\"height\",`${height}`)\n          .attr('fill','white');\n\n     //eje x\n     svgh.selectAll(null)\n          .data( hours )\n          .enter()\n          .append('text')\n          .text( (d,i) => (d) )\n          .attr('x',(d,i) => xScale(i*iter) )\n          .attr('y',20 ) //height - margin.bottom )\n          .attr('font-family', 'Montserrat')\n          .attr('font-size', fontSize )\n          .attr('fill', color_fill ) ;\n\n};\n\nexport const PlotMedicacion = ( { data, date } ) => {\n\n     const { _xl, _lg } = MediaQuery();\n\n     const svgMed = React.useRef(null);\n     const svgMed2 = React.useRef(null);\n\n     // eslint-disable-next-line no-use-before-define\n     useEffect( () => {\n          Plot(data,date,svgMed,svgMed2, _xl, _lg)\n     },[data,date,svgMed,svgMed2,_xl, _lg]) ;\n\n     return(\n          <div>\n               <Box\n                    style={{maxHeight: _xl?'180px': _lg?'175px':'110px', overflowY: 'scroll', scrollBehavior: 'smooth'}}\n               >\n                    <svg ref={svgMed} width={'100%'} height={data.length*(_xl?35:_lg?30:25)} />\n               </Box>\n               <svg ref={svgMed2} width={'100%'} height={'30'} />\n          </div>\n     );\n};\n","import React from 'react' ;\nimport { styled } from '@mui/system';\n\nimport { MediaQuery } from '../../../MediaQuery' ;\n\n\nconst colorGround = [\n     //Background, border-contents\n     ['#E0F1FF','#026FCA'],\n     ['#D4FFFA','#009C8A'],\n     ['#C1FFE0','#008C45'],\n     ['#D4FFFA','#009C8A'],\n     ['#E0F1FF','#026FCA']\n];\n\nconst Container = styled('div')({\n     width: 'auto',\n     height: 'min-content',\n     borderRadius: '0.3rem',\n     paddingBlock: '0.2rem',\n     paddingInline: '0.5rem',\n     fontFamily:'Montserrat'\n});\n\nconst TitleParameter = styled('span')({\n     fontWeight: '700',\n});\n\nconst ValueParameter = styled('span')({\n     fontWeight: '500',\n});\n\nconst TitleTendencia = styled('span')({\n     fontWeight: '400'\n});\n\nconst ValueTendencia = styled('div')({\n     fontWeight: '300',\n     paddingLeft: '1.1rem'\n});\n\n\n// Componente\nexport const Square = (\n     {\n          title='TLP',\n          value='100',\n          unids='xx',\n          tendencia='5',\n          prom='0'\n     }) => {\n\n    const {_xl, _lg} = MediaQuery() ;\n\n    const flexRow = {\n         display: 'flex',\n         flexDirection: 'row',\n         justifyContent: 'space-around',\n         alignItems: 'center'\n    };\n\n    const styleSquare = () => {\n          const index = Math.floor( Math.random() * 5 )\n          return(\n               {\n                    border: `0.13rem solid ${colorGround[index][1]}`,\n                    background: `${colorGround[index][0]}`,\n                    color: `${colorGround[index][1]}`,\n                    fontSize: _xl ? '22px' : _lg ? '16px': '11px'\n               }\n          );\n    };\n\n     return(\n          <Container\n               style={styleSquare()}\n          >\n               <div\n                    style={{width:'max-content'}}\n               >\n                    <TitleParameter>\n                         {title}:\n                    </TitleParameter>\n                    <ValueParameter>\n                         { ' ' + value }{ ' ' + unids }\n                    </ValueParameter>\n               </div>\n               <div style={flexRow}>\n                    <div>\n                         <TitleTendencia>\n                              Tendencia:\n                         </TitleTendencia>\n                         <ValueTendencia>\n                              {`${tendencia} ${unids}/h`}\n                         </ValueTendencia>\n                    </div>\n                    <div>\n                         <TitleTendencia>\n                              Promedio:\n                         </TitleTendencia>\n                         <ValueTendencia>\n                              {`${prom} ${unids}`}\n                         </ValueTendencia>\n                    </div>\n               </div>\n          </Container>\n     )\n\n}\n","\n// rutina empleada por <getData> en Ventilacion.js y Respiratorio.js\n\n// Retorna tendencia, promedio y vector de datos.\n\nexport const processValueDate = ( data ) => {\n\n     //Tendencia como el promedio de la pendiente entre los ultimos 5 puntos:\n\n     const tendencia = ( array ) => {\n\n          const points = array.slice( data.length - 5 ).reverse()\n\n          return(\n               ( points[2][0] - points[0][0] )*1000*60*60 /\n               parseFloat( new Date(points[2][1]).getTime() - new Date(points[0][1]).getTime() )\n          );\n     } ;\n\n     const promedio = data.reduce( (sum, item, idx) => sum + (!parseFloat(item[0]) ? sum/(idx+1) : parseFloat(item[0])) , 0 )/data.length ;\n\n     const ultValue = data.reverse()[ data.length-1 ][0] ;\n     // const ultValue = data.slice( data.length - 5 ).reverse().map( num => parseFloat(num).toFixed(3))\n\n     const fixed = (num) => {\n          return(\n               num > 1\n               ? parseFloat(num).toFixed(1)\n               : parseFloat(num).toFixed(3)\n          )\n     };\n     return(\n          [\n               fixed(data ? tendencia(data) : 0),\n               fixed(data ? promedio : 0),\n               fixed(data ? ultValue : 0),\n               [\n                    ...data.slice( 0 ).reverse()\n               ]\n          ]\n     );\n};\n// \"16.316\", \"2022-01-13 10:17:17.392933\" ,\n// \"19.777\", \"2022-01-13 10:10:45.191944\" , 3.46100 / 6.536683333333333\n// \"20.963\", \"2022-01-13 10:04:35.207668\" , 1.186   / 6.166399999999999\n// \"22.918\", \"2022-01-13 09:58:04.012646\" , 1.95499 / 6.519916666666666\n// \"26.766\", \"2022-01-13 09:52:00.307695\" , 5.80299  /6.06175\n\n//  0.5294734077679557+0.1923326414115205+0.2998489244494434+0.9573126572359467\n//\n//\n// \"16.316\"\n// \"19.777\"\n// ​​​​\"20.963\"\n// ​​​​\"22.918\"\n// ​​​​\"26.766\"\n//\n// \"0.414\" tendencia - 0.49474190771621657\n","import { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { processValueDate } from '../helpers/processValueDate';\nimport { resourceServer } from '../../env'\n\n// pruebas directamente al API de VentSupport\n// import { getDataVentsupport } from './getDataVentsupport';\n\nexport const getData =(dayNow, hour, id, setData, setMsn) => {\n\n     const dte = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}` ;// 2022-08-10\n     const { urlServer, requestOptionsGet } = resourceServer ;\n\n     // getDataVentsupport();\n\n     fetch(`${urlServer}Observation?identifier=${dte}${hour}&identifier=VentSupport_epochs_${id}&subject=${id}`,\n          requestOptionsGet).then( resp => {\n               resp.text().then( obj => {\n\n                    const data = JSON.parse( obj )\n\n                    if( data.total > 0){\n                         const metricsObj = data.entry.map( entry => {\n                              return(\n                                   {\n                                        name:entry.resource.identifier[1].value,\n                                        body:entry.resource.component.map( comp => {\n                                             return(\n                                                  {\n                                                       name:comp.code.text,\n                                                       data: JSON.parse( comp.valueString )\n                                                  }\n                                             )\n                                        })\n                                   }\n                              )\n                         });\n\n                         const metricStatistics = metricsObj.find( obj => obj.name === \"metricas\")\n                                                       .body.map( item => {\n                                                            return(\n                                                                 {\n                                                                      name : item.name,\n                                                                      data: [...processValueDate(item.data)]\n                                                                 }\n                                                            );\n                                                       });\n\n                         setData([\n                              ...metricStatistics,\n                              ...metricsObj.filter( item => item.name !== \"metricas\")\n                         ]);\n\n                    }else{\n                         setData([])\n                         setMsn('Sin datos del respirador')\n                    };\n\n               })\n          }).catch( err => {\n               console.log(\"Error en getData de Ventilacion \\n\", err );\n               getData(dayNow, id, setData, setMsn);\n          });\n\n};\n","import React, {useState, useEffect } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { Square } from './helpers/Square';\nimport { Title } from '../elements/Title';\n\nimport { getData } from '../respiratorio/getData' ;\nimport { getLastHour } from '../helpers/getLastHour' ;\n\nexport const Ventilacion =  ({stl, dt}) =>{\n\n     // Visualiza la información de la hora actual en el día establecido en el time line\n\n     const classes = stl ;\n\n     const [ id , dayNow  ] = dt ; // fecha establecida por el TimeLine: [ dia, mes, año ]\n\n     const [metrics, setMetrics] = useState([]);\n     const [msn, setMsn] = useState('Recuperando información')\n\n     useEffect( () => {\n          setMsn('Recuperando información')\n          const asycFun = async() => {\n               getData(dayNow, getLastHour( 'lastHour' ), id, setMetrics, setMsn)\n          };\n          asycFun();\n     },[dayNow, id]);\n\n\n     const sinDatos = () => {\n          return(\n               <Title>\n                    {msn}\n               </Title>\n          )\n     };\n\n     // const objPlot = metrics.find( obj => obj.name === \"flow_signal\") || metrics.find( obj => obj.name === \"press_signal\")\n\n     return(\n          <>\n               <Box\n                    className={classes.px}\n               >\n                    <Grid\n                         container\n                         spacing={1}\n                    >\n                         {\n                              metrics.length > 0 &&\n\n                              [    [\"FIO2\",\"FIO2\",\" \"],\n                                   [\"respir_rate\",\"Rate\",\"LPM\"],\n                                   ['mean_press',\"MeanP\",'cmH2O'],\n                                   [\"PEEP\",\"PEEP\",'cmH2O'],\n                                   ['peakP','PeakP','cmH2O'],\n                                   ['tidal_volume_set_334', 'VT','ml'],\n                                   ['power','Power','J'],\n                                   ['inspTV','Insp.TV','ml']\n                              ].map( (label, idx) =>{\n\n                                   const obj = metrics.find( obj => obj.name === label[0] );\n\n                                   return(\n                                        <Grid\n                                             item\n                                             xs={3}\n                                             align='center'\n                                             key={idx}\n                                        >\n                                             <Square\n                                                  title={label[1]}\n                                                  value={obj.data[2]}\n                                                  unids={label[2]}\n                                                  tendencia={obj.data[0]}\n                                                  prom={obj.data[1]}\n                                             />\n                                        </Grid>\n                                   )\n                              })\n                         }\n                         {\n                              !(metrics.length > 0) &&\n\n                              sinDatos()\n\n                         }\n                    </Grid>\n                    {\n                    // <Box\n                    //      style={{border: \"solid 2px #026fca\", borderRadius: \"5px\"}}\n                    //      my={1}\n                    // >\n                    //      {\n                    //           objPlot !== undefined &&\n                    //           <PlotFlowRespiratorio\n                    //                data={ objPlot }\n                    //                name={ objPlot.name }\n                    //           />\n                    //      }\n                    // </Box>\n\n\n                    // <Grid\n                    //      container\n                    //      spacing={1}\n                    //      mt={1}\n                    // >\n                    //      {\n                    //           metrics.length > 0 &&\n                    //\n                    //           [    [\"press_peak\",\"P.peak\"],\n                    //                [\"press_mean\",\"P.mean\"],\n                    //                [\"rvi_index\",\"RVI\"],\n                    //                [\"o2_concentration_set_323\",\"O2\"]\n                    //           ].map( (label, idx) =>{\n                    //\n                    //                const obj = metrics.find( obj => obj.name === label[0] );\n                    //\n                    //                return(\n                    //                     <Grid\n                    //                          item\n                    //                          xs={3}\n                    //                          align='center'\n                    //                          key={idx}\n                    //                     >\n                    //                          <Square\n                    //                               title={label[1]}\n                    //                               value={obj.data[2]}\n                    //                               unids={'Pa'}\n                    //                               tendencia={obj.data[0]}\n                    //                               prom={obj.data[1]}\n                    //                          />\n                    //                     </Grid>\n                    //                )\n                    //           })\n                    //      }\n                    // </Grid>\n               }\n\n               </Box>\n          </>\n     );\n}\n","\n\nimport { resourceServer } from '../../../env' ;\nimport { addToken } from '../../helpers/token'; \n\nconst { urlServer, requestOptionsGet } = resourceServer ;\n\nexport const getMedicacion = async( id, dayNow, setMedicacion ) => {\n\n     const response = await fetch(`${urlServer}MedicationDispense?subject=${id}`, addToken(requestOptionsGet) );\n     let { entry, total, link } = await response.json();\n\n     // Más de una pagina de respuesta\n     if( link.length > 1 ){\n          const resp = await fetch(`${urlServer}MedicationDispense?_count=${total}&subject=${id}`, addToken(requestOptionsGet) )\n          const json = await resp.json();\n          entry = json.entry ;\n     };\n\n     if( total > 0 ){\n          const medicamentos = entry.map( ( item )=>{\n               let obj = {};\n               obj.categoria = item.resource.category.text ;\n               obj.medicamento = item.resource.medicationReference.display ;\n               obj.intervaloValue = item.resource.daysSupply.value ;\n               obj.intervaloUnit = item.resource.daysSupply.unit ;\n               obj.date = new Date( item.resource.whenHandedOver ) ;\n               obj.dosisValue = item.resource.quantity.value ;\n               obj.dosisUnit = item.resource.quantity.unit ;\n               return obj ;\n          });\n          setMedicacion( [...medicamentos] ) ;\n     };\n};\n","\n\n// colores del cuadro sindromatico\nconst v = '#53AC62', a = '#FFFD67', n='#F1A147', r='#E9312A' ;\n\nexport const variables = {\n     \"PAM\":              { name: \"PAM\",                value: 0,      dom: [ 75,25 ],      color: [ r, n, a, v, a, n , r] }, // variablesControlHemo\n     \"PAS\":              { name: \"PAS\",                value: 0,      dom: [ 75,125],     color: [ r, n, a, v, a, n, r] },\n     \"Conciencia\":       { name: \"Conciencia\",         value: 0,      dom: [ 1, 11 ],     color: [ r, a, n, v ] },\n     \"Perf.cut.\":        { name: \"Perf.cut.\",          value: 0,      dom: [ 1, 5 ],      color: [ v, n, r ] },\n     \"F.Cardiaca\":       { name: \"F.Cardiaca\",         value: 0,      dom: [ 70, 120 ],   color: [ r, n, a, v, a, n, r ] }, // variablesControlHemo\n     \"Sat-periferica\":   { name: \"Sat-periferica\",     value: 0,      dom: [ 75, 100 ],   color: [ r, n, a, v, a, n, r ] },\n     \"PCR\":              { name: \"PCR\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Lactato\":          { name: \"Lactato\",            value: 0,      dom: [ 1.5, 2.5 ],  color: [ r, a, n, v ] },\n     \"Sat.ven.cen\":      { name: \"Sat.ven.cen\",        value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Hemograma\":        { name: \"Hemograma\",          value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Procalcitonina\":   { name: \"Procalcitonina\",     value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Glicemia\":         { name: \"Glicemia\",           value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Sat.perife.\":      { name: \"Sat.perife.\",        value: 0,      dom: [ 75, 100 ],   color: [ r, n, a, v ] },\n     \"Var.pulso\":        { name: \"Var.pulso\",          value: 0,      dom: [ 75, 100 ],   color: [ r, n, a, v ] },\n     \"Bal.hidri\":        { name: \"Bal.hidri\",          value: 0,      dom: [ 50, 1000 ],  color: [ r, n, a, v ] },\n     \"Hematocrito\":      { name: \"Hematocrito\",        value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"DeltaCO2\":         { name: \"DeltaCO2\",           value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Troponina\":        { name: \"Troponina\",          value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"CK-CKMB\":          { name: \"CK-CKMB\",            value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Ind.Cardiaco\":     { name: \"Ind.Cardiaco\",       value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"PH\":               { name: \"PH\",                 value: 0,      dom: [ 6, 10 ],     color: [ r, a, n, v ] },\n     \"PO2\":              { name: \"PO2\",                value: 0,      dom: [ 3, 10 ],     color: [ r, a, n, v ] },\n     \"PCO2\":             { name: \"PCO2\",               value: 0,      dom: [ 5, 10 ],     color: [ r, a, n, v ] },\n     \"HCO3\":             { name: \"HCO3\",               value: 0,      dom: [ 8, 10 ],     color: [ r, a, n, v ] },\n     \"Frec.Resp\":        { name: \"Frec.Resp\",          value: 0,      dom: [ 40, 120 ],   color: [ r, n, a, v, a, n, r ] }, // variablesControlHemo\n     \"Uso.Musc.Acces\":   { name: \"Uso.Musc.Acces\",     value: 0,      dom: [ 75, 125 ],   color: [ r, n, a, v, a, n, r ] },\n     \"Perf.Cutanea\":     { name: \"Perf.Cutanea\",       value: 0,      dom: [ 1, 11 ],     color: [ r, a, n, v ] },\n     \"Sig.Pulmo\":        { name: \"Sig.Pulmo\",          value: 0,      dom: [ 35, 42 ],    color: [ r, n, v, n, r ] },\n     \"Sat.Perife\":       { name: \"Sat.Perife\",         value: 0,      dom: [ 75, 100 ],   color: [ r, n, a, v ] },\n     \"Fracc.InspO2-FIO2\":{ name: \"Fracc.InspO2-FIO2\",  value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] }, // variablesControlHemo\n     \"Volum.Corrie\":     { name: \"Volum.Corrie\",       value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] }, // variablesControlHemo\n     \"Pres.Fin.Espir\":   { name: \"Pres.Fin.Espir\",     value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"PAFI\":             { name: \"PAFI\",               value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"IOX\":              { name: \"IOX\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Relac-VC.FC\":      { name: \"Relac-VC.FC\",        value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Perfusion\":        { name: \"Perfusion\",          value: 0,      dom: [ 1, 5 ],      color: [ v, n, r ] },\n     \"Temperatura\":      { name: \"Temperatura\",        value: 0,      dom: [ 34.5, 42 ],  color: [ r, n, v, n, r ] }, // variablesControlHemo\n     \"Saturacion\":       { name: \"Saturacion\",         value: 0,      dom: [ 75, 100 ],   color: [ r, n, a, v ] },   // variablesControlHemo\n     \"Bal.Hidrico\":      { name: \"Bal.Hidrico\",        value: 0,      dom: [ 50, 1000 ],  color: [ r, n, a, v, a, n, r ] },\n     \"Debit.Urina\":      { name: \"Debit.Urina\",        value: 0,      dom: [ 20, 800 ],   color: [ r, n, a, v, a, n, r ] },\n     \"Gasom.Ater-PO2\":   { name: \"Gasom.Ater-PO2\",     value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Fosfat.Alca\":      { name: \"Fosfat.Alca\",        value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Bilirru.Direc\":    { name: \"Bilirru.Direc\",      value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Transaminasas\":    { name: \"Transaminasas\",      value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Creatininemia\":    { name: \"Creatininemia\",      value: 0,      dom: [ 1.5, 2.5 ],  color: [ r, a, n, v ] },\n     \"BUN\":              { name: \"BUN\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Orina.Comp\":       { name: \"Orina.Comp\",         value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"ELP-Potasio\":      { name: \"ELP-Potasio\",        value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"ELP-Sodio\":        { name: \"ELP-Sodio\",          value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"Niv.Glasgow\":      { name: \"Niv.Glasgow\",        value: 0,      dom: [ 1, 11 ],     color: [ r, n, a, v, a, n, r ] },\n     \"Cab.Med30\":        { name: \"Cab.Med30\",          value: 0,      dom: [ 1, 120 ],    color: [ r, n, a, v, a, n, r ] },\n     \"FIO2\":             { name: \"FIO2\",               value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] }, // variablesRespiratorio\n     \"ELP\":              { name: \"ELP\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"PIC\":              { name: \"PIC\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"PPC\":              { name: \"PPC\",                value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] },\n     \"PTIO2\":            { name: \"PTIO2\",              value: 0,      dom: [ 1, 10 ],     color: [ r, a, n, v ] }\n} ;\n\nexport const dataFormat = ( variables ) => {\n\n     return({\n          PresArterial:{\n               key: 'P/A',\n               array: [['0','0']], // value, hour\n               units: 'cmH2O'\n          },\n\n          FrecCardiaca:{\n               key: 'FC',\n               array:[['0','0']],\n               units:'LPM'\n          },\n\n          TempCorporal:{\n               key:'T°C',\n               array:[['0','0']],\n               units:'°C'\n          },\n\n          FrecRespiratoria:{\n               key:'FR',\n               array:[['0','0']],\n               units:'RPM'\n          },\n\n          sepsis: {\n            title: \"sepsis\",\n            clinico: [\n               variables['PAM'] ,\n               variables['PAS'] ,\n               variables['Conciencia'] ,\n               variables['Perf.cut.'] ,\n               variables['Temperatura'] ,\n               variables['F.Cardiaca'] ,\n               variables['Sat-periferica']\n            ],\n            laboratorio: [\n               variables['PCR'] ,\n               variables['Lactato'] ,\n               variables['Sat.ven.cen'] ,\n               variables['Hemograma'] ,\n               variables['Procalcitonina'] ,\n               variables['Glicemia']\n            ]\n          },\n\n          shock: {\n            title: \"shock\",\n            clinico: [\n               variables['PAM'] ,\n               variables['PAS'] ,\n               variables['Conciencia'] ,\n               variables['Perf.cut.'] ,\n               variables['Temperatura'] ,\n               variables['Sat.perife.'] ,\n               variables['F.Cardiaca'] ,\n               variables['Var.pulso'] ,\n               variables['Bal.hidri']\n            ],\n            laboratorio: [\n               variables['Hematocrito'] ,\n               variables['Lactato'] ,\n               variables['DeltaCO2'] ,\n               variables['Sat.ven.cen'] ,\n               variables['Troponina'] ,\n               variables['CK-CKMB'] ,\n               variables['Ind.Cardiaco'] ,\n               variables['PH'] ,\n               variables['PO2'] ,\n               variables['PCO2'] ,\n               variables['HCO3']\n            ]\n          },\n\n          ventilatorio: {\n            title: \"ventilatorio\",\n            clinico: [\n               variables['Frec.Resp'] ,\n               variables['Uso.Musc.Acces'] ,\n               variables['Perf.Cutanea'] ,\n               variables['Sig.Pulmo'] ,\n               variables['Sat.Perife']\n            ],\n            laboratorio: [\n               variables['PO2'] ,\n               variables['PCO2'] ,\n               variables['HCO3'] ,\n               variables['PH'] ,\n               variables['Fracc.InspO2-FIO2'] ,\n               variables['Volum.Corrie'] ,\n               variables['Pres.Fin.Espir'] ,\n               variables['PAFI'] ,\n               variables['IOX'] ,\n               variables['Relac-VC.FC']\n            ]\n          },\n\n          transplante: {\n            title: \"transplante\",\n            clinico: [\n               variables['PAM'] ,\n               variables['PAS'] ,\n               variables['Conciencia'] ,\n               variables['Perfusion'] ,\n               variables['Temperatura'] ,\n               variables['Saturacion'] ,\n               variables['F.Cardiaca'] ,\n               variables['Bal.Hidrico'] ,\n               variables['Debit.Urina']\n            ],\n            laboratorio: [\n               variables['Hematocrito'] ,\n               variables['Lactato'] ,\n               variables['Gasom.Ater-PO2'] ,\n               variables['PCO2'] ,\n               variables['HCO3'] ,\n               variables['PH'] ,\n               variables['Fracc.InspO2-FIO2'] ,\n               variables['Fosfat.Alca'] ,\n               variables['Bilirru.Direc'] ,\n               variables['Transaminasas']\n            ]\n          },\n\n          renal: {\n            title: \"renal\",\n            clinico: [\n               variables['PAM'] ,\n               variables['PAS'] ,\n               variables['Conciencia'] ,\n               variables['Perfusion'] ,\n               variables['Temperatura'] ,\n               variables['Saturacion'] ,\n               variables['F.Cardiaca'] ,\n               variables['Debit.Urina']\n            ],\n            laboratorio: [\n               variables['Hematocrito'] ,\n               variables['Creatininemia'] ,\n               variables['BUN'] ,\n               variables['Orina.Comp'] ,\n               variables['ELP-Potasio'] ,\n               variables['ELP-Sodio'] ,\n               variables['PO2'] ,\n               variables['PCO2'] ,\n               variables['HCO3'] ,\n               variables['PH']\n            ]\n          },\n\n          neurologico: {\n            title: \"neurologico\",\n            clinico: [\n               variables['PAM'] ,\n               variables['Conciencia'] ,\n               variables['Perfusion'] ,\n               variables['Temperatura'] ,\n               variables['Saturacion'] ,\n               variables['Niv.Glasgow'] ,\n               variables['Cab.Med30']\n            ],\n            laboratorio: [\n               variables['Hematocrito'] ,\n               variables['Lactato'] ,\n               variables['PO2'] ,\n               variables['PCO2'] ,\n               variables['HCO3'] ,\n               variables['PH'] ,\n               variables['FIO2'] ,\n               variables['ELP'] ,\n               variables['PIC'] ,\n               variables['PPC'] ,\n               variables['PTIO2']\n            ]\n          }\n     });\n};\n","\n\nexport const to24hours = ( hour12 ) => { //\"10:00 am\",\"10:00am\",\"09:30PM\"\n\n     const time = hour12.replace(/[^0-9:]/g,'').split(':') ;\n     const jrnd = hour12.toLowerCase().replace(/[\\s+:.0-9]/g,'')\n\n     const addNum = jrnd.indexOf('pm') >= 0\n                         ? time.indexOf('12') >= 0\n                              ? 0\n                              : 12\n                         : time.indexOf('12') >= 0\n                              ? -12\n                              : 0 ;\n\n     return( `${ parseFloat(time[0]) + addNum }:${ time[1] }`) ;\n\n};\n","\n\nexport const variablesControlHemo = [\n     // \"P/A\",\n     [ \"FC\", \"F.Cardiaca\" ],\n     [ \"T°C\", \"Temperatura\" ],\n     [ \"FR\",  \"Frec.Resp\" ],\n     // \"Código\",\n     [ \"PAM\", \"PAM\" ],\n     // \"PVC\", //\n     // \"PAP\",\n     // \"PCP\",\n     // \"Ángulo de Cabecera\",\n     // \"EVA/S.A.S\",\n     [ \"FIO2\", \"FIO2\" ],\n     // \"IPAP/PS\",\n     // \"EPAP/PEEP\",\n     // \"PC\",\n     [ \"VOL.CTE\", \"Volum.Corrie\" ],\n     // \"VOL.MIN\",\n     [ \"SAT\", \"Saturacion\" ],\n     // \"CUFF/CMS\",\n     // \"HGT\",\n     // \"Insulina\",\n     // \"Residuo Gástrico\"\n]\n","\nimport { unitToTwoUnit } from '../../helpers/unitToTwoUnit' ;\nimport { resourceServer } from '../../../env' ;\nimport { to24hours }  from './to24hours' ;\nimport { prom } from './prom' ;\nimport { dataFormat, variables } from './dataFormat' ;\nimport { variablesControlHemo } from './variablesControlHemo'  ;\n\n// enviroment\nimport { addToken } from '../../helpers/token'; \nconst { urlServer, requestOptionsPost } = resourceServer ;\n\nexport const getInfo = async ( id, dayNow, setVitalSings ) => {\n\n     const dateFromTimeLine = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}` ;\n     // const dateFromTimeLineTom = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(parseInt(dayNow[0])+1)}` ;\n\n     const bundle = {\n          resourceType : \"Bundle\",\n          type : \"batch\",\n          entry:[]\n     };\n\n     const vitalSings = {\n          PresArterial: dataFormat(variables).PresArterial,\n          FrecCardiaca: dataFormat(variables).FrecCardiaca,\n          TempCorporal: dataFormat(variables).TempCorporal,\n          FrecRespiratoria: dataFormat(variables).FrecRespiratoria,\n     } ;\n\n     const labels = [];\n     ['alarmaDia:','alarmaNoche:'].forEach( jornada => {\n          [\n               'Hora', 'P/A','FC','T°C','FR',\n               'Código','PAM','PVC','PAP','PCP','Ángulo de Cabecera','EVA/S.A.S'\n               ,'Cód./Modo','FIO2','IPAP/PS','EPAP/PEEP','PC','VOL.CTE','VOL.MIN','SAT','CUFF/CMS',\n               'DU Parcial','DU Total','Deposiciones','HGT','Insulina','Residuo Gástrico','Evaluación contenciones',\n          ].forEach( item => labels.push( jornada+item) )\n     }) ;\n\n     labels.forEach( label =>{\n          bundle.entry.push(\n               {\n                    \"request\" : {\n                         \"method\" : \"GET\",\n                         \"url\" : `Basic?subject=${id}&identifier=${label.replace(/[^a-zA-Z0-9:]/g,'')}&identifier=${dateFromTimeLine}T00:00:00Z`\n                    }\n               }\n          )\n     })\n\n     requestOptionsPost.body =  JSON.stringify( bundle )\n\n     const config = addToken(requestOptionsPost) ;\n     config.headers.append(\"Content-Type\", \"application/json\") ;\n\n     const respBundle = await fetch(`${urlServer}`, config );\n     const objBundle = await respBundle.json();\n\n     const resources = [];\n     objBundle.entry.forEach( entry => {\n          if( entry.resource.total > 0){\n               resources.push( entry.resource.entry[0].resource )\n          }\n     });\n\n     if( resources.length > 0 ){\n\n          const paramJornada = [] ;\n\n          ['alarmaDia','alarmaNoche'].forEach( jornada => { // Parametros por jornada\n               paramJornada.push(\n                    resources.filter( rsc => rsc.code.text.indexOf( jornada ) >= 0 )\n                         .map( rsc => rsc.code )\n               )\n          }) ;\n\n          let parametros = paramJornada.map( arrayPar =>\n               arrayPar.map( (obj,idx,arr) => {\n                    return({\n                         name: obj.text.split(':')[1],\n                         data: obj.coding.reduce( (acc,act)=>[\n                              ...acc,\n                              idx\n                              ? !parseFloat(act.display)\n                                   ? prom(acc)  // Valor promedio para reemplazar un NaN\n                                   : parseFloat(act.display)\n                              : to24hours( act.display )\n                         ],[])\n                    })\n               })\n          ) ;\n\n          // agrupar datos de las jornadas\n          parametros = parametros[ parametros.reduce( (acc,act,idx)=> acc = act.length > acc ? idx : acc , 0 ) ]\n                         .map( p => {\n                              let dataDia = parametros[0].find( p2 => p2.name === p.name)?.data\n                                   ? parametros[0].find( p2 => p2.name === p.name).data\n                                   : [ '0', '0' ];\n\n                              let dataNoche = parametros[1].find( p2 => p2.name === p.name)?.data\n                                   ? parametros[1].find( p2 => p2.name === p.name).data\n                                   : [ '0', '0' ];\n\n                              return({\n                                   name: p.name,\n                                   data: [...dataDia, ...dataNoche]\n                              })\n                         }) ;\n\n          Object.keys( vitalSings ).forEach( label =>\n               vitalSings[label] = {\n                    ...vitalSings[label],\n                    array: parametros.length > 0\n                              ? parametros.find( p => p.name === 'Hora' ).data\n                                   .map( (hour,idx) => [\n                                        parametros.find( p => p.name === vitalSings[label].key )\n                                             ? parametros.find( p => p.name === vitalSings[label].key ).data[idx]\n                                                  ? parametros.find( p => p.name === vitalSings[label].key ).data[idx]\n                                                  : '0'\n                                             : '0' ,\n                                        hour\n                                   ])\n                              : [['0','0']]\n               }\n          ) ;\n\n          parametros.forEach( obj => {\n               vitalSings[obj.name] = obj.data\n          });\n\n          // Carga de parametros sindromaticos\n          variablesControlHemo.forEach( v => {\n               variables[v[1]].value = prom( vitalSings[v[0]] ).toFixed(1)\n          })\n\n        //  console.log( Object.assign( dataFormat( variables ), vitalSings ) );\n     };\n\n     setVitalSings({\n          ...Object.assign( dataFormat( variables ), vitalSings )\n     });\n};\n","import React,{useState,useEffect} from 'react' ;\nimport { Grid } from '@mui/material' ;\n//Componentes\nimport { DashBox } from './DashBox ';\nimport { DashContentGraficas} from './DashContentGraficas' ;\nimport { BoxSindromatico } from './BoxSindromatico' ;\nimport { PlotMedicacion } from './PlotMedicacion' ;\nimport { Ventilacion } from './Ventilacion' ;\n// Estilos\nimport { Stl } from '../../Stl' ;\n// helpers\nimport { getMedicacion } from './helpers/getMedicacion';\nimport { dataFormat, variables } from './helpers/dataFormat' ;\nimport { getInfo }  from './helpers/getInfo' ;\n\nexport const Dashboard = ( {dt} ) => {\n\n     const classes = Stl() ;\n\n     const [ id , dayNow  ] = dt ;\n\n     const [vitalSings, setVitalSings] = useState({\n          ...dataFormat(variables)\n     });\n\n     const cuadros = [\n          {key:\"Sepsis-Inflamatorio\",obj:vitalSings.sepsis},\n          {key:\"Shock-Hemodinámico\",obj:vitalSings.shock},\n          {key:\"Ventilatorio\",obj:vitalSings.ventilatorio},\n          {key:\"Transplante\",obj:vitalSings.transplante},\n          {key:\"Renal\",obj:vitalSings.renal},\n          {key:\"Neurologíco\",obj:vitalSings.neurologico}\n     ];\n\n     const [medicacion, setMedicacion] = useState([\n          {\n               categoria:'Categoría',\n               medicamento:'Medicamento',\n               intervaloValue:'h',\n               intervaloUnit:'#',\n               date: new Date(),\n               dosisValue:'1',\n               dosisUnit:'ml,g'\n          }\n     ]);\n\n     \n     useEffect( () => {\n          getMedicacion( id, dayNow, setMedicacion);\n          getInfo( id, dayNow, setVitalSings );\n     }, [id,dayNow] );\n\n     return(\n          <>\n               <Grid\n                    container\n                    spacing={1}\n               >\n                    <Grid\n                         item\n                         xs={9}\n                    >\n                         <Grid\n                              container\n                              spacing={1}\n                         >\n                              {\n                                   [\n                                        ['Presión Arterial', vitalSings.PresArterial],\n                                        ['Frecuencia Cardiaca', vitalSings.FrecCardiaca],\n                                        ['Temperatura Corporal', vitalSings.TempCorporal ],\n                                        ['Frecuencia Respiratoria', vitalSings.FrecRespiratoria ]\n                                   ].map( (plot,idx) =>\n                                        <Grid\n                                             item\n                                             xs={6}\n                                             key={idx}\n                                        >\n                                             <DashBox\n                                                  stl={classes}\n                                                  title={plot[0]}\n                                             >\n                                                  <DashContentGraficas\n                                                       stl={classes}\n                                                       data={plot[1]}\n                                                  />\n                                             </DashBox>\n                                        </Grid>\n                                   )\n                              }\n\n                              <Grid\n                                   item\n                                   xs={12}\n                              >\n                                   <DashBox\n                                        stl={classes}\n                                        title='Medicación'\n                                   >\n                                        <PlotMedicacion\n                                             data={ medicacion }\n                                             date={ dayNow }\n                                        ></PlotMedicacion>\n                                   </DashBox>\n                              </Grid>\n                              <Grid\n                                   item\n                                   xs={12}\n                              >\n                                   <DashBox\n                                        stl={classes}\n                                        title='Ventilación'\n                                   >\n                                        <Ventilacion\n                                             stl={classes}\n                                             dt={[id , dayNow]}\n                                        ></Ventilacion>\n                                   </DashBox>\n                              </Grid>\n\n                         </Grid>\n\n                    </Grid>\n\n                    <Grid\n                         item\n                         xs={3}\n                    >\n                         <BoxSindromatico\n                              stl={classes}\n                              title='Cuadro Sindromático'\n                              data={cuadros}\n                         >\n                         </BoxSindromatico>\n\n                    </Grid>\n\n\n\n               </Grid>\n          </>\n     );\n\n};\n","import React from 'react';\n\nexport const Laboratorio = () => {\n\n     return(\n          <div className=\"white\">\n               <h2 className=\"title p-5\">Laboratorio</h2>\n          </div>\n     );\n\n};\n","\nimport React, {useEffect,  useRef} from \"react\";\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\n\nconst Plot = (data, prom, _xl, _lg, svgSindro) => {\n\n     const yData = data.map( item => item[0] ).reverse() ;\n     const xData = data.map( item => item[1] );\n\n     const fontSize = _xl ? '22px' : _lg ? '16px': '12px' ;\n\n     const margin = {\n               right:25,\n               top:10,\n               bottom: _xl ? 65 : _lg ? 55: 43,\n               left: _xl ? 45 : _lg ? 40: 38,\n          } ;\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`)\n\n     // Parametros del eje horizontal\n     const xScale = d3.scaleTime()\n                    .domain( d3.extent( xData, d => new Date(d) )  )\n                    .range([margin.left, width-margin.right] ) ;\n\n     const xScaleData = d3.scaleLinear()\n                    .domain( [ 0 , data.length ] )\n                    .range([margin.left, width-margin.right] );\n\n     const x_axis = d3.axisBottom()\n                    .scale(xScale) ;\n\n     // Insercion del eje x\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(0, ${height-margin.bottom})`)\n          .call(x_axis)\n          .attr(\"color\", 'black' )\n          .attr('opacity','0.85')\n          .selectAll(\"text\")\n          .attr(\"transform\",\"rotate(45,-8,15)\")\n          .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`)\n\n\n     // Parametros de eje vertical\n     const limits = d3.extent( yData, d => parseFloat(d) ).reverse() ;\n\n     const yScale = d3.scaleLinear()\n                    .domain( [limits[0], limits[1] ] )\n                    .range([margin.top , height - margin.bottom ]) ;\n\n     const yAxis = d3.axisLeft()\n                    .scale(yScale)\n                    .tickSize(-width + margin.right + margin.left )\n                    .ticks(5) ;\n\n     // Insercion del eje y\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(${margin.left} ,0)`)\n          .call(yAxis)\n          .attr(\"color\", 'black' )\n          .attr('opacity','0.85')\n          .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`)\n          .call(g => g.select(\".domain\") // Quita la primera linea continua y la linea vertical continua\n               .remove()\n          )\n          .call(g => g.selectAll(\"line\") // .tick:not(:first-of-type)\n               .attr(\"stroke-opacity\", \"0.3\")\n          ) ;\n\n     // Grafica : datos\n     svg.append(\"path\")\n          .datum(yData)\n          .attr(\"fill\", 'none')\n          .attr(\"stroke\", '#80A9FF')\n          .attr(\"stroke-width\", '2')\n          .attr(\"d\", d3.line()\n               .x( (d,i) => xScaleData(i) )\n               .y( (d,i) => yScale( d ) )//!parseFloat(d) ? parseFloat(prom) : parseFloat(d)) )\n               .curve( d3.curveCatmullRom )\n          );\n\n     // Grafica : promedio\n     svg.append(\"path\")\n          .datum(yData)\n          .attr(\"fill\", 'none')\n          .attr(\"stroke\", '#d51919')\n          .attr(\"stroke-width\", '1.4')\n          .attr(\"d\", d3.line()\n               .x( (d,i) => xScaleData(i) )\n               .y( (d,i) => yScale( parseFloat(prom) ) )\n               .curve( d3.curveCatmullRom )\n          );\n\n};\n\nexport const PlotGrafica = ( {data, prom} ) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const svgSindro = useRef(null);\n\n     useEffect( ()=> {\n          Plot(data, prom, _xl, _lg, svgSindro);\n     },[data, prom, _xl, _lg, svgSindro ]);\n\n\n     return(\n          <svg ref={svgSindro} width={'100%'} height={_xl ? '300px' : _lg ? '220px':'200px'} />\n     );\n};\n","import React, {useEffect } from 'react';\nimport * as d3 from \"d3\";\n\nimport { MediaQuery } from '../../MediaQuery';\n\n\nconst margin = { right:13, top:10,  bottom: 35, left: 17, } ;\n\n// funcion que gobierna el svg:\nconst plot = (svgSindro, interval, normal, setNormal, _xl, _lg) => {\n\n     const fontSize = _xl ? '22px' : _lg ? '16px': '12px' ;\n\n     let flag = false ;\n     const ajustado = [\n          normal[0] < interval[0],\n          normal[1] > interval[1]\n     ].map( (exp, idx) => {\n\n          if( exp ){\n               flag = true ;\n               return  parseFloat((2*interval[idx] - normal[idx])).toFixed(1)  ;\n          }\n          return normal[idx]\n     });\n\n     if(flag){\n          setNormal(ajustado.sort( (a,b)=>a-b))\n     };\n\n\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`)\n\n     // Parametros del objeto\n     const xScale = d3.scaleLinear()\n                    .domain( interval )\n                    .range( [margin.right, width-margin.left] );\n\n     // line\n     svg.append('line')\n          .attr('x1', xScale(interval[0]) )\n          .attr('x2', xScale(interval[1]) )\n          .attr('y1', 2*height/4 )\n          .attr('y2', 2*height/4 )\n          .attr('stroke', '#525252')\n          .attr('stroke-width','0.2rem') ;\n\n     // circulos\n     [\n          interval[0],\n          interval[1]\n     ].forEach( (e) =>{\n               svg.append('circle')\n                    .attr('cx', xScale(e) )\n                    .attr('cy', 2*height/4 )\n                    .attr('r', 5)\n                    .attr('fill','#525252')\n     }) ;\n\n     // barras rojas\n     [\n          [xScale(interval[0]) + 7, xScale(normal[0]), 'rgba(166, 0, 0, 0.83)'],\n          [xScale(normal[1]), xScale(interval[1]) - 7, 'rgba(166, 0, 0, 0.83)'],\n          [xScale(normal[0]), xScale(normal[1]) , 'rgba(0, 157, 35, 0.83)']\n     ].forEach( item => {\n          svg.append('line')\n               .attr('x1', item[0] )\n               .attr('x2', item[1] )\n               .attr('y1', 2*height/4  )\n               .attr('y2', 2*height/4  )\n               .attr('stroke', item[2])\n               .attr('stroke-width',_lg ? '2rem' : '1.5rem')\n     });\n\n     // marcas de texto en extremos\n     [\n          xScale(interval[0])-13,\n          xScale(interval[1])-6\n     ].forEach( (item,idx) => {\n          svg.append('text')\n               .attr('x', item )\n               .attr('y', 2*height/4 + 17 )\n               .attr('stroke', '#525252')\n               .attr(\"font-family\", \"Montserrat\")\n               .attr('font-weight', '300')\n               .attr('fontSize', fontSize )\n               .text(interval[idx]);\n     });\n\n     // indicadores de marca\n     let dx = 0 ;\n     const dragHandler = {} ;\n     [\n          [xScale(normal[0])-13, _lg ? 2*height/4-16 : 2*height/4-13],\n          [xScale(normal[1])-13, _lg ? 2*height/4-16 : 2*height/4-13]\n     ].forEach( (item, i) => {\n          svg.append('path')\n               .attr('id', `arrow_${i}`)\n               .attr( 'd' , 'M12.5 18L0.808656 0.75L24.1913 0.750002L12.5 18Z')\n               .attr('fill', '#030000')\n               .attr('transform',`translate( ${ item } )` )\n               .attr('style','cursor:pointer')\n\n          dragHandler[`handler_${i}`] = d3.drag()\n               .on('drag',(event) => {\n\n                    if( event.dx < 50 ){\n                         dx = dx + event.dx*(interval[1]-interval[0])/(_xl?700:_lg?500:400) ;\n\n                         let value = dx + parseFloat(normal[i]) ;\n                         \n                         if( value  > (interval[0]+0.1) & value  < (interval[1]-0.1) ){\n\n                              setNormal(\n                                   [ parseFloat(value).toFixed(2), parseFloat(normal[1-i]).toFixed(2) ].sort((a,b)=> a-b)\n                              );\n                         }\n                    }\n               });\n\n          dragHandler[`handler_${i}`]( svg.select(`#arrow_${i}`) );\n     });\n\n};\n\nexport const Barra = ({interval, setNormal, normal}) => {\n\n     const svgSindro = React.useRef(null);\n     const {_xl, _lg} = MediaQuery() ;\n\n     useEffect( ()=> {\n          plot(svgSindro, interval, normal, setNormal,_xl, _lg);\n     },[svgSindro, interval, normal, setNormal,_xl, _lg]);\n\n     return(\n          <svg ref={svgSindro} width={'100%'} height={'40px'} />\n     );\n};\n","\nimport React, {useState} from 'react';\n\nimport { Barra } from './Barra' ;\n\nimport { MediaQuery } from '../../MediaQuery' ;\n\nconst Input = ({value,idx})=>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [label, setLabel] = useState([ value[0], value[1] ]) ;\n\n     const onChange = (num,idx,event) => {\n          // event.preventDefault();\n          let valueArray = [\n               [ num, label[1] ],\n               [ label[0], num ]\n          ][idx];\n\n          return(\n               setLabel(valueArray)\n          );\n     };\n\n     return(\n          <input\n               type={'numb'}\n               size={3}\n               value={label[idx]}\n               style={{caretColor: 'transparent',fontFamily:'Montserrat', fontSize:_xl ? '22px' : _lg ? '16px': '12px' }}\n               onChange={ (event)=> onChange(\n                    isNaN(parseInt(event.target.value))\n                    ? 0\n                    : parseInt(event.target.value),\n                    idx, event )\n               }\n\n          />\n     )\n}\n\nexport const CellText = ({intervals, title}) => {\n\n     const [normalInterval, setNormal] = useState(\n          intervals[4].split('-')\n               .map(n =>\n                    parseFloat(n)\n                         ? parseFloat(n).toFixed(2)\n                         : 0\n               )\n     ) ;\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [value, setValue] = useState(intervals[3].split('-').map( n=>parseInt(n)) ) ; // intervalo variable :\n\n     const onBlur = (num,idx,event) => {\n\n          if( num === value[1-idx] ) {\n               num = num + 1\n          }\n          let valueArray = [ num, value[1-idx] ].sort( (a,b)=>a-b ) ;\n\n          setValue( valueArray )\n     };\n     const onKeyDown = ( num,idx,event ) =>{\n\n          if( event.key === \"Enter\" ){\n               onBlur(num,idx)\n          }\n     };\n\n     const intervalos = localStorage.getItem(`intervalos`)\n                    ? JSON.parse( localStorage.getItem(`intervalos`) )\n                    : {} ;\n\n     intervalos[`${title}_intervalos`] = [value, normalInterval] ;\n     localStorage.setItem(`intervalos`, JSON.stringify( intervalos, null, 2) )  ;\n\n     return(\n          <>\n               {\n                    ['min:','max:'].map( (field,idx) => {\n\n                         return(\n                              <div\n                                   key={idx}\n                                   align='center'\n                                   style={{fontFamily:'Montserrat'}}\n                                   onBlur={ (event)=> onBlur(\n                                        isNaN(parseInt(event.target.value))\n                                        ? value[idx]\n                                        : parseInt(event.target.value),\n                                        idx, event)\n                                   }\n                                   onKeyDown={ (event) =>onKeyDown(\n                                        isNaN(parseInt(event.target.value))\n                                        ? value[idx]\n                                        : parseInt(event.target.value),\n                                        idx,\n                                        event )\n                                   }\n                              >\n                                   <span\n                                        style={{paddingInline:'0.8rem',  fontSize:_xl ? '22px' : _lg ? '16px': '12px'}}\n                                   >\n                                        {field}\n                                   </span>\n\n                                   <Input\n                                        value={value}\n                                        idx={idx}\n                                   />\n\n                              </div>\n                         )\n                    })\n               }\n               <p align='center'>\n                    <Barra interval={value} setNormal={setNormal} normal={normalInterval}/>\n               </p>\n\n               <p\n                    style={{fontFamily:'Montserrat',fontSize:_xl ? '22px' : _lg ? '16px': '12px' }}\n               >\n                    Rango sin alerta:\n                    {\n                         [\n                              normalInterval[0],\n                              normalInterval[1]\n                         ].map( (label,idx) =>\n                              <span key={idx} style={{fontWeight:'bold'}}>\n                                    {' '+ label }  {idx === 0 ? ' - ': ' '}\n                              </span>\n                         )\n                    }\n\n               </p>\n\n          </>\n     )\n};\n","import { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { getLastHour } from '../helpers/getLastHour';\nimport { resourceServer } from '../../env'\n\n\nexport const getParametros = async(dayNow, id, label, setParametros) => {\n\n     const dte = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}` ;// 2022-08-10\n     const hour =  getLastHour( 'lastHour' ) ;\n     const { urlServer, requestOptionsGet } = resourceServer ;\n\n\n     await fetch(`${urlServer}Observation?identifier=${dte}${hour}&identifier=metricas&subject=${id}`,\n          requestOptionsGet).then( resp =>\n               resp.text().then( obj => {\n\n                    const data = JSON.parse( obj )\n\n                    if( data?.total > 0 ){\n\n                         // const url = data.entry[0].fullUrl.split('v4/')[1] ;\n                         const resource = data.entry[0].resource ;\n\n                         let obj = resource.component.find( comp => comp.code.text === label ) ;\n\n                         setParametros( ()=>obj.code.coding.map( item => item.display.split(':')[1] ) );\n\n                    };\n\n               })\n          )\n\n};\n","import React, {useState, useEffect} from 'react' ;\nimport { styled } from '@mui/system';\nimport { makeStyles } from '@material-ui/core' ;\nimport Draggable from 'react-draggable';\n\nimport { PlotGrafica } from './PlotGrafica' ;\nimport { CellText } from './CellText' ;\nimport { makeAlerts } from './makeAlerts' ;\nimport { getParametros }  from './getParametros' ;\n\nimport { MediaQuery } from '../../MediaQuery' ;\n\nconst Container = (props) => {\n\n     const { _xl,_lg} = MediaQuery() ;\n\n     const Obj = styled('div')({\n          width: 'auto',\n          height: _xl? '185px' : _lg ? '142px': '125px',\n          borderRadius: '0.15rem',\n          paddingBlock: '0.2rem',\n          paddingInline: _lg ? '1rem' : '0.3rem',\n          display: 'flex',\n          flexDirection: 'column',\n          fontFamily:' Montserrat',\n          justifyContent: 'space-around'\n     });\n\n     return(\n          <Obj style={props.style}> {props.children} </Obj>\n     )\n\n};\n\nconst TitleParameter = (props) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const  Obj = styled('span')({\n          fontFamily: 'Montserrat !important',\n          fontWeight: '600',\n          fontSize: _xl ? '25px' : _lg ? '20px': '14px',\n          marginRight:'0.5rem'\n     });\n\n     if( props?.children.length > 0 ){\n          if( props?.square & props.children[0].split(' ').length > 1 ){\n               return(\n\n                         <Obj>\n                              <pre\n                                   style={{fontFamily:'Montserrat',margin:'0px'}}\n                              >\n                              {`${props.children[0].split(' ')[0]}\n     ${props.children[0].split(' ')[1]}:`}\n                              </pre>\n                         </Obj>\n               )\n          };\n     };\n\n\n     return(\n          <Obj> {props?.children} </ Obj>\n     );\n};\n\nconst ValueParameter = (props) =>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const  Obj = styled('span')({\n          fontWeight: '400',\n          fontSize: _xl ? 'xx-large': _lg ? 'x-large' : 'small'\n     });\n\n     return(\n          < Obj> {props.children} </ Obj>\n     )\n\n};\n\nconst UnidParameter = (props) =>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const  Obj = styled('span')({\n          fontFamily: 'Montserrat !important',\n          fontWeight: '500',\n          fontSize: _xl ? '24px' : _lg ? '14px': '10px',\n          marginLeft:'0.1rem'\n     });\n\n     return(\n          < Obj> {props.children} </ Obj>\n     )\n};\n\nconst TitleTendencia = (props) => {\n\n     const { _lg} = MediaQuery() ;\n\n     const Obj = styled('p')({\n          textAlign: 'left',\n          marginBlock:'0px',\n          fontWeight: '300',\n          fontSize: _lg ? 'larger' : 'medium',\n     });\n\n     return (\n          <Obj> {props.children} </Obj>\n     )\n};\n\nconst ValueTendencia = (props) =>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const  Obj = styled('span')({\n          fontWeight: '400',\n          fontSize: _xl ? 'x-large' :_lg ? 'large' : 'small'\n     });\n\n     return(\n          < Obj> {props.children } </ Obj>\n     );\n}\n\nconst Parr = (props) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const Obj = styled('div')({\n          width:'100%',\n          marginBlock: _lg ? '5px' : '3px',\n          whiteSpace: 'nowrap',\n          display: 'flex',\n          flexWrap: 'nowrap',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          fontFamily: 'Montserrat !important',\n          fontSize:_xl ? '22px' : _lg ? '16px': '12px'\n     });\n\n     return(\n          <Obj> {props.children} </Obj>\n     )\n};\n\nconst Plot = (props) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const Obj = styled('div')({\n          position: 'absolute',\n          top:  _xl ? '600px' : _lg ? '680px' : '380px',\n          left: _xl ? '700px' : _lg ? '550px' : '400px',\n          maxWidth: 'content',\n          background: 'white',\n          border:' hsl(0deg 0% 33%) solid 0.13rem',\n          borderRadius: '0.15rem',\n          zIndex:'100',\n          paddingInline: '0.5rem',\n          paddingTop:'0.3rem',\n          display: 'flex',\n          flexDirection:'column',\n          flexWrap: 'nowrap',\n          alignItems: 'stretch',\n          justifyContent: 'space-between',\n          '&:hover':{\n               zIndex:'1000',\n          }\n     });\n\n     return(\n          <Draggable>\n               <Obj align={props.align} id={props.id}style={props.style}> {props.children} </Obj>\n          </Draggable>\n     );\n};\n\nconst Alert = styled('div')({\n     position: 'absolute',\n     maxWidth: 'content',\n     background: 'white',\n     border:' hsl(0deg 0% 33%) solid 0.13rem',\n     boxShadow: 'rgba(0, 0, 0, 0.4) 5px 5px 5px 3px',\n     borderRadius: '0.15rem',\n     zIndex:'100',\n     paddingInline: '0.5rem',\n     paddingTop:'0.3rem',\n     width:'35%',\n     transition: 'zIndex 1s  linear 0.5s',\n     '&:hover':{\n          zIndex:'1000',\n     }\n});\n\nconst Svg = (props) => {\n\n     const Obj = styled('svg')({\n         cursor:'pointer',\n         borderRadius:'0.2rem',\n         transition:'background 0.15s ease',\n         '&:active':{\n              background:`hsl(${props.color}deg 100% ${60}%)`\n         }\n     });\n\n     return(\n          <Obj width={props.width} height={props.height} viewBox={props.viewBox} fill={props.fill}\n               onClick={props.onClick}\n               >\n               {props.children}\n          </Obj>\n     )\n\n}\n\n\nconst color = (array, parametros) => {\n\n     if( array ){\n\n          let flag = (\n               array.findIndex( num => num[0] <= parseFloat(parametros[4].split('-')[0]) ) >= 0\n               ||\n               array.findIndex( num => num[0] >= parseFloat(parametros[4].split('-')[1]) ) >= 0\n          );\n\n          return( flag ? 6 : 216 ) ;\n     }\n\n     return(216);\n};\n\nconst FunctionAlert = ({idPat, title, day, id, array}) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n     const [ displayAlert, setDisplayAlert ] = useState('hidden') ;\n     const [parametros, setParametros] = useState(()=>['xx','xx','xx','2-20','12-15']);\n     let intervalos = '' ;\n\n     useEffect(() => {\n          getParametros(day, idPat, title[0], setParametros) ;\n     },[day, idPat, title, setParametros]);\n\n     const h_color = color(array, parametros)//useMemo( () => color(array, parametros),[array, parametros] );\n\n     return({\n          setDisplayAlert:() => setDisplayAlert( state => state === 'hidden' ? 'visible' : 'hidden' ),\n          parametros,\n          h_color,\n          RenderAlert: ()=>\n               <Draggable>\n                    <Alert\n                         align=\"left\"\n                         style={{\n                              visibility:displayAlert,\n                              top:  _xl ? '600px' : _lg ? '680px' : '380px',\n                              left: _xl ? '1200px' : _lg ? '920px' : '850px',\n                         }}\n                    >\n                         <Parr>\n                              <TitleParameter>\n                                   Alerta para {title[1]}\n                              </TitleParameter>\n                              <Svg width={_xl ? '45' : '30'} height={_xl ? '45' : '30'} viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                                   color={h_color}\n                                   onClick={ ()=>{\n                                        setDisplayAlert('hidden');\n                                        intervalos = JSON.parse( localStorage.getItem(`intervalos`) )[`${title[1]}_intervalos`] ;\n                                        makeAlerts(day, idPat, title[0], intervalos);\n                                        parametros[3] = `${intervalos[0][0]}-${intervalos[0][1]}` ;\n                                        parametros[4] = `${intervalos[1][0]}-${intervalos[1][1]}` ;\n                                        setParametros( parametros ) ;\n                                   }}\n                              >\n                                   <path\n                                        d='M26.3 0.8H9.3C7.7 0.8 6.4 2.1 6.4 3.6V20.6C6.4 22.2 7.7 23.4 9.3 23.4H26.3C27.9 23.4 29.1 22.2 29.1 20.6V3.6C29.1 2.1 27.9 0.8 26.3 0.8ZM26.3 20.6H9.3V3.6H26.3V20.6ZM3.6 6.4V26.3H23.4V29.1H3.6C2.1 29.1 0.8 27.9 0.8 26.3V6.4H3.6ZM11.8 16.1L15.8 12.1L11.8 8.1L13.8 6.1L17.8 10.1L21.8 6.1L23.8 8.1L19.8 12.1L23.8 16.1L21.8 18.1L17.8 14.1L13.8 18.1L11.8 16.1Z'\n                                        fill=\"black\"\n                                        fillOpacity=\"0.8\"\n                                   />\n                              </Svg>\n                         </Parr>\n\n                         <p\n                              style={{\n                                   paddingRight:'1rem',\n                                   paddingBottom:'1rem',\n                                   fontFamily:'Montserrat',\n                                   fontSize:_xl ? '22px' : _lg ? '16px': '12px'\n                              }}\n                         >\n                              Límites de observación:\n                         </p>\n\n                              <CellText intervals={parametros} title={title[1]}/>\n\n                    </Alert>\n               </Draggable>\n     })\n};\n\n\nconst FuntionPlot = ({array, prom, value, parametros, tendencia, id, h_color, title}) => {\n\n     const {_xl} = MediaQuery() ;\n\n     const [ displayPlot, setDisplayPlot ] = useState('hidden') ;\n\n     const styleDraggable = {\n          width:\"35%\",\n          boxShadow: 'rgba(0, 0, 0, 0.4) 5px 5px 5px 3px'\n     };\n\n     return({\n          setDisplayPlot: ()=>setDisplayPlot(  state => state === 'hidden' ? 'visible' : 'hidden' ),\n          RenderPlot: ()=>\n               <Plot\n                    style={{  ...styleDraggable,\n                              visibility:displayPlot\n                         }}\n                    align=\"left\"\n                    className={'animate__animated animate__bounceIn'}\n                    id={`${id}`}\n               >\n                    <Parr>\n                         <TitleParameter>\n                              {title[1]}\n                         </TitleParameter>\n                         <Svg width={_xl ? '45' : '30'} height={_xl ? '45' : '30'} viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                              color={h_color}\n                              onClick={ ()=>setDisplayPlot('hidden')}\n                         >\n                              <path\n                                   d='M26.3 0.8H9.3C7.7 0.8 6.4 2.1 6.4 3.6V20.6C6.4 22.2 7.7 23.4 9.3 23.4H26.3C27.9 23.4 29.1 22.2 29.1 20.6V3.6C29.1 2.1 27.9 0.8 26.3 0.8ZM26.3 20.6H9.3V3.6H26.3V20.6ZM3.6 6.4V26.3H23.4V29.1H3.6C2.1 29.1 0.8 27.9 0.8 26.3V6.4H3.6ZM11.8 16.1L15.8 12.1L11.8 8.1L13.8 6.1L17.8 10.1L21.8 6.1L23.8 8.1L19.8 12.1L23.8 16.1L21.8 18.1L17.8 14.1L13.8 18.1L11.8 16.1Z'\n                                   fill=\"black\"\n                                   fillOpacity=\"0.8\"\n                              />\n                         </Svg>\n                    </Parr>\n\n\n                    <section\n                         style={{display:'flex'}}\n                    >\n\n                         <PlotGrafica data={array} prom={prom}/>\n\n                         <div>\n                              {\n                                   ['Magnitud','Promedio','Tendencia'].map( (label,idx)=>{\n                                        return(\n                                             <div key={idx} >\n                                                  <Parr>\n                                                       <strong>{label}</strong>\n                                                  </Parr>\n                                                  <Parr align=\"center\" >\n                                                       {\n                                                            [`${value} ${parametros[2]}`,`${prom} ${parametros[2]}`,`${tendencia} ${parametros[2]}/h`][idx]\n                                                       }\n                                                  </Parr>\n                                             </div>\n                                        )\n                                   })\n                              }\n                         </div>\n                    </section>\n               </Plot>\n     });\n};\n\n\n// Componente\nexport const Square =  ({\n          day,\n          idPat=0,\n          title='',\n          value='100',\n          tendencia='5',\n          prom='0',\n          array=[0,0],\n          id=0,\n     }) => {\n\n     const {setDisplayAlert, RenderAlert, parametros, h_color} = FunctionAlert({idPat, title, day, id, array});\n     const {setDisplayPlot, RenderPlot } = FuntionPlot({array, prom, value, parametros, tendencia, id, h_color, title});\n\n     const useStyle = makeStyles(theme => ({\n          bottomP : {\n               cursor:'pointer',\n               borderRadius:'0.2rem',\n               transition:'background 0.15s ease',\n               '&:active':{\n                    background:`hsl(${h_color}deg 100% ${60}%)`\n               }\n          }\n     }))\n\n     const classes = useStyle();\n\n     const {_xl} = MediaQuery() ;\n\n     const styleContainer =  {\n          border: `0.13rem solid hsl(${h_color}deg 100% ${30}%)`,\n          background:  `hsl(${h_color}deg 100% ${92}%)`,\n          color:  `hsl(${h_color}deg 100% ${30}%)`\n     }\n\n     const styleSection = {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          alignContent: 'center',\n          justifyContent: 'space-between',\n          flexDirection:'column',\n          alignItems:'flex-start'\n     };\n\n\n\n     return(\n          <>\n\n               <RenderAlert/>\n\n               <RenderPlot/>\n\n               <Container\n                    style={styleContainer}\n               >\n                    <div\n                         style={{width:'max-content', display:'flex', flexDirection:'row', fleWrap: 'wrap', alignItems: 'flex-end'}}\n                    >\n                         <TitleParameter square>\n                              {title[1]}:\n                         </TitleParameter>\n\n                         <ValueParameter>\n                              { ' ' + value }\n                         </ValueParameter>\n\n                         <UnidParameter>\n                              {\n                                   ' ' + parametros[2]\n                              }\n                         </UnidParameter>\n\n                    </div>\n                    <section\n                         style={styleSection}\n                    >\n                         <Parr>\n                              <div style={{ display:'inline', marginRight:'3px', width:'80%'}}>\n                                   <TitleTendencia>\n                                        Tend.:\n                                   </TitleTendencia>\n\n                                   <ValueTendencia>\n                                        {tendencia}\n                                        <UnidParameter>\n                                             {\n                                                  ' ' + parametros[2]\n                                             }\n                                        </UnidParameter>\n                                   </ValueTendencia>\n                              </div>\n                              <span\n                                   className={classes.bottomP}\n                                   onClick={ setDisplayAlert }\n                              >\n                                   <svg\n                                        width={_xl ? '45' : '30'} height={_xl ? '45' : '30'} viewBox=\"4 0 52 52\"  fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                                   >\n                                        <path d=\"M46.7083 46.7083H12.2917V12.2917H46.7083M46.7083 7.375H12.2917C10.9877 7.375 9.73711 7.893 8.81506 8.81506C7.893 9.73711 7.375 10.9877 7.375 12.2917V46.7083C7.375 48.0123 7.893 49.2629 8.81506 50.1849C9.73711 51.107 10.9877 51.625 12.2917 51.625H46.7083C48.0123 51.625 49.2629 51.107 50.1849 50.1849C51.107 49.2629 51.625 48.0123 51.625 46.7083V12.2917C51.625 9.56292 49.4125 7.375 46.7083 7.375ZM27.0417 36.875H31.9583V41.7917H27.0417V36.875ZM27.0417 17.2083H31.9583V31.9583H27.0417V17.2083Z\" fill={`hsl(${h_color}deg 100% ${30}%)`}/>\n                                   </svg>\n                              </span>\n                         </Parr>\n                         <Parr>\n                              <div style={{ display: 'inline', marginRight:'3px', width:'80%'}}>\n                                   <TitleTendencia>\n                                        Prom.:\n                                   </TitleTendencia>\n\n                                   <ValueTendencia>\n                                        { prom }\n                                        <UnidParameter>\n                                             {\n                                                  ' ' + parametros[2]\n                                             }\n                                        </UnidParameter>\n                                   </ValueTendencia>\n                              </div>\n                              <span\n                                   className={classes.bottomP}\n                                   onClick={ setDisplayPlot }\n                              >\n                                   <svg\n                                        width={_xl ? '45' : '30'} height={_xl ? '45' : '30'} viewBox=\"-1 -10 52 59\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                                   >\n                                        <path d=\"M24.84 10.58C22.64 10.38 20.7 12 20.5 14.22L20 20H25.64V24H19.64L18.76 34.14C18.36 38.54 14.48 41.8 10.08 41.4C7.58 41.18 5.32 39.8 4 37.66L7 34.66C7.66 36.76 9.92 37.94 12 37.26C13.56 36.78 14.66 35.4 14.8 33.78L15.64 24H9.64V20H16L16.54 13.86C16.92 9.46 20.78 6.2 25.2 6.56C27.72 6.78 30 8.18 31.32 10.34L28.32 13.34C27.82 11.8 26.46 10.72 24.84 10.58ZM44 27.3L41.18 24.48L35.52 30.14L29.86 24.48L27 27.3L32.7 33L27 38.62L29.86 41.44L35.52 35.78L41.18 41.44L44 38.62L38.34 33L44 27.3Z\" fill={ `hsl(${h_color}deg 100% ${30}%)`}/>\n                                        <rect x=\"1\" y=\"1\" width=\"46\" height=\"46\" rx=\"7\" ry=\"7\" stroke={`hsl(${h_color}deg 100% ${30}%)`} strokeWidth=\"5\"/>\n                                   </svg>\n                              </span>\n                         </Parr>\n\n                    </section>\n               </Container>\n          </>\n     )\n};\n","import { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { getLastHour } from '../helpers/getLastHour';\nimport { resourceServer } from '../../env'\n\n\nexport const makeAlerts = (dayNow, id, label, intervalos) => {\n\n     const dte = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}` ;// 2022-08-10\n     const hour =  getLastHour( 'lastHour' ) ;\n     const { urlServer, requestOptionsGet, requestOptionsPut } = resourceServer ;\n\n\n     fetch(`${urlServer}Observation?identifier=${dte}${hour}&identifier=metricas&subject=${id}`,\n          requestOptionsGet).then( resp => {\n               resp.text().then( obj => {\n\n                    const data = JSON.parse( obj )\n\n                    if( data?.total > 0 ){\n\n                         const url = data.entry[0].fullUrl.split('v4/')[1],  resource = data.entry[0].resource ;\n\n                         let obj = resource.component.find( comp => comp.code.text === label ) ;\n\n                         if( obj ){\n\n                              let objIdx = resource.component.findIndex( comp => comp.code.text === label ) ;\n                              // let flag = obj.code?.coding\n\n                              obj.code.coding = [\n                                   { display: obj.code.coding[0].display  },\n                                   { display: obj.code.coding[1].display  },\n                                   { display: obj.code.coding[2].display  },\n                                   { display: `VarInterval:${intervalos[0][0]}-${intervalos[0][1]}`  }, // variable interval\n                                   { display: `NorInterval:${intervalos[1][0]}-${intervalos[1][1]}`  }  // normal interval\n                              ];\n\n                              resource.component[objIdx] = obj;\n                         };\n\n                         requestOptionsPut.body = JSON.stringify(resource);\n\n                         fetch(`${urlServer}${url}`,requestOptionsPut)\n\n                    };\n\n               })\n          })\n};\n","import React, {useEffect, useState, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\n\n\n// Obtener la fecha\nconst getHoMiSe = ( stringDate , ms=0 ) => {\n     const millis = new Date(stringDate).getTime() + ms ;\n     return new Date(millis).toLocaleString(\"en-es\").split(',')[1] ;\n};\n\nexport const PlotFlowRespiratorio = ( {data, name, point=80, setPoint, len=200, setLen, color} ) => {\n\n     const yData = data.body[0].data.data ; // Numeros : [ [ \"13.3\", \"13.6\", \"13.8\", … ], [ \"13.2\", \"13.2\", \"13.3\", … ], ... ]\n     const xData = data.body[0].data.date.reverse() ; // fechas : [\"2022-02-24 19:08:49.399955\", ... ]\n     const delay = data.body[0].data.delay ; // intervalo de tiempo en ms de cada epoch : yData[i]  :[\"342740\", ... ] ms\n\n     const svgSindro = React.useRef(null);\n\n     const [ rect, setRect ] = useState({\n          x:0,\n          width:0\n     });\n\n     const {_xl,_lg} = MediaQuery();\n\n     const datum = useMemo( () =>{\n          const makeData = () => {\n\n               let datum = [];\n               let deltaTime = 0;\n               // console.log( \"make data\" );\n               yData.forEach( (array,idxArray)=>{\n\n                    let timeGet = new Date( xData[idxArray+1] ).getTime()-new Date( xData[idxArray] ).getTime()  ;\n                    let flagZero = false ;\n\n                    if(delay[idxArray] > timeGet ){\n                         deltaTime = timeGet  / array.length\n                    }else{\n                         deltaTime = delay[idxArray] / array.length ;\n                         flagZero = true ;\n                    };\n\n                    datum = datum.concat(\n                         array.map( (item,idxItem)=>{\n                              if( (flagZero && idxItem === 0) || (flagZero && idxItem === array.length-1) ){\n                                   return [ new Date( xData[idxArray] ).getTime() + deltaTime*idxItem, 0 ]\n                              }else{\n                                   return [ new Date( xData[idxArray] ).getTime() + deltaTime*idxItem, item ]\n                              }\n                         })\n                    );\n               });\n\n               return( datum )\n          };\n\n          return(\n               makeData(yData,xData,delay)\n          )\n\n     },[yData,xData,delay] ) ;\n\n     useEffect( () => {\n\n          plot(svgSindro, datum, name, point, setPoint, len, setLen, rect, setRect,_xl,_lg, color)\n\n     },[svgSindro, datum, name, point, setPoint, len, setLen, rect, setRect, _xl, _lg, color])\n\n     return(\n          <svg ref={svgSindro} width={'100%'} height={(_xl?'240':_lg ?'190': '180')} />\n     );\n};\n\n\n\nconst plot = (svgSindro, datum, namePlot, point, setPoint, len, setLen, rect, setRect,_xl,_lg, color) => {\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const fontSize = _xl ? '22px' : _lg ? '16px': '12px' ;\n     const fontTitle = _xl ? '22px' : _lg ? '16px': '12px' ;\n\n     const leftSize = d3.extent( datum , d => d[1].length )  ;\n\n     const margin = {\n          top:    _xl ? 22 : _lg ? 22 : 20,\n          right:  _xl ? 30 : _lg ? 25 : 20,\n          bottom: _xl ? 30 : _lg ? 22 : 35,\n          left: (fontSize.split('px')[0]*leftSize[1]*0.55)\n     } ;\n\n     let pr0 = datum.length*(point)/100, pr1 = pr0;\n\n     if( (pr0 - len/2) < 0 ){\n          pr0 = 0 ;\n          pr1 = len ;\n     }else if( (pr0 + len/2) >  datum.length){\n          pr1 = datum.length -1;\n          pr0 = pr1 - len ;\n     }else{\n          pr0 = pr0 - len/2 ;\n          pr1 = pr1 + len/2 ;\n     };\n\n     const part = [ parseInt(pr0), parseInt(pr1) ]  ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`);\n\n\n     const backColor = 'white' ;\n     // fondo de grafica\n     svg.append('g')\n          .append('rect')\n          .attr('x', margin.left)\n          .attr('y', margin.top)\n          .attr('width', width - margin.right - margin.left)\n          .attr('height', height - margin.top - margin.bottom)\n          .attr('stroke', 'rgba(0, 0, 0, 0)')\n          .attr('fill', backColor )\n\n     const xScale = d3.scaleTime()\n                    .domain( [\n                         new Date( datum[ part[0] ][0] ),\n                         new Date( datum[ part[1] ][0] )\n                    ]) // eje en segundos getHoMiSe(xData[0], delay[0])\n                    .range([margin.left, width-margin.right] )\n                    // .nice() ;\n\n     const x_axis = d3.axisBottom()\n                    .scale(xScale)\n                    .ticks(_xl|_lg ? 8 : 5)\n\n\n     // Insercion del eje x\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(0, ${height-margin.bottom})`)\n          .call(x_axis)\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontSize )\n          .attr(\"color\", 'black' )\n          .attr('opacity','0.9')\n          .selectAll(\"text\")\n          // .attr(\"transform\",\"rotate(45,-10,15)\" ) ;\n\n     // Eje vertical\n     const limits = d3.extent( datum.slice( part[0], part[1]) , d => parseFloat(d[1]) ).reverse() ;\n\n     const yScale = d3.scaleLinear()\n          .domain( [limits[0], limits[1] ] )\n          .range([margin.top , height - margin.bottom ]);\n\n     const yAxis = d3.axisLeft()\n                    .scale(yScale)\n                    .tickSize(-width + margin.right + margin.left )\n                    .ticks(_xl|_lg ? 3 : 4)\n\n     // Insercion del eje y\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(${margin.left} ,0)`)\n          .call(yAxis)\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontSize )\n          .attr(\"color\", 'black' )\n          .attr('opacity','0.9')\n          .call(g => g.select(\".domain\") // Quita la primera linea continua y la linea vertical continua\n               .remove()\n          )\n          .call(g => g.selectAll(\"line\") // .tick:not(:first-of-type)\n               .attr(\"stroke-opacity\", \"0.5\")\n               .attr(\"stroke-dasharray\", \"2,2\")\n          )\n\n\n\n\n     // https://stackoverflow.com/questions/39023154/how-to-make-a-color-gradient-bar-using-d3js\n     var lg = svg.append('linearGradient')\n      .attr('id', `Gradient_${color}`)\n      .attr('x1', 0)\n      .attr('x2', 0)\n      .attr('y1', 0)\n      .attr('y2', 1);\n\n     lg.append('stop')\n      .attr('offset', '0%')\n      .attr('stop-color', `${color}45` ) ;\n\n     lg.append('stop')\n      .attr('offset', '100%')\n      .attr('stop-color', backColor );\n\n     // Datos:\n     // Linea\n     svg.append(\"path\")\n          .datum( datum.slice( part[0], part[1] ) )\n          .attr(\"fill\", `url(#Gradient_${color})` )//\"#cce5df\" )\n          .attr(\"stroke\", color ) //\"rgba(209, 19, 19, 1)\") //color_fill)\n          .attr(\"stroke-width\", 1)\n          .attr(\"d\", d3.area()//d3.line()\n               .x( d => xScale( d[0] ) )\n               .y0( d =>  {\n                    if( yScale( 0 ) <= height -margin.bottom ){\n                        return yScale( 0 )\n                    }\n                    return  height -margin.bottom\n               })\n               .y1( d => yScale(parseFloat(d[1])) )\n               .curve( d3.curveMonotoneX )\n          );\n\n     // Titulo de la grafica\n     svg.append(\"g\")\n          .append(\"text\")\n          .attr(\"x\", width/2 - namePlot.length*fontTitle.split('px')[0]*0.23  )\n          .attr(\"y\", (_xl? 16:15))\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontTitle )\n          .attr(\"font-weight\", \"500\" )\n          .attr(\"line-height\", \"16px\" )\n          .text( namePlot ) ;\n\n     // tiempos de marca\n     [\n          [ margin.left, getHoMiSe( new Date( datum[part[0]][0] ) ) ], // hora del registro inicio\n          [ width - 7*fontSize.split('px')[0] , getHoMiSe(new Date( datum[part[1]][0] ) ) ] // hora del registro inicio\n     ].forEach( item => {\n          svg.append(\"g\")\n               .append(\"text\")\n               .attr(\"x\", item[0] )\n               .attr(\"y\", (_xl?20:_lg?16:15) )\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", fontSize )\n               .attr(\"font-weight\", \"500\" )\n               .attr(\"line-height\", \"16px\" )\n               .text( item[1] )\n     });\n\n     //  rectangulo del zoom\n     svg.append('g')\n          .append('rect')\n          .attr('x', rect.x )\n          .attr('y', margin.top )\n          .attr('width', rect.width )\n          .attr('height', height - margin.top - margin.bottom)\n          .attr('fill', 'rgba(0, 0, 150, 0.4)')\n\n\n     // eventos del mouse\n     svg.append('g')\n          .append('rect')\n          .attr('id', `rect${namePlot}`)\n          .attr('x', margin.left)\n          .attr('y', margin.top)\n          .attr('width', width - margin.right - margin.left)\n          .attr('height', height - margin.top - margin.bottom)\n          .attr('stroke', 'rgba(0, 0, 0, 0)')\n          .attr('fill', 'rgba(0, 0, 25, 0.01)')\n          .attr('style','cursor:pointer')\n          .on('wheel', ( event ) => wheel(event) );\n\n     // entrar la posicion de indexado del dato más cercano al valor dado.\n     // const bisect = d3.bisector( (d) => return d[0] ).left ;\n\n     const wheel = ( event ) => {\n          if ( event.shiftKey ) {\n\n               // let offSet = window.document.getElementById(event.srcElement.id).nearestViewportElement.parentElement.offsetLeft\n               // let layerX = event.clientX - offSet\n               // let nPos = bisect( datum.slice( part[0], part[1] ) , xScale.invert( layerX ).getTime() ) ;\n               // let nPos = datum.slice( part[0], part[1] ).findIndex( d => d[0] > xScale.invert( layerX ).getTime() ) ;\n\n               let deltaLen = len + Math.sign(event.wheelDeltaY)*(part[1]-part[0])/5 ;\n\n               if( (deltaLen > 12) & (deltaLen < 1000) ){\n\n                    setLen(deltaLen);\n\n                    // if( nPos != 0){\n                    //      setPoint({value:(nPos+part[0]) / datum.length*100}  )\n                    // }\n               };\n          };\n     };\n\n     const mouseOut = () => {\n          // console.log(\" mouse out\") ;\n          // console.log(\"Dimensiones\", rect.x, rect.x+rect.width );\n\n          if( rect.width > 0){\n\n               let p1 = datum.findIndex( item => item[0] >= xScale.invert(rect.x).getTime() ) ;\n               let p2 = datum.findIndex( item => item[0] >= xScale.invert(rect.x+rect.width).getTime() ) ;\n\n\n               if( p1 !== 0 & p2 !== 0 & p2-p1 > 12 ){\n                    setPoint( {value:(p2+p1)/2/datum.length*100 })\n                    setLen(p2-p1);\n               }\n\n               setRect({ x:0, width:0 });\n\n          }\n     };\n\n     let dx = 0, flag = true, movX = 0 ;\n     const dragHandler = d3.drag().on( 'drag', (event) => {\n          let p0 = 0;\n\n          if( part[1]-part[0] > 30 ){\n\n               if( flag ){\n                    rect.x = event.x ;\n                    movX = event.x ;\n                    flag = false ;\n               }\n\n               if( Math.abs(event.dx) < 200 ){\n                    dx = dx + event.dx\n                    movX = movX + event.dx\n               }else{\n                    dx = dx +  event.dx/500\n               };\n\n               if( dx < 0 & (rect.x > 0)){\n                    rect.x = movX ;\n                    p0 = p0 + dx*(-1) ;\n               }else{\n                    p0 = p0 + dx ;\n               };\n\n               if( (p0 > 0) & ( rect.x+p0 < width - margin.right )  ){\n                    rect.width = p0 ;\n                    setRect({...rect});\n               };\n          }\n     }).on('end',()=>mouseOut());\n\n     dragHandler( svg.select(`#rect${namePlot}`) );\n\n};\n","import React, {useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { MediaQuery } from '../../MediaQuery';\n\nconst margin = { right:57, top:10,  bottom: 10, left: 40 } ;\n\n\n// funcion que gobierna el svg:\nconst plot = (interval, svgSindro, set, point) => {\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height}`)\n\n     // Parametros del objeto\n     const xScale = d3.scaleLinear()\n                    .domain( interval )\n                    .range( [margin.left, width-margin.right] );\n\n     // line\n     svg.append('line')\n          .attr('id','line')\n          .attr('x1', xScale(interval[0]) )\n          .attr('x2', xScale(interval[1])+15 )\n          .attr('y1', height/2 )\n          .attr('y2', height/2 )\n          .attr('stroke', '#525252')\n          .attr('stroke-width','0.4rem')\n          .attr('stroke-linecap','round')\n          .attr('opacity','0.3');\n\n     // objeto del BarSlider\n     const bar = svg.append('g')\n          .attr('id','moveMouse')\n          .attr('fill','none')\n          .attr('style','cursor:pointer')\n          .attr('transform',`translate( ${ xScale(point) }, 11 ) scale(0.1)` )\n          // .attr('opacity','0.5')\n          .on('mouseover',()=>{\n               svg.select(`#rect1`)\n                    .attr('opacity','100')\n               svg.select(`#line`)\n                    .attr('opacity','100')\n          })\n          .on('mouseout',()=>{\n               svg.select(`#rect1`)\n                    .attr('opacity','0.3')\n               svg.select(`#line`)\n                    .attr('opacity','0.3')\n          })\n\n     bar.append('rect')\n          .attr('width', '529')\n          .attr('height', '369' )\n          .attr('rx', '172')\n          .attr('fill','#ffff')\n          .attr('opacity','1');\n\n     bar.append('rect')\n          .attr('width', '529')\n          .attr('height', '369' )\n          .attr('rx', '172')\n          .attr('fill','#0d47a1')\n          .attr('id','rect1')\n          .attr('opacity','0.3');\n\n     // arrows\n     ['M326 67L443.5 184.5L326 302',\n      'M203.5 302L86 184.5L203.5 67'\n     ].forEach( item => {\n          bar.append('path')\n               .attr('d', item )\n               .attr('stroke', 'white')\n               .attr('stroke-width', '37')\n               .attr('stroke-linecap', 'round');\n     });\n\n     let  movX = 0, flag = true ;\n     const dragHandler = d3.drag().on( 'drag', (event) => {\n\n          if( flag ){\n               movX = event.x ;\n               flag = false ;\n          }\n\n          if( Math.abs(event.dx) < 200 ){\n               movX = movX + ( event.sourceEvent.shiftKey ? event.dx/30 : event.dx );\n          };\n\n          if( (xScale.invert(movX) > 3) & ( xScale.invert(movX) < 98 )  ){\n               set({value: xScale.invert(movX)-5 })\n         };\n     });\n\n     dragHandler( svg.select(`#moveMouse`) );\n};\n\nexport const BarraPlot = ( {set,point} ) => {\n\n     const svgSindro = React.useRef(null);\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     useEffect( ()=> {\n          plot([0,100], svgSindro, set, point);\n     },[svgSindro, set, point, _xl, _lg]);\n\n     const styleSvg = {\n          position: 'absolute',\n          bottom: '3rem',\n          left: 'calc(30%)'\n     };\n\n     return(\n          <svg ref={svgSindro} width={_xl? '1100px':_lg ? '820px':'600px'} height={'60px'}  style={styleSvg}/>\n     );\n\n};\n","\nimport React,{useState} from 'react' ;\nimport { styled } from '@mui/system';\nimport { MediaQuery } from '../../MediaQuery' ;\n\nexport const Info = () =>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [displayCuadro, setDisplay] = useState({\n          state:'none'\n     });\n\n     const Cuadro = styled('div')({\n          boxShadow: 'rgb(80,80,255,40%) 4px 4px',\n          display:displayCuadro.state,\n          border:'1px solid rgb(100,100,100,30%)',\n          borderRadius:'3px',\n          fontFamily:'Montserrat',\n          paddingLeft:  '0.8rem',\n          paddingTop:'0.3rem',\n          color:'rgb(70,70,70)',\n          position: 'absolute',\n          bottom: '2rem',\n          left: _lg ? 'calc(74.4%)' : 'calc(74%)',\n          width: _xl ? '595px' : _lg? '433px':'292px',\n          background:'rgb(255,255,255,87%)'\n     })\n\n     const StyleInfo = styled('div')({\n          fontSize: _xl ? '25px' : _lg ? '20px': '14px',\n          fontFamily:'Montserrat',\n          border:'2px solid rgb(00,80,255,80%)',\n          background: 'rgb(00,80,255,30%)',\n          borderRadius:'3px',\n          cursor:'pointer',\n          color:'rgb(70,70,70)',\n          textAlign:'center',\n          paddingBlock:'0.2rem',\n          '&:hover':{\n               border:'2px solid #0d50a1',\n               background: 'rgb(00,80,255,10%)'\n          }\n     });\n\n\n     const handleClick = (value) => {\n          if( displayCuadro.state === 'none'){\n               setDisplay({state:'block'})\n          }else{\n               setDisplay({state:'none'})\n          };\n     };\n     return(\n          <>\n               <StyleInfo onClick={ ()=> handleClick() }>\n                    <strong> Información </strong>\n               </StyleInfo>\n\n               <Cuadro onClick={ ()=> handleClick() }>\n                    {\n                         [\n                              ['Shift + Mouse Wheel:','En las gráficas de flujo gobierna el intervalo de tiempo a visualizar.'],\n                              ['Shift + Mouse Click','Permite la exploración lenta de las gráficas de flujo.'],\n                              ['Mouse Click','Permite dibujar rectangulos para definir el zoom sobre los gráficos de flujo.'],\n                              ['Drag & Drop',\"Las gráficas de los KPI's se pueden arrastrar para organizar una visulización conveniente.\"]\n                         ].map( (item,idx)=>\n                              <div\n                                   key={idx}\n                                   style={{fontSize: _xl ? '22px' : _lg ? '16px': '12px',}}\n                              >\n                                   <strong>\n                                        {item[0]}\n                                   </strong>\n                                   <p\n                                        style={{marginBlock:'0.3rem'}}\n                                   >\n                                        {item[1]}\n                                   </p>\n                              </div>\n                         )\n                    }\n               </Cuadro>\n          </>\n     )\n};\n","\nimport React, {useState} from 'react' ;\nimport { styled } from '@mui/system';\nimport { MediaQuery } from '../../MediaQuery' ;\nimport { SubTitle } from '../elements/SubTitle' ;\nimport { prom } from '../dashboard/helpers/prom'\n\nexport const Catalogo = ( {data, select , setSelect, labels} ) =>{\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [displayCuadro, setDisplay] = useState({\n          state:'none'\n     });\n\n     const Cuadro = styled('div')({\n          boxShadow: 'rgba(0, 0, 0, 0.4) 5px 5px 5px 3px',//boxShadow: 'rgb(80,80,255,40%) 4px 4px',\n          display:displayCuadro.state,\n          border:'1px solid rgb(100,100,100,60%)',\n          borderRadius:'3px',\n          fontFamily:'Montserrat',\n          paddingLeft:  '0.8rem',\n          paddingTop:'0.3rem',\n          color:'rgb(70,70,70)',\n          position: 'absolute',\n          top: _xl ? '15%' :_lg ? '35%' : '12%',\n          left: _xl ? '27.5%' :_lg ? '28.5%' : '29%',\n          width: _xl ? '1350px' : _lg ? '1035px':'800px',\n          background:'rgb(255,255,255,95%)',\n          '&:hover':{\n               zIndex:'1000',\n          }\n     })\n\n     const StyleCat = styled('div')({\n          fontSize: _xl ? '25px' : _lg ? '20px': '14px',\n          fontFamily:'Montserrat',\n          border:'2px solid rgb(00,80,255,80%)',\n          background: 'rgb(00,80,255,30%)',\n          borderRadius:'3px',\n          cursor:'pointer',\n          color:'rgb(70,70,70)',\n          textAlign:'center',\n          paddingBlock:'0.2rem',\n          '&:hover':{\n               border:'2px solid #0d50a1',\n               background: 'rgb(00,80,255,10%)'\n          }\n     });\n\n     const Item = styled('div')({\n          width:'25%',\n          display:'flex',\n          alignItems: 'center',\n          marginBlock:'0.1rem',\n     });\n\n     const Input = styled('input')({\n          cursor:'pointer',\n          transform:`scale(${_xl ? 1.8 : _lg ? 1.8 : 1})`,\n          height:_xl ? '1.5rem' : _lg ? '1.5rem':'1rem',\n     });\n\n     const Label = (props) => {\n\n          const ObjRender = styled('label')({\n               padding:'0.12rem',\n               fontSize: _xl ? '25px' : _lg ? '20px': '14px',\n               marginLeft:'0.5rem',\n               cursor:'pointer',\n               border: `2px solid ${props.color ? 'rgb(199, 143, 137)' : '#fff'}`,\n               background: props.color ? '#fef2e1' : '#fff',\n               borderRadius:'0.2rem',\n               '&:hover':{\n                    border:'2px solid #0d50a1',\n                    background: 'rgb(00,80,255,10%)'\n               }\n          });\n\n          return(\n               <ObjRender htmlFor={props.htmlFor}> {props.children} </ObjRender>\n          )\n     };\n\n     const Svg = styled('svg')({\n          borderRadius:'3px',\n          marginRight:'0.2rem',\n          cursor:'pointer',\n          '&:hover':{\n               background: 'rgb(00,80,255,30%)'\n          }\n     });\n\n     const defColor = (label) => {\n\n          if( data.length === 0 ) return(0);\n\n          let obj = data.find( obj => obj.name === label[0] ) ;\n          const low = parseFloat(label[4].split('-')[0]) ;\n          const hight = parseFloat(label[4].split('-')[1])\n\n          const mean = prom( obj.data[3].map(n => n[0]) );\n\n          return (\n               obj.data[3].findIndex( num => ( num[0] === 0 ? mean : num[0] ) <= low ) >= 0\n               ||\n               obj.data[3].findIndex( num => ( num[0] === 0 ? mean : num[0] ) >= hight ) >= 0\n          );\n     };\n\n     const handleClick = (value) => {\n          if( displayCuadro.state === 'none'){\n               setDisplay({state:'block'})\n          }else{\n               setDisplay({state:'none'})\n          };\n     };\n\n     const handleSelect = (e) => {\n\n          localStorage.removeItem(`intervalos`);\n\n          if( select.findIndex( item => item === e.target.value ) >= 0 ){\n               setSelect([\n                    ...select.filter( item => item !== e.target.value )\n               ])\n          }else{\n               setSelect( [\n                    ...select, labels.find( item => item[0] === e.target.value )[0]\n               ]);\n          }\n\n     };\n\n     return(\n          <>\n               <StyleCat onClick={ ()=> handleClick() }>\n                    <strong> Catálogo </strong>\n               </StyleCat>\n\n               <Cuadro>\n                    <SubTitle>\n                         Catálogo de variables\n                         <span\n                              onClick={ ()=> handleClick()}\n                              align='rigth'\n                              style={{paddingLeft:_xl ? 'calc(75.5%)' : _lg ? 'calc(75%)' : 'calc(76%)'}}\n                         >\n                              <Svg\n                                   width={_xl ? '45' : '30'} height={_xl ? '45' : '30'}\n                                   viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                   <path\n                                        d='M26.3 0.8H9.3C7.7 0.8 6.4 2.1 6.4 3.6V20.6C6.4 22.2 7.7 23.4 9.3 23.4H26.3C27.9 23.4 29.1 22.2 29.1 20.6V3.6C29.1 2.1 27.9 0.8 26.3 0.8ZM26.3 20.6H9.3V3.6H26.3V20.6ZM3.6 6.4V26.3H23.4V29.1H3.6C2.1 29.1 0.8 27.9 0.8 26.3V6.4H3.6ZM11.8 16.1L15.8 12.1L11.8 8.1L13.8 6.1L17.8 10.1L21.8 6.1L23.8 8.1L19.8 12.1L23.8 16.1L21.8 18.1L17.8 14.1L13.8 18.1L11.8 16.1Z'\n                                        fill=\"black\"\n                                        fillOpacity=\"0.65\"\n                                   />\n                              </Svg>\n                         </span>\n                    </SubTitle>\n\n                    <div\n                         style={{display:'flex', flexDirection:'row', flexWrap: 'wrap', marginBlock:'1rem'}}\n                    >\n                         {\n                              labels.map( (label,idx) =>\n                                   <Item\n                                        key={idx}\n                                   >\n                                        <Input\n                                             id={`${idx}label[0]`}\n                                             type='radio'\n                                             value={label[0]}\n                                             checked={ select.findIndex( item => item === label[0] ) >= 0 ? true :  false}\n                                             onChange={ (e) => handleSelect(e) }\n                                             onClick={ (e) => handleSelect(e) }\n                                        />\n                                        <Label\n                                             htmlFor={`${idx}label[0]`}\n                                             color={ defColor(label)}\n                                        >\n                                             {label[1]}\n                                        </Label>\n                                   </Item>\n                              )\n                         }\n                    </div>\n               </Cuadro>\n          </>\n     )\n};\n","\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from \"d3\";\n\nimport { MediaQuery } from '../../MediaQuery';\nimport { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { difHoraria } from './difHoraria';\n\nconst Plot = ( _xl, _lg, svgSindro, setHour, dayNow ) => {\n\n     const fontSize =  _lg ? '14px': '12px' ;\n     const color_fill = 'rgba(0, 91, 165, 1)';\n\n\n     const diferencia = difHoraria();\n     const dateFromTimeLine = new Date(`${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}${new Date().toLocaleString().split(',')[1].split(':')[0]}:00:00`)\n     const date =  (hour) => new Date( new Date(dateFromTimeLine).toLocaleString().split(',')[0].split('/').reverse().join('-') + hour ) ;\n\n     const margin = {\n               right:_lg ? 24 : 23,\n               top:5,\n               bottom: 15,\n               left: _lg ? 18 : 15,\n               m:5\n          } ;\n\n     const svgEl = d3.select(svgSindro.current);\n     svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n     const width = svgEl._groups[0][0].clientWidth  ;\n     const height = svgEl._groups[0][0].clientHeight  ;\n\n     const svg = svgEl.append(\"g\")\n                    .attr(\"width\", `${width }`)\n                    .attr(\"height\",`${height-margin.top}`) ;\n\n     const  xScale = d3.scaleTime()\n                         .domain(\n                              [\n                                   date( ' 00:00:00' ) ,\n                                   date( ' 23:59:00' )\n                              ]\n                         )\n                         .range([margin.left + margin.m , width-margin.right ])\n                         .nice() ;\n\n\n     // Insercion del eje x Dia\n     // [\n     //      d3.axisBottom(xScaleDia).ticks(6), // Insercion del eje xDia\n     //      d3.axisBottom(xScaleNoche).ticks(3)  // Insercion del eje xNoche\n     // ].map( scale =>\n     //      svg.append(\"g\")\n     //           .attr(\"transform\", `translate(0, ${margin.bottom})`)\n     //           .call( scale )\n     //           .attr(\"font-size\", fontSize)\n     //           .attr(\"color\", color_fill )\n     //           .attr('opacity','0.95')\n     //           .attr(\"stroke-width\", 2.7)\n     //           .selectAll(\"text\")\n     //           .attr(\"transform\", \"translate(0,3)\")\n     //           .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`)\n     //           .attr('id', (d,i) =>`id_${new Date(d).toLocaleString()\n     //                               .split(' ')[1]\n     //                               .split(':')[0]}-${i}`\n     //           )\n     // );\n     //\n     // d3.select('#id_12-6').remove(); // Borrar la ultima marca del xScaleDia\n\n     svg.append(\"g\")\n         .attr(\"transform\", `translate(0, ${margin.bottom})`)\n         .call( d3.axisBottom(xScale) )\n         .attr(\"font-size\", fontSize)\n         .attr(\"color\", color_fill )\n         .attr('opacity','0.95')\n         .attr(\"stroke-width\", 2.7)\n         .selectAll(\"text\")\n         .attr(\"transform\", \"translate(0,3)\")\n         .attr('style', `font-size:${fontSize}; font-family: Montserrat !important`)\n         .attr('id', (d,i) =>`id_${new Date(d).toLocaleString()\n                             .split(' ')[1]\n                             .split(':')[0]}-${i}`\n         );\n\n     const dataHours = [...Array(24)]\n                         .map( (_,i)=>  parseInt(i)<10 ? `0${i}` : `${i}` )\n                         .map( h => new Date( new Date(dateFromTimeLine).toLocaleString().split(',')[0].split('/').reverse().join('-')+` ${h}:00:00` ) );\n\n     const flagDate = (d) => d <= new Date() ;\n\n\n     // circulos\n     svg.append('g')\n          .selectAll(\"circle\")\n          .data( dataHours )\n          .enter()\n          .append(\"circle\")\n          .attr('id', (d,i) => `circ${i}` )\n          .attr(\"fill\", d => flagDate(d) ? color_fill : 'white' )\n          .attr(\"stroke\", d => flagDate(d) ? \"none\": color_fill )\n          .attr(\"stroke-width\", 1.7 )\n          .attr(\"cx\", d => xScale(d) )\n          .attr(\"cy\", d => height/2 - (_lg?9:7) )\n          .attr(\"r\", _lg ? 9 : 6)\n          .attr(\"cursor\", d => flagDate(d) ? 'pointer' : 'default' )\n          .on( \"mouseout\", e => d3.select(`#${e.originalTarget.id}` )\n                                   .attr('stroke', color_fill )\n                                   .attr(\"stroke-width\", 1.7 )\n                                   .attr('r', _lg ? 9 : 6 )\n                              )\n          .on( \"mouseover\", (e,d) => d3.select(`#${e.originalTarget.id}` )\n                                   .attr('stroke', ()=> flagDate(d) ? \"#09B3A5\" : color_fill )\n                                   .attr(\"stroke-width\", ()=> flagDate(d) ? 4 : 1.7 )\n                                   .attr('r', ()=> flagDate(d) ? _lg ? 10 : 6 : _lg ? 9 : 6 )\n                              )\n          .on(\"mousedown\", (e,d) => {\n               const time = new Date( d.getTime() + 1000*60*60*diferencia ) ;\n               if( flagDate(d) ){\n                    setHour( `T${ unitToTwoUnit( time.getHours() ) }:00:00Z` )\n               }\n          })\n\n\n} ;\n\nexport const TimeLine = ({setHour, dayNow}) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const svgSindro = useRef(null);\n\n     useEffect( ()=> {\n          Plot( _xl, _lg, svgSindro, setHour, dayNow );\n     },[ _xl, _lg, svgSindro, setHour, dayNow ]);\n\n     const styleSvg = {\n          border: '2px solid hsl(242, 0%, 35%)',\n          borderRadius: '0.2rem',\n          paddingBlock: '0.3rem'\n     }\n\n     return(\n          <svg\n               ref={svgSindro}\n               width={'100%'}\n               height={ _lg ? '55px' : '50px' }\n               style={styleSvg}\n          />\n     );\n};\n","\nimport { to24hours } from '../dashboard/helpers/to24hours' ;\n\nimport { getLastHour }  from '../helpers/getLastHour';\n\nexport const difHoraria = () => {\n\n     const hourServer = getLastHour('lastHour') ;\n     const hourLocale = new Date().toLocaleString();\n\n     return parseInt( hourServer.split('T')[1].split(':')[0] - to24hours( hourLocale.split(', ')[1] +'' ).split(':')[0]+'' )\n     // hourLocale.split(',')[1].split(':')[0] )\n};\n","\nimport React, {useState} from 'react' ;\nimport { Grid } from '@mui/material';\nimport { SubTitle } from '../elements/SubTitle' ;\n\nimport { styled } from '@mui/system';\nimport { MediaQuery } from '../../MediaQuery' ;\n\nimport { Tabla }  from '../helpers/Tabla';\n\nimport '../../stylesOverrides.css'\n\n\nexport const Block = ({data}) => {\n\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [displayCuadro, setDisplay] = useState({\n          state:'hidden'\n     });\n\n     const handleClick = () => {\n          if( displayCuadro.state === 'hidden'){\n               setDisplay({state:'visible'})\n          }else{\n               setDisplay({state:'hidden'})\n          };\n     };\n\n\n     const StyleTitle = styled('div')({\n          fontSize: _xl ? '25px' : _lg ? '20px': '14px',\n          fontFamily:'Montserrat',\n          border:'2px solid rgb(00,80,255,80%)',\n          background: 'rgb(00,80,255,30%)',\n          borderRadius:'3px',\n          cursor:'pointer',\n          color:'rgb(70,70,70)',\n          textAlign:'center',\n          paddingInline: '0.5rem',\n          marginRigth : '0.5rem',\n          width:'100%',\n          paddingBlock:'0.2rem',\n          '&:hover':{\n               border:'2px solid #0d50a1',\n               background: 'rgb(00,80,255,10%)'\n          }\n     });\n\n     const Cuadro = styled('div')({\n          boxShadow: 'rgba(0, 0, 0, 0.4) 5px 5px 5px 3px',//boxShadow: 'rgb(80,80,255,40%) 4px 4px',\n          visibility:displayCuadro.state,\n          border:'1px solid rgb(100,100,100,60%)',\n          borderRadius:'3px',\n          fontFamily:'Montserrat',\n          paddingLeft:  '0.8rem',\n          paddingTop:'0.3rem',\n          color:'rgb(70,70,70)',\n          position: 'absolute',\n          // top: _xl ? '15%' :_lg ? '35%' : '12%',\n          // left: _xl ? '27.5%' :_lg ? s'28.5%' : '29%',\n          width: _xl ? '1000px' : _lg ? '400px':'300px',\n          background:'rgb(255,255,255,95%)',\n          '&:hover':{\n               zIndex:'1000',\n          }\n     });\n\n     const Svg = styled('svg')({\n          borderRadius:'3px',\n          marginRight:'0.2rem',\n          cursor:'pointer',\n          '&:hover':{\n               background: 'rgb(00,80,255,30%)'\n          }\n     });\n\n     return(\n          <Grid\n               item  container\n               align='center'\n               xs={4}\n          >\n               <StyleTitle onClick={ ()=> handleClick() }>\n                    <strong> {data.title1} </strong>\n               </StyleTitle>\n\n\n               <Cuadro>\n                    <div\n                         style={{ display: 'flex', justifyContent: 'space-between',}}\n                    >\n                         <SubTitle>\n                              {data.title2}\n                         </SubTitle>\n                         <div>\n                              <span\n                                   onClick={ ()=> handleClick()}\n                              >\n                                   <Svg\n                                        width={_xl ? '45' : '30'} height={_xl ? '45' : '30'}\n                                        viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                                   >\n                                        <path\n                                             d='M26.3 0.8H9.3C7.7 0.8 6.4 2.1 6.4 3.6V20.6C6.4 22.2 7.7 23.4 9.3 23.4H26.3C27.9 23.4 29.1 22.2 29.1 20.6V3.6C29.1 2.1 27.9 0.8 26.3 0.8ZM26.3 20.6H9.3V3.6H26.3V20.6ZM3.6 6.4V26.3H23.4V29.1H3.6C2.1 29.1 0.8 27.9 0.8 26.3V6.4H3.6ZM11.8 16.1L15.8 12.1L11.8 8.1L13.8 6.1L17.8 10.1L21.8 6.1L23.8 8.1L19.8 12.1L23.8 16.1L21.8 18.1L17.8 14.1L13.8 18.1L11.8 16.1Z'\n                                             fill=\"black\"\n                                             fillOpacity=\"0.65\"\n                                        />\n                                   </Svg>\n                              </span>\n                         </div>\n                    </div>\n\n                    <Tabla data={data.body} />\n\n               </Cuadro>\n          </Grid>\n     );\n};\n\n\n// style={{paddingLeft:_xl ? 'calc(75.5%)' : _lg ? 'calc(62%)' : 'calc(76%)'}}\n","import React, { useState, useEffect } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { Stl } from '../../Stl';\nimport { MediaQuery } from '../../MediaQuery' ;\nimport { getLastHour } from '../helpers/getLastHour';\nimport { unitToTwoUnit } from '../helpers/unitToTwoUnit';\n\nimport { Square } from './Square' ;\nimport { PlotFlowRespiratorio } from './PlotFlowRespiratorio' ;\n\nimport { BarraPlot } from './BarraPlot';\nimport { getData } from '../respiratorio/getData' ;\nimport { getLabels } from '../respiratorio/getLabels' ;\nimport { Title }  from '../elements/Title';\nimport { Info } from './Info' ;\nimport { Catalogo } from './Catalogo' ;\nimport { TimeLine } from './TimeLine' ;\n\nimport { Block } from './Block';\n\nconst Squares = ({args}) => {\n\n     const styleSquare = {\n          marginBottom: '0.1rem',\n     };\n\n     const { data,  dayNow, id } = args ;\n\n     const [ labels, setLabels ] = useState([]);\n\n     const [ select, setSelect ] = useState([\n          \"FIO2\",\n          \"respir_rate\",\n          'mean_press',\n          \"PEEP\",\n          'peakP',\n          'tidal_volume_set_334',\n          'power',\n          'inspTV'\n     ]);\n\n     useEffect( ()=>{\n          getLabels(dayNow, id, setLabels) ;\n     },[dayNow, id])\n\n     return(\n          <>\n               {\n                    select.map( (label, idx) =>{\n\n                         const obj = data.find( obj => obj.name === label) ;\n\n                         return(\n                              <Grid\n                                   item\n                                   xs={6} xl={6}\n                                   align='center'\n                                   key={idx}\n                              >\n                                   <div\n                                        style={styleSquare}\n                                   >\n                                        {\n                                             obj !== undefined &&\n                                                  <Square\n                                                       day={dayNow}\n                                                       idPat={id}\n                                                       id={idx}\n                                                       color_index={idx}\n                                                       title={labels.find( item => item[0] === label)}\n                                                       tendencia={obj?.data[0] }\n                                                       prom={obj?.data[1] }\n                                                       value={obj?.data[2] }\n                                                       array={obj.data[3].map( array => [ !parseFloat(array[0]) ? parseFloat(obj?.data[1]) : parseFloat(array[0]) ,array[1]] )}\n                                                  />\n                                        }\n                                   </div>\n                              </Grid>\n                         )\n                    })\n               }\n               <Grid item xs={12} >\n                    <Catalogo\n                         data={ data }\n                         select={select}\n                         setSelect={setSelect}\n                         labels={ labels.filter( label =>\n                              [\n                                   'diagnosis', 'age','height',\n                                   'weight', 'gender','PBW',\n                                   'BMI','assessment','comment_out','mode'\n                              ].map( item => item !== label[0] ).findIndex( flag => flag === false ) < 0  )\n                         }\n                    />\n               </Grid>\n          </>\n     )\n}\n\nconst Plots = ({data}) => {\n\n     const stylePlots = {\n          marginBottom: '0.3rem',\n          border: '2px solid hsl(242, 0%, 35%)',\n          borderRadius: '0.2rem',\n          paddingTop: '0.2rem',\n     };\n\n     // Parametro de las graficas\n     const [point, setPoint] =useState({value:80}) ;\n     const [len, setLen] = useState(200) ;\n\n     return(\n\n          <Grid\n               container item\n               direction=\"row\"\n               xs={8} xl={8}\n               spacing={1}\n               columns={12}\n          >\n\n               <Grid\n                    item  container align='center' xs={12}\n                    spacing={1}\n               >\n\n                    {\n                         data.length > 0 &&\n\n                         [    [\"flow_exp_amplitudes\", \"FlowExp\", '#006350'],\n                              [\"flow_signal\", \"FlowSignal\",  '#09AD84'],\n                              [\"press_signal\", \"PressSignal\", '#009196'],\n                              [\"press_amplitudes\", \"PressAmp\", '#097CAD'],\n                              [\"flow_insp_amplitudes\", \"FlowAmp\" , '#04224A']\n                         ].map( (label, idx) =>{\n\n                              const obj = data.find( obj => obj.name === label[0] );\n\n                              if( obj !== undefined ){\n                                   return(\n                                        <Grid\n                                             item  align='center'\n                                             key={idx}\n                                             xs={6}\n                                        >\n                                             <div style={stylePlots} >\n                                                  <PlotFlowRespiratorio\n                                                       data={ obj }\n                                                       name={ label[1] }\n                                                       point={ point.value }\n                                                       setPoint={setPoint}\n                                                       len={len}\n                                                       setLen={setLen}\n                                                       color={ label[2] }\n                                                  />\n                                             </div>\n                                        </Grid>\n                                   )\n                              }\n                              return(\n                                   <span></span>\n                              )\n                         })\n                    }\n               </Grid>\n\n               <Grid\n                    item  align='center' xs={12}\n               >\n                    {\n                         data.length > 0 &&\n                         <BarraPlot set={setPoint} point={point.value}/>\n                    }\n               </Grid>\n          </Grid>\n\n     )\n}\n\nconst dta_demo = (data) => {\n\n     const dta = {\n          title1:'Inf. Demográfica',\n          title2:'Información Demográfica',\n          body:[]\n     };\n     [\n          ['PBW', 'PWM',''],\n          ['BMI', 'BMI',''],\n          ['age', 'Edad','Años'],\n          ['weight', 'Peso','Kg'],\n          ['height', 'Altura','cm'],\n     ].forEach( label => {\n          const value = data.find( item => item.name === label[0] )\n               if(value){\n                    dta.body.push(\n                         {\n                              name:`${label[1]}:`,\n                              data:`${value.data[2]} ${label[2]}`\n                         }\n                    )\n               };\n     });\n     return dta ;\n};\n\nconst dta_eval = (data) => {\n\n     const dta = {\n          title1:'Evaluaciones',\n          title2:'Evaluaciones',\n          body:[]\n     };\n     [\n          ['assessment', 'Evaluación',''],\n     ].forEach( label => {\n          const value = data.find( item => item.name === label[0] )\n          if(value){\n               value.data[3].find( array => array[0].length >= 1 )[0]\n                    .filter( item => item.length > 0)\n                    .forEach( item => {\n                         dta.body.push(\n                              {\n                                   name:`${label[1]}:`,\n                                   data: item.split('.')[1]\n                              }\n                         )\n                    });\n          };\n     });\n     return dta ;\n}\n\nconst dta_mode = (data) => {\n\n     const dta = {\n          title1:'Modos',\n          title2:'Modos',\n          body:[]\n     };\n     [\n          ['mode', 'Modo',''],\n     ].forEach( label => {\n          const value = data.find( item => item.name === label[0] )\n          if( value ){ \n               if( value.data[3][0][0] !== 'NA' ){\n                    value.data[3]\n                         .find( array => array[0].length >= 1 )[0]\n                         .split(' ')[1]\n                         .split('/').forEach( mode => {\n                              dta.body.push(\n                                   {\n                                        name:`${label[1]}:`,\n                                        data: mode\n                                   }\n                              )\n                         })\n               }else{\n                    dta.body.push(\n                         {\n                              name:`${label[1]}:`,\n                              data: 'NA'\n                         }\n                    )\n               }\n          };\n     });\n     return dta ;\n}\n\n\n\n\nexport const Respiratorio = ({dt}) => {\n\n     const classes = Stl();\n     const { _xl, _lg } = MediaQuery() ;\n\n     const [ id , dayNow  ] = dt ; // fecha establecida por el TimeLine: [ dia, mes, año ]\n     const [ hour, setHour ] = useState( getLastHour( 'lastHour' ) ) ;\n     const [ data, setData ] = useState([]) ;\n     const [ msn, setMsn ] = useState('Recuperando información') ;\n\n     useEffect( () => {\n          setMsn('Recuperando información') ;\n          getData(dayNow, hour, id, setData, setMsn) ;\n     },[dayNow, id, setData, setMsn, hour]) ;\n\n     const hourRegistro = () => {\n          const date = new Date(`${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}${hour}`);\n          return(  new Date(date.getTime() + 1000*60*60).toLocaleString() );\n     }\n\n     const sinDatos = () => {\n          return(\n               <Title>\n                    {msn}\n               </Title>\n          )\n     };\n\n\n     return(\n          <Box\n               className={[classes.px, classes.bg_white, classes.my_1, classes.py].join(' ')}\n               // onDragEnd={ e => handleDragEnd(e) }\n               // onD, day, id, labelsrag={ e =>{ console.log(\"OnDrag:\",e.movementX, e.movementY)}}\n               // onDragStart={e => handleDragtStart(e) }\n               style={{height: _xl?'950px': _lg?'805px':'708px',overflowY: 'scroll', scrollBehavior: 'smooth'}}\n\n          >\n               <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={1}\n               >\n                    {\n                         [\n                              dta_demo,\n                              dta_eval,\n                              dta_mode\n                         ].map( (f,i) => <Block key={i} data={ f(data) }/>)\n                    }\n\n                    <Grid\n                         item  container\n                         align='center'\n                         xs={12}\n                    >\n                         <TimeLine setHour={setHour} dayNow={dayNow} />\n                    </Grid>\n\n                    <Grid\n                         item  container\n                         align='center'\n                         xs={6}\n                    >\n                         <div\n                              style={{paddingBlock: '0.2rem', fontSize:'1.2rem', fontWeight: 'bold'}}\n                         >\n                              {`Hora del registro: ${hourRegistro().split(', ')[1]}`}\n                         </div>\n                    </Grid>\n\n                    <Plots data={data}/>\n\n                    <Grid\n                         container item\n                         direction=\"row\"\n                         xs={4} xl={4}\n                         spacing={1}\n                    >\n\n                         <Squares args={{data,  dayNow, id }}/>\n\n                         <Grid item xs={12} >\n                              <Info/>\n                         </Grid>\n\n                    </Grid>\n                    {\n                         !(data.length > 0) &&\n                         sinDatos()\n                    }\n               </Grid>\n          </Box>\n     );\n\n}\n","import { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { getLastHour } from '../helpers/getLastHour';\nimport { resourceServer } from '../../env'\n\nexport const getLabels = (dayNow, id, setLabels) => {\n\n     const dte = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}`;// 2022-08-10\n     const hour = getLastHour('lastHour');\n     const { urlServer, requestOptionsGet } = resourceServer;\n\n     fetch(`${urlServer}Observation?identifier=${dte}${hour}&identifier=metricas&subject=${id}`, requestOptionsGet)\n          .then(resp => {\n               resp.text().then(obj => {\n\n                    const data = JSON.parse(obj)\n\n                    if (data.total > 0) {\n\n                         const labels = data.entry[0].resource.component.filter(comp => comp.code.coding)\n                              .map(cod => [\n                                   cod.code.coding[0].display.split(':')[1], // Parametro\n                                   cod.code.coding[1].display.split(':')[1], // Name\n                                   cod.code.coding[2].display.split(':')[1], // unid\n                                   cod.code.coding[3].display.split(':')[1], // varInterval\n                                   cod.code.coding[4].display.split(':')[1]  // norInterval\n                              ]);\n\n                         setLabels(labels);\n                    }\n\n               })\n          })\n\n};\n","\n\n\nexport const extractData = ( array, args, labels) => {\n     \n     const data = {} ;\n\n     labels.forEach( label => data[label]=[] ) ;\n  \n     if( Array.isArray(array) ){\n          array.forEach( (obj, idxObj ) => {\n               if( obj?.resource?.total > 0 ){\n                    \n                    obj.resource.entry[0].resource.code.coding\n                         .forEach( (coding,idxLabel) => data[`${Object.keys(data)[idxObj]}`].push({\n                              label: args[args.length === labels.length ? idxObj : idxLabel],\n                              value: coding.display\n                         }));\n               };\n          });\n     };\n\n     return( data ) ;\n};","\nconst timeEvent = ( string ) => {\n     const [t, i] = string.split('-') ;\n     return [ t.replace(/[ .]/g,''), i] ;\n};\n\nexport const orderJornada = ( data, objs ) => {\n\n     data.sinAsignar = [];\n     const labels =  Object.keys( objs )  ;\n\n     labels.forEach( (label,idx) => { \n\n          if( objs[label][0] ){//objs[label].length > 0 ){ \n\n               if( objs[label][0].value !== '--' ){\n                    const [time, interval] = timeEvent( objs[label][0].value )\n\n                    if( (time.search('a')>-1 && time.split(':')[0] >= 6) || (time.search('p')>-1 && time.split(':')[0] < 6) ){ // dia\n                         data.dia.push({\n                              label : label,\n                              time: time,\n                              interval: interval\n                         })\n                    }else{\n                         data.noche.push({\n                              label : label,\n                              time: time,\n                              interval: interval\n                         })\n                    }\n               }else{\n                    data.sinAsignar.push({\n                         label : label\n                    })\n               };\n          };\n     });\n};","import { Bundle_request } from \"../../../../uciTablet/recursosFHIR/helpers/Bundle_request\";\nimport { unitToTwoUnit } from \"../../helpers/unitToTwoUnit\";\nimport { extractData } from \"./extractData\";\nimport { orderJornada } from \"./orderJornada\";\n\n\nexport const  getDataEnfermeria = async( id, dayNow, setData ) => {\n\n     const resources = [\n          { resource:'Basic', identifier:`ProgramacionEnferIzq`, args:[['ProgramacionEnfer','izq'], 'BD','BI','PD','PI','Tórax','NA','NOMBRE: Enfermero Turno Diurno'], daily:true },\n          { resource:'Basic', identifier:`ProgramacionEnferDer`, args:[['ProgramacionEnfer','der'], 'BD','BI','PD','PI','Tórax','NA','NOMBRE: Enfermero Turno Nocturno'], daily:true }\n     ];\n\n\n     const date = `${dayNow[2]}-${unitToTwoUnit(dayNow[1])}-${unitToTwoUnit(dayNow[0])}` ;\n     const array_bundle_disp = await Bundle_request( id, resources, date );\n\n     const tablasProgramacion = {\n          resources:[\n               { resource: 'Basic', identifier:'ProgramacionEnfer',args:['ProgramacionEnfer'] }\n          ],\n          fields: [\n               'Aseo y Confort','Aseo Matinal','Baño en Cama','Lavado de Pelo','Aseo Genital','Aseo Cavidades','Aseo Ocular',\n               'Prevención UPP','Colchón ant-esc.','Movilización','Riesgo Medio(4h)','Riesgo alto(2h)','Medidas Aisl.','Baño Clorex',\n               'Aseo Bucal','Procedimientos','Curación CVC','Cms0','Sitio de inserción','Puntos de fijación','UPP','Ubicación','Grado',\n               'Instalación Dispositivos','VVP/LA/SF','Cms1','Cms2','Cms3' //,'Izq','Der'\n          ]\n     };\n\n     const array_bundle_event = await Bundle_request( id, tablasProgramacion, date );\n\n\n     // construir objetos de datos :\n\n     const data = {\n          ...extractData([ array_bundle_disp[0] ], resources[0].args.slice(1,), ['dia'] ),\n          ...extractData([ array_bundle_disp[1] ], resources[1].args.slice(1,), ['noche'] )   \n     };\n\n     // Object.assign( dataDisp, extractData([ array_bundle_disp[1] ], resources[1].args.slice(1,), ['noche'] ))\n\n     const dataEvent = {\n          ...extractData( array_bundle_event, tablasProgramacion.fields, tablasProgramacion.fields )\n     };\n\n     orderJornada( data, dataEvent );\n     console.log( data );\n     setData ( data );\n\n};","\nimport React, {useEffect, useRef} from \"react\";\nimport * as d3 from \"d3\";\n\nimport { MediaQuery } from '../../MediaQuery';\nimport { to24hours } from \"../dashboard/helpers/to24hours\";\n\nexport const PlotGantt = ({data, jornada}) => {\n\n     const { _xl, _lg } = MediaQuery();\n\n     const svgAxis = useRef(null);\n     const svgPlot = useRef(null);\n\n     useEffect( () => {\n          plot( data, jornada, svgAxis, svgPlot, _xl, _lg)\n     },[data, jornada, svgAxis, svgPlot, _xl, _lg]) ;\n\n     return(\n          <div>\n               <svg ref={svgAxis} width={'100%'} height={_xl?'45':_lg?'45':'45'}/>      \n              \n               <svg ref={svgPlot} width={'100%'}  />      \n          </div>\n     );\n};\n\nconst plot = (data, jornada, svgAxis, svgPlot, _xl, _lg) => {\n     \n     const dataJornada = Object.keys( data ).length > 0 \n                              ? data[ jornada === 'Día' ? 'dia' : 'noche' ].filter( obj => obj.time )\n                              : 0 ;\n     \n     const fontSizeAxis = _xl ? '16px' : _lg ? '15px': '13px';\n     const fontSize = _xl ? '15px' : _lg ? '14px': '12px';\n     const fontSizeLegend = _xl ? '18px' : _lg ? '18px': '15px';\n\n     \n     const margin = {\n          top:30,\n          right:_xl?35:_lg?25:40,\n          bottom:_xl?24:_lg?21:30,\n          left:_lg?30:25,\n     } ;\n     \n     const marginPlot = {\n          top: _xl ? 20: _lg? 20 :12,\n          right: _xl? 40:_lg ? 35 :35,\n          bottom:_xl?13:_lg?14:18,\n          left:_xl?40:_lg?35:30,\n     } ;\n\n     \n     const date =  (hour) => new Date( new Date().toLocaleString().split(',')[0].split('/').reverse().join('-') + ' ' + hour ) ;\n     const dateTomorrow = (hour) => new Date( new Date( new Date().getTime() + 1000*60*60*24 ).toLocaleString().split(',')[0].split('/').reverse().join('-')  + ' ' + hour ) ;\n\n\n     const svg = d3.select(svgAxis.current);\n     const svgP = d3.select(svgPlot.current);\n\n\n     svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n     svgP.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n     \n     svgP.attr('height', document.getElementById('labels').offsetHeight + 30  ) ;\n\n     const width = svgP._groups[0][0].clientWidth  ;\n     const height = svgP._groups[0][0].clientHeight  ;\n\n     const interval = [\n               jornada === 'Día' ?  date('06:00:00') : date('18:00:00'),\n               jornada === 'Día' ?  date('18:00:00') : dateTomorrow('06:00:00'),\n          ] ;\n\n     const xScale = d3.scaleTime()\n                         .domain(\n                              [\n                                   interval[0] ,\n                                   interval[1] \n                              ]\n                         )\n                         .range([ marginPlot.left, width - marginPlot.right ])\n                         .nice() ;\n\n     const intervalY = data?.dia || data?.noche\n                         ? data[ jornada === 'Día' ? 'dia' : 'noche' ].filter( obj => obj.time ).length \n                         : 1 ;\n     \n     const yScale = d3.scaleLinear()\n                         .domain( [ 0, intervalY ] )\n                         .range([marginPlot.top, height - marginPlot.bottom ]) ;\n\n     // Insercion del eje x Dia\n     svg.append(\"g\")\n          .attr(\"transform\", `translate(0, ${margin.top})`)\n          .call( d3.axisTop(xScale).ticks(10).tickSize(0) )\n          .call( g => g.select(\".domain\").remove() )\n          .attr(\"color\", 'black' )\n          .attr('opacity','0.8')\n          .attr(\"font-weight\",'400')\n          .selectAll(\"text\")\n          .attr('style', `font-size:${fontSizeAxis}; font-family: Montserrat !important`) ;\n     \n\n     \n     // Lineas punteadas\n     svgP.append('g')\n          .selectAll('line')\n          .data( dataJornada )\n          .enter()\n          .append('line')\n          .attr( 'x1', 0 )//d => xScale( date( to24hours( interval[0] ) ) ) ) //xScale( date( to24hours( obj.time ) ) ) )\n          .attr( 'y1', (_,i) =>  yScale(i) )\n          .attr( 'x2', width - (_xl?15:_lg?10:20)) //d => xScale( date( to24hours( interval[1] ) ) ) )\n          .attr( 'y2', (_,i) =>  yScale(i) )\n          .attr( 'stroke-width', _lg? 2.3 :2 )\n          .attr( 'stroke', 'rgba(139, 137, 137, 0.87)' )\n          .attr( 'stroke-linecap', \"round\")\n          .attr( 'stroke-dasharray', \"4 5\")\n          .attr( \"opacity\", 0.75 ) ;\n\n     // Cuadros\n     svgP.append('g')\n          .selectAll('rect')\n          .data( dataJornada )\n          .enter()\n          .append(\"rect\")\n          .attr(\"height\", _xl? 25:_lg? 20:18 )\n          .attr(\"width\", _xl ? 75 :_lg? 70  : 60 )\n          .attr('x', d => xScale( date( to24hours( d.time ) ) ) - (_xl ? 73/2: _lg? 70/2: 60/2) )\n          .attr('y', (_,i) => yScale(i) - (_xl?25/2: _lg ? 20/2 :18/2) )\n          .attr('rx', 6 )\n          .attr('ry', 6 )\n          .attr(\"fill\", 'rgba(9, 155, 189, 1)' )\n          // .attr('stroke', 'cadetblue')\n          .attr('stroke-width', 2) ;\n\n     // texto\n     svgP.append('g')\n          .selectAll('text')\n          .data( dataJornada )\n          .enter()\n          .append('text')\n          .text( d => `${d.interval.replace(/[ m]/g,'')} min`)\n          .attr('x', d => xScale( date( to24hours( d.time ) ) ) - parseInt(fontSize.replace(/px/g,''))*1.7 )\n          .attr('y', (_,i) => yScale(i) + 4 )\n          .attr(\"text-anchor\", \"start\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontSize)\n          .attr(\"font-weight\",'bold')\n          .attr(\"fill\", 'white' )\n          .on(\"mouseover\", (_,d) => {\n               svgP.select('#textLegend').text( `${d.label} - ${d.time} - ${d.interval}` )\n          })\n          .on(\"mouseout\", () => {\n               svgP.select('#textLegend').text( '' )\n          })\n     \n     // texto marca\n     svgP.append('text')\n          .attr('id','textLegend')\n          // .text( 'Mario')\n          .attr('x', width/2  )\n          .attr('y', height - marginPlot.bottom  )\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"font-family\", \"Montserrat\")\n          .attr(\"font-size\", fontSizeLegend)\n          .attr(\"font-weight\",'bold')\n          .attr(\"fill\", 'rgba(0, 91, 165, 1)' ); \n\n}","import React, {useState, useEffect} from 'react';\nimport { Stl } from '../../Stl';\nimport { Box } from '@mui/material';\nimport { Grid } from '@material-ui/core';\nimport { MediaQuery } from '../../MediaQuery';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\n// import { SubTitle } from '../elements/SubTitle' ;\nimport { Title } from '../elements/Title' ;\nimport { getDataEnfermeria  } from './helpers/getDataEnfermeria';\n\nimport { PlotGantt } from './PlotGantt' ;\n\nexport const Enfermeria = ({dt}) => {\n\n     const classes = Stl() ;\n     const {_xl, _lg} = MediaQuery() ;\n     const [ id, dayNow ] = dt ; // dayNow: [ 23, 3, 2023 ]\n\n     // const fieldsIzq = [\n     //      'Aseo y Confort','Aseo Matinal','Baño en Cama','Lavado de Pelo','Aseo Genital','Aseo Cavidades','Aseo Ocular',\n     //      'Prevención UPP','Colchón ant-esc.','Movilización','Riesgo Medio(4h)','Riesgo alto(2h)','Medidas Aisl.','Baño Clorex',\n     //      'Aseo Bucal'\n     // ];\n\n     // const fieldsDer = [\n     //      'Procedimientos','Curación CVC','Cms0','Sitio de inserción','Puntos de fijación','UPP','Ubicación','Grado',\n     //      'Instalación Dispositivos','VVP/LA/SF','Cms1','Cms2','Cms3'\n     // ];\n\n     const [data, setData] = useState({});\n     const [jornada, setJornada] =  useState({state:'Día'});\n\n     useEffect(()=>{\n          const dt = async() => {\n               await getDataEnfermeria( id, dayNow, setData ) ;\n          }\n          dt() ;\n     },[id, dayNow]);\n\n     console.log( data, jornada.state);\n\n     const BtnJornada = ({set}) => {\n\n          return(\n               <Stack \n                    style={{margin:'0.5rem', position:'relative'}}\n                    spacing={1} \n                    direction=\"row\"\n               >\n                    {\n                         ['Día', 'Noche'].map( (jrd, idx) => \n                              <Button \n                                   key={idx}\n                                   variant={ jrd === jornada.state ? 'outlined' : 'contained'  }\n                                   onClick={ event => { set({ state:event.target.firstChild.data }) } }\n                                   style={{fontSize: _lg ? '0.9rem': '0.7rem'}}\n                              > \n                                   {jrd} \n                              </Button>  \n                         )\n                    }\n               </Stack>\n          )\n     };\n\n     const styleLabels = {\n          fontFamily:'Montserrat',\n          fontWeight:'bold',\n          color:'rgba(0, 91, 165, 1)',\n          paddingBlock:'0.2rem',\n          marginLeft:'0.5rem',\n          fontSize: _lg ? '1.3rem': '0.8rem',\n          lineHeight: _lg? '1.4rem':'0.85rem'\n     };\n\n     const styleSinAsignar ={\n          fontFamily:'Montserrat',\n          background:'rgba(0, 91, 165, 1)',\n          color:'white',\n          margin:'0.4rem',\n          padding:'0.3rem',\n          width:'fit-content',\n          borderRadius:'0.3rem',\n          fontSize: _lg ? '1.1rem': '0.7rem'\n     };\n\n     const styleSi = {\n          ...styleLabels, \n          border:'1px solid rgba(0, 91, 165, 1)', \n          borderRadius:'0.3rem', \n          padding:'0.3rem',\n          margin: '0.4rem'\n     };\n\n     const styleNo = {\n          ...styleSinAsignar, \n          border:'1px solid rgba(0, 91, 165, 1)', \n          borderRadius:'0.3rem', \n          padding:'0.3rem'\n     };\n\n     const styleName = {\n          fontFamily:'Montserrat',\n          marginLeft:'0.5rem',\n          fontWeight:'500',\n          fontSize:  _lg ? '1.3rem': '0.8rem'\n     };\n\n     return(\n          <Box \n               mt={2} pb={1}\n               style={{background:'white',height: _xl?'930px': _lg?'805px':'685px'}}\n          >\n               <div \n                    className={[classes.text_white, classes.bg_blue, classes.my_0].join(' ')}\n               >\n                    <Title >\n                         Panel de Eventos\n                    </Title>\n               </div>\n\n                  \n               <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"space-evenly\"\n                    alignItems=\"flex-start\"\n               >\n\n                    <Grid item xs={3}>\n                         <BtnJornada set={setJornada} />\n                         <div id={'labels'}>\n                              {    \n                                   data[jornada.state === 'Día' ? 'dia' : 'noche'] //(data.dia || data.noche )\n                                   ?\n                                        data[jornada.state === 'Día' ? 'dia' : 'noche'].filter( obj => obj.time )\n                                             .filter( obj => obj.label.search('NOMBRE') < 0)\n                                             .map( (obj,idx) => \n                                                  <div key={idx} style={styleLabels} >\n                                                       {obj.label}\n                                                  </div>\n                                             )\n                                   :    <span></span>\n                              }\n                         </div>\n                    </Grid>\n                    <Grid item xs={9}>\n                         <PlotGantt data={data} jornada={jornada.state}/>\n                    </Grid>\n                    {\n                         // <hr width={800} />\n                    }\n               </Grid>\n\n               <Box \n                    mt={3} \n               >\n                    <Grid\n                         container\n                         direction=\"row\"\n                         justifyContent=\"space-evenly\"\n                         alignItems=\"flex-start\"\n                         spacing={2}\n                    >\n                         <Grid item xs={6}>\n                              <Title color='blue' >\n                                   Sin asignar\n                              </Title>\n                              <div style={{display:'flex', flexGrow: '4',flexWrap: 'wrap'}}>\n                                   {    \n                                        data.sinAsignar\n                                        ?\n                                             data.sinAsignar.map( (obj,idx) => \n                                                  <div key={idx} style={styleSinAsignar}>\n                                                       {obj.label}\n                                                  </div>\n                                             )\n                                        :    <span></span>\n                                   }\n                              </div>\n                         </Grid>\n                         \n                         <Grid item xs={6}>\n                              <Title color='blue' >\n                                   Contención física { jornada.state === 'Día' ? 'diurna' : 'nocturna'}\n                              </Title>\n                              {\n                                   data[jornada.state === 'Día' ? 'dia' : 'noche'] //(data.dia || data.noche )\n                                   ?\n                                        <div style={{display:'flex', flexGrow: '4',flexWrap: 'wrap'}}>\n                                             {\n                                                  data[jornada.state === 'Día' ? 'dia' : 'noche']\n                                                       .filter( obj => !obj.time & obj.label.search('NOMBRE') )\n                                                       .map( (obj,idx) => \n                                                            <div key={idx} style={ obj.value === 'Si' ? styleSi : styleNo }>\n                                                                 {obj.label} : {obj.value}\n                                                            </div>\n                                                       )\n                                             }\n                                        </div>\n                                        \n                                   :    <span></span>\n                              }\n\n                              <div style={{marginTop:'2rem'}}>\n                                   <Title color='blue' >\n                                        Enfermero/a turno { jornada.state === 'Día' ? 'día' : 'noche'}\n                                   </Title>\n                                   <div style={{marginTop:'0.5rem'}}>\n                                        {    \n                                             data[jornada.state === 'Día' ? 'dia' : 'noche']\n                                             ?\n                                                  data[jornada.state === 'Día' ? 'dia' : 'noche']\n                                                       .filter(obj => obj.label.search('NOMBRE') > -1 )\n                                                       .map( obj =>\n                                                            <div style={styleName}>\n                                                                 {obj.value}\n                                                            </div>\n                                                       )\n                                             :    <span></span>\n                                        }\n                                   </div>\n                              </div>\n                         </Grid>\n                    </Grid>\n\n               </Box>\n\n\n          </Box>\n     );\n\n};\n","import React,{useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\n\nexport const PlotDailyCum =({data})=>{\n\n\n\n     const input = data.input.map( (obj,idx) => {\n          return(\n               {\n                    name: obj.text.split(':')[1],\n                    value: parseFloat( obj.data[2].display )\n               }\n          )\n     });\n     input.pop();\n\n     const output = data.output.map( (obj,idx) =>{\n          return(\n               {\n                    name: obj.text.split(':')[1],\n                    value: parseFloat( obj.data[2].display )\n               }\n          )\n     });\n     output.pop();\n\n     // suma vectorial\n     // const sumVec = (v1,v2) =>{\n     //      let vs = [];\n     //      for( let idx = 0; idx < d3.max([v1.length,v2.length]) ; idx++){\n     //           vs.push( (v1[idx]?v1[idx]:0) + (v2[idx]?v2[idx]:0) );\n     //      }\n     //      return vs\n     // };\n\n     const color_fill = 'rgba(0, 91, 165, 1)';\n     const color_bg = '#DCF0F4' ;\n     const columnPos = '#005BA5' ;\n     const columnNeg = '#003159' ;\n     const {_xl, _lg} = MediaQuery() ;\n\n     const svgRef = React.useRef(null);\n     const margin = {top:15, bottom: 15, left: _xl?55:40, right:_xl?65:60, w:_xl?60:32 ,offSetY:100} ;\n\n     useEffect( () => {\n\n          const svgEl = d3.select(svgRef.current);\n          svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n          const width = svgEl._groups[0][0].clientWidth  ;\n          const height = svgEl._groups[0][0].clientHeight  ;\n\n\n          const svg = svgEl.append(\"g\")\n                         .attr(\"width\", `${width}`)\n                         .attr(\"height\",`${height}`)\n\n          // fondo\n          svg.append('rect')\n               .attr('x',0)\n               .attr('y',0)\n               .attr('width','100%')\n               .attr('height','100%')\n               .style(\"fill\", color_bg )\n\n          // Construccion del eje x:\n          //limites del ejes\n          let nRects = d3.max([input.length,  output.length]);\n\n          const xScale = d3.scaleLinear()\n                              .domain([1 , nRects])\n                              .range([margin.left+5+margin.w, width-margin.right]) ;\n\n          const yScaleAxis = d3.scaleLinear()\n                                   .domain( [ d3.max( input.map(d => d.value) ), -d3.max( output.map(d => d.value) ) ] )\n                                   .range( [ margin.top, height-margin.bottom ] );\n\n          // eje y\n          svg.append(\"g\")\n               .attr(\"transform\", `translate( ${margin.left} ,0)`)\n               .call(\n                    d3.axisLeft(yScaleAxis)\n                    .tickSizeOuter(0)\n                    .ticks(7)\n                    .tickSizeInner( -width + margin.right )\n               )\n               .call( g => g.selectAll(\".tick line\")\n                    .attr(\"stroke-opacity\", 0.4)\n                    .attr(\"stroke-dasharray\", \"2,3\"))\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", _xl?'13px':'10px')\n               .attr(\"color\", color_fill )\n               .attr(\"opacity\",'0.75')\n\n          // eje x\n          svg.append(\"g\")\n               .attr(\"transform\", `translate( 0 , ${yScaleAxis(0)})`)\n               .call(d3.axisBottom(xScale))\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", '0px')\n               .attr(\"color\", color_fill )\n\n          //Columnas Positivas\n          svg.append('g')\n               .selectAll('rect')\n               .data( input )\n               .enter()\n               .append('rect')\n               .attr('x' ,(d,i) => xScale(i+1) )\n               .attr('y', d => yScaleAxis(d.value) )\n               .attr('height', (d) => yScaleAxis(0)-yScaleAxis(d.value) )\n               .attr('width', margin.w )\n               .attr('fill', columnPos )\n               .attr(\"opacity\", 0.80)\n\n          // nombres y sombra de columna\n          svg.append('g')\n               .selectAll('rect')\n               .data( input )\n               .enter()\n               .append('rect')\n               .attr('x' ,(d,i) => xScale(i+1) )\n               .attr('y', margin.top )\n               .attr('height', yScaleAxis(0) - margin.top )\n               .attr('width', margin.w )\n               .attr('fill', columnPos )\n               .attr(\"opacity\", 0.2);\n          svg.selectAll(null)\n               .data( input )\n               .enter()\n               .append(\"text\")\n               .text( d => !_lg ? d.name.slice(0,7).replace(/[^a-zA-Zóéá]/g,'') + '.' : d.name )\n               .attr(\"x\", (d,i) => xScale(i+1) - (!_lg ? 7 : d.name.length)*1.2 )\n               .attr(\"y\", d => yScaleAxis(d.value) - 3 )\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", '12px' )\n               .attr(\"fill\", columnPos );\n\n          // Columnas Negativas\n          svg.append('g')\n               .selectAll('rect')\n               .data( output )\n               .enter()\n               .append('rect')\n               .attr('x' ,(d,i)=> xScale(i+1)-margin.w )\n               .attr('y', yScaleAxis(0) )\n               .attr('height',(d) => yScaleAxis(0)-yScaleAxis(d.value) )\n               .attr('width', margin.w )\n               .attr('fill', columnNeg )\n               .attr(\"opacity\", 0.80);\n\n          // nombres y sombra de columna\n          svg.append('g')\n               .selectAll('rect')\n               .data( output )\n               .enter()\n               .append('rect')\n               .attr('x' ,(d,i) => xScale(i+1)-margin.w )\n               .attr('y', yScaleAxis(0) )\n               .attr('height', height/2 - 28 )\n               .attr('width', margin.w )\n               .attr('fill', columnNeg )\n               .attr(\"opacity\", 0.2)\n          svg.selectAll(null)\n               .data( output )\n               .enter()\n               .append(\"text\")\n               .text( d => !_lg ? d.name.slice(0,7).replace(/[^a-zA-Zóé]/g,'') + '.' : d.name  )\n               .attr(\"x\", (d,i) => xScale(i+1)-margin.w - (!_lg ? 7: d.name.length)*0.6 )\n               .attr(\"y\", d => yScaleAxis(-d.value) + 8 )\n               .attr(\"font-family\", \"Montserrat\")\n               .attr(\"font-size\", '12px' )\n               .attr(\"fill\", columnPos );\n     });\n\n     return(\n          <svg ref={svgRef} width={'100%'} height={_xl?'235':_lg ?'200' :'208'} />\n     );\n}\n","import React, {useEffect, useState} from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { MediaQuery } from '../../MediaQuery';\nimport { Stl } from '../../Stl';\nimport { PlotDailyCum } from './PlotDailyCum';\nimport { getData } from './getData' ;\nimport { Title } from '../elements/Title' ;\nimport './stylesOverrides.css' ;\n\nexport const BalanceTab = ({dt}) => {\n\n\n     const classes = Stl() ;\n     const {_xl, _lg} = MediaQuery() ;\n\n     const [ , dayNow  ] = dt ;\n\n     const [dta, setDta] = useState({\n          input:[{data:[0,0,0], text:'-:-'}],\n          output:[{data:[0,0,0], text:'-:-'}],\n          hidratacionBase:[]\n     });\n\n     useEffect( () => {\n          let idPatient =  JSON.parse( localStorage.getItem('idPatient') ) ;\n          console.log('useEffect del balance hidrico',dayNow);\n          getData( idPatient.id, setDta, dayNow );\n     },[dayNow]);\n\n     // console.log( dta )  ;\n\n     const title = (title)=>{\n          return(\n               <div className={[classes.text_white, classes.bg_blue, classes.my_0].join(' ')}>\n                    <Title>\n                         {title}\n                    </Title>\n               </div>\n          );\n     };\n\n     const styleText = {\n          fontSize:_xl?'14px' :_lg?'13px' :'10px', \n          width: '98%', \n          textAlign: 'center', \n          padding:_lg?'0.25rem':'0.15rem', \n          margin:_lg?'5px': '3px'\n     };\n     \n     const subtitle = (title) =>{\n          return(\n               <div\n                    className={[classes.font_monserrat, classes.text_white, classes.bg_blue, classes.text_bold, classes.mx_left ].join(' ')}\n                    style={styleText}\n               >\n                    {title}\n               </div>\n          )\n     };\n\n     const element = (text) =>{\n          return(\n               <div\n                    className={[classes.font_monserrat, classes.bg_gray2, classes.mx_left].join(' ')}\n                    style={styleText}\n               >\n                    { text }\n               </div>\n          );\n     };\n\n     return(\n          <>\n               {\n                    [\n                         ['Ingresos', dta.input],\n                         ['Egresos', dta.output]\n                    ].map( (item, idx) =>\n                         <Box\n                              key={idx}   pb={1}\n                              className={classes.bg_white}\n                              >    \n\n                              {title(item[0])}\n                              <Grid\n                                   container\n                                   direction=\"row\"\n                                   justifyContent=\"flex-start\"\n                                   alignItems=\"flex-start\"\n                                   columns={12}\n                                   pt={1}\n                                   pr={1}\n                              >\n                                   <Grid\n                                        item xs={1}\n                                        justifyContent=\"space-around\"\n                                        alignItems=\"center\"\n                                   >\n                                        {\n\n                                             ['Parámetro','7-19','19-7','Total'].map( ( label, idx )=>\n                                                  <Grid key={idx} item >\n                                                       {subtitle(label)}\n                                                  </Grid>\n                                             )\n                                        }\n                                   </Grid>\n                                   {\n                                        item[1].map( (obj,idx) => {\n                                             return(\n                                                  <Grid\n                                                       key={idx} item \n                                                       justifyContent=\"space-around\"\n                                                       alignItems=\"center\"\n                                                  >\n                                                       {\n                                                            [obj.text.split(':')[1], ...obj.data].map( (label,idx) => {\n\n                                                                 if( idx >= 4 ){ return '' }\n\n                                                                 return(\n                                                                      idx === 0\n                                                                      ?    <Grid\n                                                                                item  key={idx}\n                                                                           >\n                                                                                { subtitle(label) }\n                                                                           </Grid>\n                                                                      :    <Grid\n                                                                                item key={idx}\n                                                                           >\n                                                                                { element(label.display) }\n                                                                           </Grid>\n                                                                 )\n                                                            })\n                                                       }\n                                                  </Grid>\n                                             )\n                                        })\n                                   }\n                              </Grid>\n                         </Box>\n                    )\n               }\n\n               <Box mt={1} className={classes.bg_white}>\n                    {title('Daily Cum')}\n                    <Grid\n                         container\n                         spacing={1}\n                    >\n                         <Grid item xs={1}>\n                              <Box\n                                   className={[classes.font_monserrat, classes.center, classes.text_bold].join(' ')}\n                                   mt={1}\n                              >\n                                   Balance\n                              </Box>\n                         </Grid>\n                         <Grid item xs={11}>\n                              <Box px={1} mt={1}>\n                                   <PlotDailyCum data={dta} />\n                              </Box>\n                         </Grid>\n                    </Grid>\n\n               </Box>\n\n               <Box mt={1} >\n                    <Grid\n                         container\n                         spacing={1}\n                    >\n\n                         <Grid\n                              item\n                              xs={12}\n                         >\n                              <Box className={classes.bg_white}>\n                                   {title('Hidratación horaria')}\n\n                                   <Grid  container >\n                                        <Grid item lg={2} xl={3} className={classes.my}>\n                                             {\n                                                  [\n                                                       'Evaluación',\n                                                       'Hidratación Base',\n                                                       'Perdidas Ins.',\n                                                       'Ayuno Patológico',\n                                                       'Estres Quirurgico'\n                                                  ].map( (item, idx) =>\n                                                       <Box mb={1} mr={1} key={idx}>{subtitle(item)}</Box>\n                                                  )\n                                             }\n                                        </Grid>\n\n                                        {\n                                             [...new Array(8)].map( (value,idx1)=>{\n                                                  return (\n                                                       <Grid key={idx1} item xs={2} lg={1} className={[classes.my, classes.mx_left].join(' ')}>\n                                                            <Box mb={1}>\n                                                                 {subtitle(`${(idx1*3+7)%24} - ${((idx1+1)*3+7)%24}`)}\n                                                            </Box>\n                                                            \n                                                            <Box mb={1}> \n                                                                 {element( dta.hidratacionBase[idx1]+'ml' )} \n                                                            </Box>\n                                                            \n                                                       </Grid>\n                                                  )\n                                             })\n                                        }\n                                   </Grid>\n                              </Box>\n                         </Grid>\n                         {\n                         // <Grid\n                         //      item\n                         //      xl={3} lg={6}\n                         // >\n                         //      <Box className={classes.bg_white}>\n                         //           {title('Ingresos')}\n                         //           <Grid  container spacing={1}>\n                         //                <Grid item lg={3} xl={3} className={classes.my}>\n                         //                     <Box mb={1}>{subtitle('Intervalos')} </Box>\n                         //                     <Box mb={1}>{subtitle('V.P')} </Box>\n                         //                     <Box mb={1}>{subtitle('V.O')}</Box>\n                         //                     <Box mb={1}>{subtitle('TTO')}</Box>\n                         //                     <Box mb={1}>{subtitle('NTG')}</Box>\n                         //                </Grid>\n                         //\n                         //                {\n                         //                     ['7am -1pm','1pm -7pm','7pm -7am'].map( (elm,idx1)=>{\n                         //                          return(\n                         //                               <Grid key={idx1} item xs={2} className={classes.my}>\n                         //                                    <Box mb={1}>{element( elm )}</Box>\n                         //                                    {\n                         //                                         [...new Array(4)].map( (_,idx2)=>{\n                         //                                              totalIngresos[idx2] = totalIngresos[idx2] + (data.ingresos[idx2][idx1]?data.ingresos[idx2][idx1]:0)\n                         //                                              return(\n                         //                                                   <Box key={idx2} mb={1}>{element( data.ingresos[idx2][idx1] )}</Box>\n                         //                                              )\n                         //                                         })\n                         //                                    }\n                         //                               </Grid>\n                         //                          )\n                         //                     } )\n                         //                }\n                         //\n                         //                <Grid item xs={2} className={classes.my}>\n                         //                     <Box mb={1}>{element('Total')}</Box>\n                         //                     {\n                         //                          [...new Array(4)].map( (_,idx)=>{\n                         //                               return(\n                         //                                    <Box key={idx}  mb={1}>{element( totalIngresos[idx] )}</Box>\n                         //                               )\n                         //                          })\n                         //                     }\n                         //                </Grid>\n                         //           </Grid>\n                         //      </Box>\n                         // </Grid>\n                         // <Grid\n                         //      item\n                         //      xl={3} lg={6}\n                         // >\n                         //      <Box className={classes.bg_white}>\n                         //           {title('Egresos')}\n                         //           <Grid  container spacing={1}>\n                         //                <Grid item lg={3} xl={3} className={classes.my}>\n                         //                     <Box mb={1}>{subtitle('Intervalos')} </Box>\n                         //                     <Box mb={1}>{subtitle('Diuresis')} </Box>\n                         //                     <Box mb={1}>{subtitle('Deposic')}</Box>\n                         //                     <Box mb={1}>{subtitle('Vómitos')}</Box>\n                         //                     <Box mb={1}>{subtitle('Sangrado')}</Box>\n                         //                </Grid>\n                         //                {\n                         //                     ['7am -1pm','1pm -7pm','7pm -7am'].map( (elm,idx1)=>{\n                         //                          return(\n                         //                               <Grid key={idx1} item xs={2} className={classes.my}>\n                         //                                    <Box mb={1}>{element( elm )}</Box>\n                         //                                    {\n                         //                                         [...new Array(4)].map( (_,idx2)=>{\n                         //                                              totalEgresos[idx2] = totalEgresos[idx2] + (data.egresos[idx2][idx1]?data.egresos[idx2][idx1]:0)\n                         //                                              return(\n                         //                                                   <Box key={idx2} mb={1}>{element( data.egresos[idx2][idx1] )}</Box>\n                         //                                              )\n                         //                                         })\n                         //                                    }\n                         //                               </Grid>\n                         //                          )\n                         //                     })\n                         //                }\n                         //                <Grid item xs={2} className={classes.my}>\n                         //                     <Box mb={1}>{element('Total')}</Box>\n                         //                     {\n                         //                          [...new Array(4)].map( (_,idx)=>{\n                         //                               return(\n                         //                                    <Box key={idx} mb={1}>{element( totalEgresos[idx] )}</Box>\n                         //                               )\n                         //                          })\n                         //                     }\n                         //                </Grid>\n                         //           </Grid>\n                         //      </Box>\n                         // </Grid>\n                         }\n                    </Grid>\n               </Box>\n          </>\n     );\n\n};\n","\nimport { styled } from '@mui/system';\nimport { SubTitle } from '../../elements/SubTitle';\n\n\n\nexport const Square = (props) => {\n          \n     const BoxBlue = styled('div')({\n          paddingBlock: '0.5rem',\n          paddingInline:'0.8rem',\n          background: '#A7DDFF',\n          border: '1px solid #005BA5',\n          borderRadius: '5px',\n          marginTop:'0.5rem'\n     });\n\n     return(\n          <BoxBlue>\n               <SubTitle style={{textAlign: 'center'}}>\n                    {props.title}\n               </SubTitle>\n\n               <div style={{marginTop:'0.5rem'}}>                              \n                    {props.children}\n               </div>\n          </BoxBlue>\n     )\n};","\n\nimport { styled } from '@mui/system';\nimport { Text } from '../../elements/Text';\n\n\nexport const CheckBox = (props) => {\n\n    const Box = styled('div')({\n        paddingBlock: '0.5rem',\n        display: 'flex',\n        flexWrap: 'wrap'\n    });\n\n    const styleInput = {\n        width:'45%',\n        margin:'0.2rem',\n    };\n\n\n    return(\n        <Box>\n            {\n                Object.keys(props.labels).map( (label,idx) => {\n                    return(\n                        <div key={idx} style={styleInput}> \n                            <input \n                                type=\"checkbox\" \n                                id={label} \n                                checked={ props.labels[label] }\n                                style={{ transform:'scale(1.4)', cursor:'pointer'}}\n                                onChange={ e => props.set({ ...props.labels, [label] : e.target.checked }) }\n                            />\n                            <label htmlFor={label}>\n                                <Text element={false} style={{marginLeft:'0.5rem', cursor:'pointer'}}>\n                                    {label} \n                                </Text>\n                            </label>\n                        </div>\n                    )\n                })\n            }\n        </Box>\n    )\n}\n","import React, { useState, } from 'react';\nimport { Box, Grid } from '@mui/material';\nimport Link from '@mui/material/Link'\nimport { styled } from '@mui/system';\n\n// Componentes:\nimport { Title } from '../elements/Title';\nimport { SubTitle } from '../elements/SubTitle';\nimport { Text } from '../elements/Text';\nimport { Square } from './components/Square';\nimport { CheckBox } from './components/CheckBox';\n\n// helpers\nimport { unitToTwoUnit } from '../helpers/unitToTwoUnit';\nimport { externalPage, resourceServer_backend } from '../../env';\nimport { addToken }  from '../helpers/token';\n\n\n\nexport const HistoriaTab = ({ dt }) => {\n\n     const { urlPage } = externalPage ;\n\n     const { postServer, urlServer } = resourceServer_backend ;\n     \n     const styleTitle = {\n          background: '#0d47a1'\n     }\n\n     const styleBoxContainer = {\n          background: 'white',\n          padding: '0.5rem'\n     }\n\n     const ButtonPage = styled('button')({\n          paddingBlock: '0.5rem',\n          paddingInline: '0.8rem',\n          background: '#A7DDFF',\n          border: '1px solid #005BA5',\n          borderRadius: '5px',\n          '&:hover': {\n               background: 'white',\n          },\n     });\n\n     const { date } = JSON.parse( localStorage.getItem('Admision') );\n\n     const [periodo, setPeriodo] = useState({\n          startDate: date,\n          endDate: new Date().toLocaleString()\n                              .split(',')[0].split('/')\n                              .reverse().map( num => unitToTwoUnit(num) ).join('-')\n     });\n\n     const [dashFlags, setDashFlags] = useState({\n          ...['Pres. Arterial', 'Pres. Cardiaca', 'Temp. Corportal', 'Frec. Respiratoria']\n               .reduce( (acc, cur) => {\n                    acc[ cur ] = true  ;\n                    return acc \n               }, {})\n     });\n\n     const [balFlags, setBalFlags] = useState({\n          ...['Ingresos', 'Egresos']\n               .reduce( (acc, cur) => {\n                    acc[ cur ] = true  ;\n                    return acc \n               }, {})\n     });\n\n     const [respFlags, setRespFlags] = useState({\n          ...[\n               'FIO2', 'Head', 'Power', 'Mean Press', 'Evaluaciones', 'Peak Press', \n               'Plateau Press', 'Modes', 'FR', 'Signal Press', 'Signal Flow', \n          ].reduce( (acc, cur) => {\n               acc[ cur ] = true  ;\n               return acc \n          }, {})\n     });\n\n     const [formFlags, setFormFlags] = useState({\n          ...[\n               'Ind. Médicas', 'Ctr. Hemodinámico', 'Ingresos', 'Bal. Hídrico',\n               'Exam. físico', 'Observaciones', 'Programación'\n          ]\n          .reduce( (acc, cur) => {\n               acc[ cur ] = true  ;\n               return acc \n          }, {})\n     });\n     \n\n     const handleClick = () => {\n          \n          const idPatient = JSON.parse( localStorage.getItem('idPatient') );\n\n          const objData = {\n               ...idPatient,\n               periodo,\n               dashFlags,\n               balFlags,\n               respFlags,\n               formFlags,\n          };\n\n          postServer.body = JSON.stringify( objData );\n          fetch(`${urlServer}?query=pagePrinted`, addToken(postServer, \"application/json\" ))\n               .catch( err => console.log( \"Error en envio de parametros para impresion\",err));\n     };\n\n\n     return (\n          <>\n               <Box style={styleTitle}>\n                    <Title color={'white'} >\n                         Versión de impresión de  la historia clínica\n                    </Title>\n               </Box>\n               \n               <Box style={styleBoxContainer}>\n\n                    <Grid\n                         container\n                         direction=\"row\"\n                         justifyContent=\"space-between\"\n                         alignItems=\"center\"\n                         mb={1}\n                         spacing={1}\n                    >\n                         <Grid item xs={9}>\n                              <SubTitle >\n                                   Selección de parámetros  para la impresión de la historía clínica:\n                              </SubTitle>\n\n                         </Grid>\n                         <Grid\n                              item xs={3}\n                              style={{ textAlign: 'end' }}\n                         >\n                              <ButtonPage onClick={ ()=>handleClick() }>\n                                   <Link\n                                        target=\"_blank\"\n                                        href={urlPage}\n                                        underline=\"hover\"\n                                        color=\"inherit\"\n                                   >\n                                        <Text>\n                                             Versión de Impresión\n                                        </Text>\n                                   </Link>\n                              </ButtonPage>\n\n                         </Grid>\n                    </Grid>\n\n\n                    <Grid\n                         container\n                         spacing={1}\n                         direction=\"row\"\n                         justifyContent=\"space-between\"\n                         alignItems=\"stretch\"\n                    >\n\n                         <Grid item xs={5}>\n\n                              <Square title='Período'>\n\n                                   Desde:\n                                   <input\n                                        type='date'\n                                        min={date.replace(/[ ]/g, \"\").split(':')[0]}  // \"2018-01-01\"\n                                        max={`${periodo.endDate}`}    // \"2018-01-01\"\n                                        value={`${periodo.startDate}`}\n                                        onChange={(e) => setPeriodo({ ...periodo, startDate: e.target.value })}\n                                   />\n\n                                   <span style={{ marginLeft: '0.5rem' }}>\n                                        Hasta:\n                                        <input\n                                             type='date'\n                                             min={date.replace(/[ ]/g, \"\").split(':')[0]}\n                                             max={`${periodo.endDate}`}\n                                             value={`${periodo.endDate}`}\n                                             onChange={(e) => setPeriodo({ ...periodo, endDate: e.target.value })}\n                                        />\n                                   </span>\n                              </Square>\n\n\n                              <Square title='Balance Hídrico'>\n                                   <CheckBox labels={balFlags} set={setBalFlags} />\n                              </Square>\n\n                              <Square title='Formulario'>\n                                   <CheckBox labels={formFlags} set={setFormFlags} />\n                              </Square>\n\n                         </Grid>\n                         <Grid item xs={7}>\n\n                              <Square title='Respiratorio'>\n                                   <CheckBox labels={respFlags} set={setRespFlags} />\n                              </Square>\n\n                              <Square title='Dashboard'>\n                                   <CheckBox labels={dashFlags} set={setDashFlags} />\n                              </Square>\n                              \n\n                         </Grid>\n\n                    </Grid>\n\n               </Box>\n          </>\n\n     );\n\n};\n","import React,{useEffect} from \"react\";\n\nimport * as d3 from \"d3\";\nimport { MediaQuery } from '../../MediaQuery';\nimport { unitToTwoUnit } from '../helpers/unitToTwoUnit'\n\nexport const PlotTimeLine =({ DateNow, set })=>{\n\n     const { _xl, _lg } = MediaQuery() ;\n\n     const svgRef = React.useRef(null);\n     const margin = {top:2, right:(_xl?13:10), bottom: _xl?20:15, left: 10 } ;\n\n     useEffect(() => {\n\n          const svgEl = d3.select(svgRef.current);\n          svgEl.selectAll(\"*\").remove(); // Clear svg content before adding new elements\n\n          const width  = svgEl._groups[0][0].clientWidth  ;\n          const height = svgEl._groups[0][0].clientHeight ;\n\n          const svg = svgEl.append(\"g\")\n                         .attr(\"width\", `${width}`)\n                         .attr(\"height\",`${height}`)\n\n          const arrowD = \"M4.52043 19.2962L15.0835 11.0951C15.3592 10.8814 15.5766 10.6221 15.7215 10.3343C15.8663 10.0464 15.9353 9.73664 15.9237 9.42531C15.9122 9.11399 15.8206 8.80821 15.6547 8.52815C15.4889 8.24809 15.2527 8.00011 14.9617 7.80059L4.39863 0.56077C4.00731 0.292231 3.53088 0.12098 3.02532 0.0671116C2.51977 0.0132435 2.00604 0.0789908 1.54434 0.256639C1.08264 0.434287 0.692123 0.716471 0.41866 1.07008C0.145197 1.42369 0.000163579 1.83407 0.000451691 2.25307V17.654C-0.00923542 18.0877 0.137083 18.5141 0.42104 18.8797C0.704997 19.2453 1.11399 19.5339 1.59669 19.7093C2.0794 19.8847 2.61435 19.939 3.13449 19.8655C3.65462 19.7921 4.1367 19.594 4.52043 19.2962Z\" ;\n\n          const arrowI = \"M11.4046 0.600851L0.841533 8.81199C0.565812 9.02567 0.348356 9.28497 0.203511 9.57279C0.058666 9.86061 -0.010276 10.1704 0.00123736 10.4817C0.0127507 10.7931 0.104456 11.0988 0.270302 11.3789C0.436147 11.659 0.672364 11.9069 0.963365 12.1065L11.5264 19.2962C11.9137 19.5622 12.3846 19.7329 12.8847 19.7886C13.3849 19.8444 13.894 19.7829 14.3535 19.6113C14.8131 19.4397 15.2043 19.165 15.4823 18.8187C15.7602 18.4725 15.9135 18.0687 15.9246 17.654V2.20302C15.9246 1.77274 15.7713 1.35187 15.4836 0.992374C15.1959 0.632881 14.7864 0.350505 14.3057 0.180107C13.825 0.00970898 13.2941 -0.0412552 12.7785 0.0335153C12.2629 0.108286 11.7853 0.305517 11.4046 0.600851Z\";\n\n          const meses = ( numMesUTC ) =>{\n               switch (numMesUTC+1) {\n                    case 1:\n                         return 'Enero'\n                    case 2:\n                         return 'Febrero'\n                    case 3:\n                         return 'Marzo'\n                    case 4:\n                         return 'Abril'\n                    case 5:\n                         return 'Mayo'\n                    case 6:\n                         return 'Junio'\n                    case 7:\n                         return 'Julio'\n                    case 8:\n                         return 'Agosto'\n                    case 9:\n                         return 'Septiembre'\n                    case 10:\n                         return 'Octubre'\n                    case 11:\n                         return 'Noviembre'\n                    case 12:\n                         return 'Diciembre'\n                    default:\n\n               }\n          }\n          const azul = '#005BA5' ;\n          const gris = '#B5DCE5' ;\n          const radio = _xl ? 22 : _lg ? 16 : 12\n          const formatDay = d3.timeFormat(\"%e\");\n          const middle_y = 2*height/3 ;\n\n          const ms_day = 86400000 ;\n          let dateNow = new Date( DateNow[2], DateNow[1]-1, DateNow[0])\n\n          const limIzq = dateNow.getTime()-ms_day*3 ;\n          const limDer = dateNow.getTime()+ms_day*3 ;\n\n          const xScale = d3.scaleLinear()\n                         .domain( [ limIzq  , limDer ] )\n                         .range( [margin.left, width-margin.right] );\n\n\t\t// Construccion del eje\n          svg.append('line')\n                    .attr('id','line')\n\t\t  \t\t.attr('x1', margin.left )\n\t\t\t\t.attr('y1', middle_y )\n\t\t\t\t.attr('x2', width-margin.right )\n\t\t\t\t.attr('y2', middle_y )\n\t\t\t\t.style('stroke','#AFC3EC')\n\t\t\t\t.style('stroke-width', _xl?4:_lg?3:2)\n\n\t\t// Flechas\n    const cry = _xl ? 2 :_lg ? 1.7 : 1\n    const crx = _xl ? 1.8 :_lg ? 1.5 : 1\n\t\tsvg.append('path')\n      .attr('id','arrowD')\n\t\t\t.attr('d',arrowD )\n\t\t\t.attr('fill', azul )\n\t\t\t.attr('transform', `translate( ${width-margin.right-15*crx }, ${middle_y - 9*cry }) scale(${cry})`)\n               .on( 'mouseover',()=> d3.select('#arrowD').style('cursor','pointer'))\n               .on( 'mousedown',()=>{\n                    dateNow.setTime( dateNow.getTime() + ms_day )\n                    set({ fecha:[dateNow.getUTCDate(), dateNow.getUTCMonth()+1, dateNow.getUTCFullYear()] })\n               })\n               .on('mouseout', () => {  d3.select(`#cir${2}`).style( 'fill', azul )\n                                   })\n\n\t\tsvg.append('path')\n               .attr('id','arrowI')\n\t\t\t.attr('d',arrowI )\n\t\t\t.attr('fill', azul )\n\t\t\t.attr('transform', `translate( ${margin.left}, ${middle_y - 9*cry }) scale(${cry})`)\n               .on( 'mouseover',()=> d3.select('#arrowI').style('cursor','pointer'))\n               .on( 'mousedown',()=>{\n                    dateNow.setTime( dateNow.getTime() - ms_day )\n                    set({ fecha:[dateNow.getUTCDate(), dateNow.getUTCMonth()+1, dateNow.getUTCFullYear()] })\n               })\n               .on('mouseout', () => {  d3.select(`#cir${2}`).style( 'fill', azul )\n                                   })\n\n          //Elementos de marca\n          const cir =  ( date, idx ) => {\n                    svg.append('circle')\n                         .attr('id',`cir${idx}`)\n                         .attr('cx', xScale(date.getTime()) )\n                         .attr('cy', middle_y )\n                         .attr('r', radio )\n                         .style('fill', gris)\n          };\n\n          const cirSup =  ( date, idx ) => {\n                    svg.append('circle')\n                         .attr('id',`cirSup${idx}`)\n                         .attr('cx', xScale(date.getTime()) )\n                         .attr('cy', middle_y )\n                         .attr('r', radio )\n                         .style('fill', 'transparent' )\n                         .on('mouseover',() => {  d3.select(`#cirSup${idx}`).style( 'cursor','pointer')\n                                                  d3.select(`#cir${idx}`).style( 'fill', '#46a7b8' )\n                                                  d3.select(`#text${idx}`).style( 'fill', 'white' );\n                                             })\n                         .on('mouseout', () => {  d3.select(`#cir${idx}`).style( 'fill', gris )\n                                                  d3.select(`#text${idx}`).style( 'fill', azul );\n                                                  d3.select(`#cir${2}`).style( 'fill', azul );\n                                                  d3.select(`#text${2}`).style( 'fill', 'white' );\n                                             })\n                         .on('mousedown',() => {\n                              set({ fecha:[date.getUTCDate(), date.getUTCMonth()+1, date.getUTCFullYear()] })\n                         });\n          };\n\n          const offSetY = _xl?5:4 ;\n          const text = ( date,idx ) => {\n                    svg.append('text')\n                         .attr('id',`text${idx}`)\n                         .attr('x', xScale(date.getTime()) - `${ formatDay( date ) }`.length*(_xl?7:_lg?5:4) )\n                         .attr('y', middle_y+offSetY )\n                         .attr('fill', azul )\n                         .text(`${unitToTwoUnit( formatDay( date ) )}`)\n                         .style('font-size', _xl ? '22px' : _lg ? '16px': '12px' )\n                         .style('lineHeight', _xl ? '1.5rem' : _lg ? '1.2rem': '0.8rem' )\n                         .style('font-weight', 'bold')\n\n          };\n\n          const mark = ( date, idx )=>{\n               cir(date,idx);\n               text(date,idx);\n               cirSup(date,idx);\n          }\n\n\n          // Desplegado de marcas\n          [-2,-1,0,1,2].forEach( (val,idx) =>{\n                    setTimeout( ()=>{\n                         d3.select(`#cir${2}`).style('fill', azul )\n                         d3.select(`#text${2}`).style( 'fill', 'white' )\n                    },200)\n                    let d = new Date( dateNow );\n                    d.setTime( dateNow.getTime() + ms_day*val )\n\n                    return(\n                         mark( d, idx )\n                    )\n\n          })\n\n          // Nombre de los meses\n          const mesNow = meses( dateNow.getUTCMonth() ) ;\n\n          let day = new Date( dateNow );\n          day.setTime( dateNow.getTime() + ms_day )\n          const mesTom = meses( day.getUTCMonth( )  ) ;\n\n          day.setTime( dateNow.getTime() - ms_day )\n          const mesAft = meses( day.getUTCMonth( )  ) ;\n\n          const flag = mesNow===mesTom && mesNow===mesAft\n\n          const offSetTextY = _xl ? 35 : _lg ? 30: 25 ;\n          const offSetTextX = _lg ? (flag ? mesNow.toString().length*6 : mesTom.toString().length*5 ): (flag ? mesNow.toString().length*4 : mesTom.toString().length*4 )\n\n          // mes Actual\n          svg.append('text')\n               .attr('x', flag ? width/2 -offSetTextX : width/4 -offSetTextX )\n               .attr('y', middle_y - offSetTextY )\n               .attr('fill', azul )\n               .text( mesNow === mesAft ? mesNow : mesAft )\n               .style('font-size', _xl ? '28px' : _lg ? '22px': '16px' )\n               .style('lineHeight', _xl ? '1.5rem' : _lg ? '1.2rem': '0.8rem' )\n               .style('font-weight', 'bold')\n\n          // mes Posterior\n          svg.append('text')\n               .attr('x',  3*width/4 - offSetTextX )\n               .attr('y', middle_y - offSetTextY )\n               .attr('fill', azul )\n               .text( flag ?' ':`${ mesTom }`)\n               .style('font-size', _xl ? '28px' : _lg ? '22px': '16px')\n               .style('lineHeight', _xl ? '1.5rem' : _lg ? '1.2rem': '0.8rem' )\n               .style('font-weight', 'bold')\n    })\n\n     return(\n          <svg ref={svgRef} width={'100%'} height={_xl ? '90' : _lg ? '80': '60'} />\n     );\n}\n","import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport {PlotTimeLine} from './PlotTimeLine' ;\n\nimport { Stl } from '../../Stl';\n\nimport { Title } from '../elements/Title' ;\nimport { Field } from '../elements/Field' ;\n\n//redux\nimport { useDispatch } from 'react-redux' ;\nimport { assignDay } from '../../../../redux/dayNowSlice' ;\nimport { unitToTwoUnit } from '../helpers/unitToTwoUnit';\n\n\nexport const TimeLine =  () =>{\n\n     const classes = Stl() ;\n     const dispatch = useDispatch();\n\n     // const [date,SetData] = StateTimeLine();\n     // Fecha Actual\n     const dayNow = new Date();\n     const day =  unitToTwoUnit( dayNow.getUTCDate() );\n     const month =  unitToTwoUnit( dayNow.getUTCMonth()+1 );\n     const year = dayNow.getUTCFullYear();\n\n     const [ date, SetData ] = useState({\n          fecha: [day, month, year]\n     });\n\n     dispatch( assignDay(date.fecha) );\n\n     const handleHoy =()=>{\n          SetData({fecha: [day,month,year]});\n     };\n\n     const title = (value) => {\n\n     const styleTitle = [classes.bg_blue].join(' ');\n\n          return(\n               <Box className={[styleTitle, classes.just_content_spa_bet].join(' ')}>\n                    <Title color={'white'}>\n                         {value}\n                    </Title>\n                    <Box\n                         py={0.5}\n                         px={0.5}\n                         mr={1}\n                         onClick={()=> handleHoy()}\n                         className={[classes.bg_white, classes.br_03, classes.button, classes.row].join(' ')}\n                    >\n                         <Field color={'blue'}>\n                              Hoy\n                         </Field>\n                    </Box>\n               </Box>\n          )\n     };\n\n          return(\n               {\n                    timeLine:()=>{\n                         return(\n                              <Box my={1} className={ classes.bg_white }>\n\n                                   {title('Linea de tiempo')}\n\n                                   <PlotTimeLine DateNow={date.fecha} set={SetData}/>\n\n                              </Box>\n                         )\n                    },\n                    dayNow: date.fecha\n               }\n          );\n\n    }\n","import React, { useEffect } from 'react';\nimport { Box, Grid } from '@mui/material';\nimport { Redirect } from 'react-router-dom';\n// https://cocv3.cysce.com/coc/panel/uci/interface1\n\n//Componentes\nimport { HistoriaClinica } from './components/monitorPaciente/HistoriaClinica';\nimport { InformacionClinica } from './components/monitorPaciente/InformacionClinica';\nimport { TabInfoClinica } from './components/monitorPaciente/TabInfoClinica';\nimport { Balance } from './components/monitorPaciente/Balance';\nimport { Examenes } from './components/monitorPaciente/Examenes';\nimport { Alertas } from './components/monitorPaciente/Alertas';\nimport { Tabs } from './components/monitorPaciente/Tabs';\nimport { Dashboard } from './components/dashboard/Dashboard';\nimport { Laboratorio } from './components/laboratorio/Laboratorio';\nimport { Imagenes } from './components/imagenes/Imagenes';\n// import { Respiratorio } from './components/respiratorio/Respiratorio';\nimport { Respiratorio } from './components/respiratorio/Respiratorio';\nimport { Enfermeria } from './components/enfermería/Enfermeria';\nimport { BalanceTab } from './components/balance/BalanceTab';\nimport { HistoriaTab } from './components/historia/HistoriaTab';\nimport { Stl } from './Stl';\nimport { TimeLine }  from './components/timeLine/TimeLine';\n\nimport { Title } from './components/elements/Title' ;\n\n// Informacion del formulario\nimport { getFromServer } from '../uciTablet/recursosFHIR/getFromServer' ;\n\n// store\nimport { useDispatch } from 'react-redux'\nimport { assignId } from '../../redux/patientSlice'\nimport { setToken } from './components/helpers/token';\n\n\n\nconst getDataFormulario = async() => {\n     console.log( \"interface:\", JSON.parse( localStorage.getItem('idPatient') ) )\n     const { data } = await getFromServer( JSON.parse( localStorage.getItem('idPatient') ) ) ;\n     localStorage.setItem('Data', JSON.stringify( data, null, 2) ) ;\n};\n\nconst Monitor = () => {\n     //console.clear();\n     const dispatch = useDispatch();\n\n     const classes = Stl() ;\n\n     const { timeLine, dayNow } = TimeLine() ;\n\n     const {id} = JSON.parse( localStorage.getItem('idPatient') );\n\n     useEffect( ()=>{\n          getDataFormulario();\n          dispatch( assignId(id) );\n          setToken();\n     }) ;\n\n\n     const tabArray = [\n          {obj:<Dashboard dt={[ id, dayNow ]}/>},\n          {obj:<Laboratorio  />},\n          {obj:<Imagenes  />},\n          {obj:<Respiratorio dt= {[ id, dayNow ]} />},\n          {obj:<Enfermeria dt= {[ id, dayNow ]} />},\n          {obj:<BalanceTab dt={[ id, dayNow ]}/>},\n          {obj:<HistoriaTab dt={[ id, dayNow ]} />}\n     ];\n\n     const { tabObj, tabIndex } = Tabs(Stl);\n\n     document.getElementById(\"root\").style.backgroundColor='#d1e1e5' ;\n\n     return (\n\n          <div\n               id=\"interface\"\n               style={{ width: '100%' }}\n          >\n               {\n                    id===1\n                         ?\n                              <Redirect to=\"/coc/panel/uci/home\" />\n                         :\n                              <span/>\n               }\n               <Box\n                    className={ classes.bg_blue }\n               >\n                    <Title color={'white'}>\n                         Perfil Paciente\n                    </Title>\n               </Box>\n\n               <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"space-evenly\"\n                spacing={1}\n              >\n\n                    {/* Columna izquierda */}\n                    <Grid item xs={3} >\n                         <Box sx={{pr:1,py:1}}>\n\n                              <HistoriaClinica  data={[ id ]}  stl={classes}  />\n\n                              <InformacionClinica  data={[ id ]} stl={classes} />\n\n                              <TabInfoClinica data={[ id, dayNow ]}  stl={classes}/>\n\n                              <Balance data={[ id, dayNow ]} stl={classes}/>\n\n                              <Box mt={1}>\n                                   <Grid container spacing={2} >\n\n                                   <Grid item xs={6} >\n                                        <Examenes  data={[ id, dayNow ]} stl={classes} />\n                                   </Grid>\n\n                                   <Grid item xs={6} >\n                                        <Alertas data={[ id, dayNow ]} stl={classes}/>\n                                   </Grid>\n\n                                   </Grid>\n                              </Box>\n\n                         </Box>\n                    </Grid>\n\n                    {/* Columna Derecha */}\n                    <Grid item xs={9}>\n                         <Box lg={{pl:1}} >\n\n                              { tabObj() }\n\n                              { timeLine() }\n\n                              {\n                                  tabArray[tabIndex].obj\n                              }\n\n                         </Box>\n                    </Grid>\n               </Grid>\n          </div>\n     );\n};\n\nexport default Monitor;\n"],"names":["Tabs","stl","classes","Stl","_useState","useState","value","_useState2","_slicedToArray","idx","setIdx","tabObj","_jsx","Box","mt","px","py","className","bg_white","children","Grid","container","direction","wrap","spacing","coloumns","map","indx","item","xs","style","display","Button","variant","color","fullWidth","bg_blue","button_tab","join","onClick","changeIdx","Field","SubTitle","tabIndex","DashBox","props","_jsxs","pl","title","meanArray","array","mean","length","toFixed","PlotGraficas","_ref2","data","svgRef","React","_MediaQuery","MediaQuery","_xl","_lg","useEffect","_ref","color_fill","date","hour","Date","toLocaleString","split","reverse","points","sort","a","b","concat","prom","margin","top","right","bottom","left","m","offSetY","fontSize","svgEl","d3","current","selectAll","remove","width","_groups","clientWidth","height","clientHeight","svg","append","attr","xScale","domain","range","nice","call","ticks","yScale","d","n","i","yAxis","tickSizeOuter","tickSizeInner","g","enter","datum","x","y","focus","focusText","on","event","mousemove","dateTime","getTime","x0","invert","p","findIndex","arr","Math","abs","text","reduce","acc","_","replace","Plot","ref","DashContentGraficas","justifyContent","alignItems","units","PlotSindromatico","svgSindro","nVertices","ofst_mag","pi","PI","ang_i","Cos","ang","cos","Sen","sin","beta","rb","r","fontLabel","xc","yc","pX","pY","points_poly","_toConsumableArray","Array","varScale","dom","colorScale","rombo","push","textTotal","e","flag","document","getElementById","name","innerHTML","slice","DashContentSindro","style_title","bg_blue_sindromatico","px_0","clinico","laboratorio","BoxSindromatico","open","setOpen","_useState3","_useState4","index","setIndex","ColorConvencion","styleName","fontFamily","border","paddingInline","paddingBlock","marginLeft","borderRadius","fontWeight","justifyItems","textAlign","renglon","marginBlock","_objectSpread","background","viewBox","fill","xmlns","Collapse","in","timeout","unmountOnExit","v","handleIndex","font_monserrat","text_color_title","Text","key","obj","svgMed","svgMed2","svgEl2","offsetLeft","offsetX","offsety","offSetMedicamentos","heightFila","widthMarca","hours","fontSizeSub","fontSizeBod","k","limits","parseInt","categorias","forEach","rtn","item2","categoria","filasMed","count","medicamentos","categ","medicamento","svg2","words","word","subLine","console","log","cut","arrayHours","find","dif","getDate","getMonth","h","intervaloValue","getHours","intervaloUnit","svg4","isNaN","mouseOn","cuadro","textCuadro","_e$originalTarget","_e$originalTarget$att","_e$originalTarget$att2","_e$toElement","_e$toElement$attribut","_e$toElement$attribut2","_e$originalTarget2","_e$originalTarget2$at","_e$originalTarget2$at2","_e$toElement2","_e$toElement2$attribu","_e$toElement2$attribu2","originalTarget","attributes","x1","nodeValue","toElement","y1","dataText","dataMed","dosisValue","dosisUnit","lenMax","svgh","rigth","PlotMedicacion","maxHeight","overflowY","scrollBehavior","colorGround","Container","styled","TitleParameter","ValueParameter","TitleTendencia","ValueTendencia","paddingLeft","Square","_ref$title","_ref$value","_ref$unids","unids","_ref$tendencia","tendencia","_ref$prom","floor","random","styleSquare","flexDirection","processValueDate","promedio","sum","parseFloat","ultValue","fixed","num","getData","dayNow","id","setData","setMsn","dte","unitToTwoUnit","urlServer","resourceServer","requestOptionsGet","fetch","then","resp","JSON","parse","total","metricsObj","entry","resource","identifier","body","component","comp","code","valueString","metricStatistics","filter","catch","err","Ventilacion","dt","_dt","metrics","setMetrics","msn","asycFun","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_context","prev","next","getLastHour","stop","apply","arguments","_Fragment","label","align","Title","getMedicacion","setMedicacion","response","_yield$response$json","json","addToken","sent","link","category","medicationReference","daysSupply","unit","whenHandedOver","quantity","_x","_x2","_x3","variables","dataFormat","PresArterial","FrecCardiaca","TempCorporal","FrecRespiratoria","sepsis","shock","ventilatorio","transplante","renal","neurologico","to24hours","hour12","time","addNum","toLowerCase","indexOf","variablesControlHemo","requestOptionsPost","getInfo","setVitalSings","dateFromTimeLine","bundle","vitalSings","labels","config","respBundle","objBundle","resources","paramJornada","parametros","resourceType","type","jornada","stringify","headers","rsc","arrayPar","coding","act","_parametros$0$find","_parametros$1$find","dataDia","p2","dataNoche","Object","keys","assign","Dashboard","cuadros","medicacion","plot","Laboratorio","PlotGrafica","useRef","yData","xData","xScaleData","x_axis","scale","tickSize","select","curve","Barra","interval","setNormal","normal","ajustado","exp","dx","dragHandler","Input","setLabel","size","caretColor","onChange","valueArray","target","CellText","intervals","normalInterval","_MediaQuery2","_useState5","_useState6","setValue","onBlur","intervalos","localStorage","getItem","setItem","field","onKeyDown","getParametros","setParametros","_x4","Obj","marginRight","square","_MediaQuery3","UnidParameter","_MediaQuery4","_MediaQuery6","Parr","_MediaQuery7","whiteSpace","flexWrap","_MediaQuery8","position","maxWidth","zIndex","paddingTop","Draggable","Alert","boxShadow","transition","Svg","cursor","FunctionAlert","idPat","day","_MediaQuery9","displayAlert","setDisplayAlert","h_color","state","RenderAlert","visibility","requestOptionsPut","url","fullUrl","objIdx","makeAlerts","fillOpacity","paddingRight","paddingBottom","_ref3","_ref3$idPat","_ref3$title","_ref3$value","_ref3$tendencia","_ref3$prom","_ref3$array","_ref3$id","_FunctionAlert","_FuntionPlot","displayPlot","setDisplayPlot","styleDraggable","RenderPlot","FuntionPlot","makeStyles","theme","bottomP","useStyle","styleContainer","fleWrap","alignContent","rx","ry","stroke","strokeWidth","getHoMiSe","stringDate","ms","undefined","millis","PlotFlowRespiratorio","_ref$point","point","setPoint","_ref$len","len","setLen","delay","rect","setRect","useMemo","deltaTime","idxArray","timeGet","flagZero","idxItem","makeData","namePlot","fontTitle","leftSize","pr0","pr1","part","backColor","lg","y0","wheel","shiftKey","deltaLen","sign","wheelDeltaY","movX","p0","p1","mouseOut","BarraPlot","set","bar","sourceEvent","Info","displayCuadro","setDisplay","Cuadro","StyleInfo","handleClick","Catalogo","setSelect","StyleCat","Item","transform","Label","ObjRender","padding","htmlFor","defColor","low","hight","handleSelect","removeItem","checked","setHour","diferencia","hourServer","hourLocale","difHoraria","dataHours","flagDate","TimeLine","Block","StyleTitle","marginRigth","title1","title2","Tabla","Squares","args","marginBottom","setLabels","cod","getLabels","xl","color_index","Plots","stylePlots","_useState7","_useState8","columns","dta_demo","dta","dta_eval","dta_mode","mode","Respiratorio","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","my_1","f","hourRegistro","extractData","isArray","idxObj","_obj$resource","idxLabel","orderJornada","objs","sinAsignar","_timeEvent","string","_string$split","_string$split2","t","timeEvent","_timeEvent2","search","dia","noche","getDataEnfermeria","array_bundle_disp","tablasProgramacion","array_bundle_event","dataEvent","daily","Bundle_request","fields","PlotGantt","svgAxis","svgPlot","dataJornada","fontSizeAxis","fontSizeLegend","marginPlot","svgP","offsetHeight","intervalY","Enfermeria","setJornada","BtnJornada","Stack","jrd","firstChild","styleLabels","lineHeight","styleSinAsignar","styleSi","styleNo","pb","text_white","my_0","flexGrow","marginTop","PlotDailyCum","input","pop","output","columnPos","columnNeg","w","nRects","yScaleAxis","BalanceTab","hidratacionBase","setDta","idPatient","styleText","subtitle","text_bold","mx_left","element","bg_gray2","pt","pr","center","my","mb","mr","idx1","BoxBlue","CheckBox","styleInput","_defineProperty","HistoriaTab","urlPage","externalPage","postServer","resourceServer_backend","ButtonPage","startDate","endDate","periodo","setPeriodo","cur","dashFlags","setDashFlags","balFlags","setBalFlags","respFlags","setRespFlags","formFlags","setFormFlags","objData","Link","href","underline","min","max","PlotTimeLine","DateNow","meses","numMesUTC","azul","gris","radio","formatDay","middle_y","ms_day","dateNow","limIzq","limDer","cry","crx","setTime","fecha","getUTCDate","getUTCMonth","getUTCFullYear","cir","cirSup","val","setTimeout","mesNow","mesTom","mesAft","offSetTextY","offSetTextX","toString","dispatch","useDispatch","month","year","SetData","assignDay","styleTitle","just_content_spa_bet","br_03","button","row","timeLine","getDataFormulario","_yield$getFromServer","getFromServer","_TimeLine","assignId","setToken","tabArray","Imagenes","_Tabs","backgroundColor","Redirect","to","sx","HistoriaClinica","InformacionClinica","TabInfoClinica","Balance","Examenes","Alertas"],"sourceRoot":""}